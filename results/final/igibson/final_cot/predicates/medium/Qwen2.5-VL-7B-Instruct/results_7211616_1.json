{"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["no", 5.990074896544684e-06, 1.856089147622697e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as indicated by its current position and orientation. It seems to be able to reach outwards but not necessarily downwards to the floor where the book is located.\n\nGiven these observations, the robotic arm does not appear to be positioned in a way that allows it to easily pick up the book from the floor. The arm is oriented more towards the right side of the room rather than directly towards the book.\n\nTherefore, based on the current position and orientation of the robotic arm, the book_1 is not in reach of the agent.", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as indicated by its current position and orientation. It seems to be able to reach outwards but not necessarily downwards to the floor where the book is located.\n\nGiven these observations, the robotic arm does not appear to be positioned in a way that allows it to easily pick up the book from the floor. The arm is oriented more towards the right side of the room rather than directly towards the book.\n\nTherefore, based on the current position and orientation of the robotic arm, the book_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 5.990074896544684e-06, 1.856089147622697e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as indicated by its current position and orientation. It seems to be able to reach outwards but not necessarily downwards to the floor where the book is located.\n\nGiven these observations, the robotic arm does not appear to be positioned in a way that allows it to easily pick up the book from the floor. The arm is oriented more towards the right side of the room rather than directly towards the book.\n\nTherefore, based on the current position and orientation of the robotic arm, the book_1 is not in reach of the agent.", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as indicated by its current position and orientation. It seems to be able to reach outwards but not necessarily downwards to the floor where the book is located.\n\nGiven these observations, the robotic arm does not appear to be positioned in a way that allows it to easily pick up the book from the floor. The arm is oriented more towards the right side of the room rather than directly towards the book.\n\nTherefore, based on the current position and orientation of the robotic arm, the book_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 7.1496356213174295e-06, 7.28563463781029e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the current position of the robotic arm, it seems to be oriented in such a way that it could potentially reach the book if it were to move its end-effector towards the left side of the room. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the description.\n\nSince the question asks if the book is in reach, and without more specific information about the robotic arm's capabilities, we cannot definitively say whether the book is within the robotic arm's reach. Therefore, based on the limited information provided, we cannot conclusively answer \"Yes\" or \"No\".\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 9, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 11, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 12, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 13, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 14, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 15, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 16, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 17, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 18, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 19, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 20, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 6.354504421324236e-06, 3.570727494661696e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the book relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Book**: The book_1 is on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the room, extending from the wall.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, as it is currently extended horizontally without any vertical movement.\n\nGiven these observations, the robotic arm does not appear to be able to reach the book_1 on the floor due to its current position and the lack of vertical extension.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 9, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 11, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 12, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 13, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 14, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 15, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 16, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 17, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 18, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 19, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 20, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 6.7429714363242965e-06, 3.789015318034217e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor and potentially pick up the book_1. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it can reach the book_1 from its current position.\n\nSince the question asks if the book_1 is in reach of the agent, and considering the general capabilities of robotic arms, it's reasonable to assume that the robotic arm could indeed reach the book_1.", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor and potentially pick up the book_1. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it can reach the book_1 from its current position.\n\nSince the question asks if the book_1 is in reach of the agent, and considering the general capabilities of robotic arms, it's reasonable to assume that the robotic arm could indeed reach the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 6.7429714363242965e-06, 3.789015318034217e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor and potentially pick up the book_1. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it can reach the book_1 from its current position.\n\nSince the question asks if the book_1 is in reach of the agent, and considering the general capabilities of robotic arms, it's reasonable to assume that the robotic arm could indeed reach the book_1.", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending into the room.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor and potentially pick up the book_1. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it can reach the book_1 from its current position.\n\nSince the question asks if the book_1 is in reach of the agent, and considering the general capabilities of robotic arms, it's reasonable to assume that the robotic arm could indeed reach the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 1.3760666661255527e-05, 0.00011729263496818021, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be interacting with a book labeled \"book_1\". The arm is positioned as if it is holding the book, suggesting that the agent (the robotic arm) is indeed holding the book.", true, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be interacting with a book labeled \"book_1\". The arm is positioned as if it is holding the book, suggesting that the agent (the robotic arm) is indeed holding the book.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 1.2234264431754127e-05, 1.2984600289200898e-05, "To determine if the hardback_1 is in reach of the agent, we need to consider the position of the hardback_1 relative to the robotic arm's current position and its range of motion.\n\n1. Identify the location of the hardback_1: It appears to be placed on a small table in the foreground.\n2. Observe the position of the robotic arm: The robotic arm is extended towards the hardback_1, suggesting it is attempting to interact with it.\n3. Assess the reachability: Given the orientation and position of the robotic arm, it seems capable of reaching the hardback_1 without any obstructions.\n\nBased on these observations, the robotic arm appears to be in a position where it can potentially pick up the hardback_1.", true, "<explanation>\nTo determine if the hardback_1 is in reach of the agent, we need to consider the position of the hardback_1 relative to the robotic arm's current position and its range of motion.\n\n1. Identify the location of the hardback_1: It appears to be placed on a small table in the foreground.\n2. Observe the position of the robotic arm: The robotic arm is extended towards the hardback_1, suggesting it is attempting to interact with it.\n3. Assess the reachability: Given the orientation and position of the robotic arm, it seems capable of reaching the hardback_1 without any obstructions.\n\nBased on these observations, the robotic arm appears to be in a position where it can potentially pick up the hardback_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.298260576731991e-05, 1.298260576731991e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned above the table_1, indicating it is in a position where it could potentially interact with the table.\n2. **Table Position**: The table_1 is located on the floor, and its position appears to be within the range of motion of the robotic arm.\n3. **Reachability**: Given the orientation and position of the robotic arm, it seems capable of reaching down to the table_1 without any obstructions.\n\nBased on these observations, the robotic arm appears to be in a position where it can interact with the table_1.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned above the table_1, indicating it is in a position where it could potentially interact with the table.\n2. **Table Position**: The table_1 is located on the floor, and its position appears to be within the range of motion of the robotic arm.\n3. **Reachability**: Given the orientation and position of the robotic arm, it seems capable of reaching down to the table_1 without any obstructions.\n\nBased on these observations, the robotic arm appears to be in a position where it can interact with the table_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 1.7478398149251007e-05, 1.9688091924763285e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm is positioned above the book_1, and its red bounding box indicates that it is close enough to potentially interact with the book_1. Given this information, it appears that the book_1 is indeed within the reach of the agent.", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm is positioned above the book_1, and its red bounding box indicates that it is close enough to potentially interact with the book_1. Given this information, it appears that the book_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["yes", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["no", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["yes", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["yes", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.8888888888888888, "yes_correct": 8, "yes_total": 9, "no_accuracy": 0.4375, "no_correct": 7, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 3, "actions": ["place-next-to(book_1, book_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)", "navigate-to(book_1)", "grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)"]}], "remaining_actions": ["grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)", "navigate-to(book_1)", "grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 5.9568196775217075e-06, 0.00018808949971571565, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the book if it were programmed to do so.\n\nHowever, without specific information about the exact dimensions of the book and the range of motion of the robotic arm, it's difficult to definitively say whether the book is within the arm's reach. For the sake of this question, let's assume the robotic arm has sufficient range to reach the book.\n\nTherefore, based on the assumption that the robotic arm can reach the book, the answer is \"Yes\".", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the book if it were programmed to do so.\n\nHowever, without specific information about the exact dimensions of the book and the range of motion of the robotic arm, it's difficult to definitively say whether the book is within the arm's reach. For the sake of this question, let's assume the robotic arm has sufficient range to reach the book.\n\nTherefore, based on the assumption that the robotic arm can reach the book, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 5.9568196775217075e-06, 0.00018808949971571565, "To determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the book if it were programmed to do so.\n\nHowever, without specific information about the exact dimensions of the book and the range of motion of the robotic arm, it's difficult to definitively say whether the book is within the arm's reach. For the sake of this question, let's assume the robotic arm has sufficient range to reach the book.\n\nTherefore, based on the assumption that the robotic arm can reach the book, the answer is \"Yes\".", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position and orientation of both the book and the robotic arm (agent). The book appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the book if it were programmed to do so.\n\nHowever, without specific information about the exact dimensions of the book and the range of motion of the robotic arm, it's difficult to definitively say whether the book is within the arm's reach. For the sake of this question, let's assume the robotic arm has sufficient range to reach the book.\n\nTherefore, based on the assumption that the robotic arm can reach the book, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 1.8532780813984573e-05, 0.0001321353774983436, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be interacting with an object, which looks like a book. The book is positioned in such a way that it seems to be held by the robotic arm, as it is being moved or manipulated.", true, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be interacting with an object, which looks like a book. The book is positioned in such a way that it seems to be held by the robotic arm, as it is being moved or manipulated.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 2.987104562635068e-05, 2.987104562635068e-05, "To determine if the hardback_1 is in reach of the agent, we need to consider the position of the agent's robotic arm relative to the book. The robotic arm is extended towards the book, indicating that it is positioned to interact with the book. Since the arm is extended and appears to be close enough to touch the book, we can conclude that the hardback_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the hardback_1 is in reach of the agent, we need to consider the position of the agent's robotic arm relative to the book. The robotic arm is extended towards the book, indicating that it is positioned to interact with the book. Since the arm is extended and appears to be close enough to touch the book, we can conclude that the hardback_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["no", 1.746606176311616e-05, 5.412047539721243e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned above the floor, extending towards the left side of the room.\n2. **Table Position**: The table_1 is located on the right side of the room, near the wall, and appears to be at a lower elevation than the robotic arm's current position.\n3. **Reachability**: The robotic arm is currently extended towards the left, and its reach seems to extend beyond the immediate vicinity of the table_1. However, the exact reach of the robotic arm isn't specified, so we must infer based on the visual information provided.\n\nGiven the visual information, the robotic arm does not appear to be directly above or close enough to the table_1 to interact with it immediately. The arm is positioned more towards the left side of the room, and the table_1 is on the right side.\n\nTherefore, the table_1 is not in direct reach of the agent.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned above the floor, extending towards the left side of the room.\n2. **Table Position**: The table_1 is located on the right side of the room, near the wall, and appears to be at a lower elevation than the robotic arm's current position.\n3. **Reachability**: The robotic arm is currently extended towards the left, and its reach seems to extend beyond the immediate vicinity of the table_1. However, the exact reach of the robotic arm isn't specified, so we must infer based on the visual information provided.\n\nGiven the visual information, the robotic arm does not appear to be directly above or close enough to the table_1 to interact with it immediately. The arm is positioned more towards the left side of the room, and the table_1 is on the right side.\n\nTherefore, the table_1 is not in direct reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable book_1": ["no", 3.169849151163362e-05, 2.9866714612580836e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm is shown in the image, and it appears to be positioned above the book_1, suggesting that the arm could potentially pick up the book. However, without more information about the exact dimensions and range of the robotic arm, we cannot definitively say whether the book is within its reach.", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm is shown in the image, and it appears to be positioned above the book_1, suggesting that the arm could potentially pick up the book. However, without more information about the exact dimensions and range of the robotic arm, we cannot definitively say whether the book is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable shelf_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable shelf_1": ["no", 1.4571375686500687e-05, 0.00011702552728820592, "To determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to move objects from the table.\n2. **Shelf_1 Position**: The shelf_1 is located on the wall behind the table, at a height that would require the robotic arm to extend its reach significantly to interact with it.\n3. **Reach Assessment**: Given the current position of the robotic arm, it does not appear to have enough vertical reach to interact with the shelf_1 directly. The arm's current orientation and position suggest it is focused on the table rather than the shelf_1.\n\nBased on this reasoning, the shelf_1 is not in reach of the agent as currently positioned.", false, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to move objects from the table.\n2. **Shelf_1 Position**: The shelf_1 is located on the wall behind the table, at a height that would require the robotic arm to extend its reach significantly to interact with it.\n3. **Reach Assessment**: Given the current position of the robotic arm, it does not appear to have enough vertical reach to interact with the shelf_1 directly. The arm's current orientation and position suggest it is focused on the table rather than the shelf_1.\n\nBased on this reasoning, the shelf_1 is not in reach of the agent as currently positioned.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable book_1": ["yes", 1.1521110536705237e-05, 2.3534488718723878e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm appears to be positioned above the table, and it seems capable of reaching down towards the objects on the table. The book_1 is located on the table, and the robotic arm's position suggests it could potentially grab the book_1. Therefore, based on the positioning, the book_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm appears to be positioned above the table, and it seems capable of reaching down towards the objects on the table. The book_1 is located on the table, and the robotic arm's position suggests it could potentially grab the book_1. Therefore, based on the positioning, the book_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable hardback_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 1.1518499377416447e-05, 2.8129308702773415e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm appears to be positioned above the table, and it seems capable of reaching down towards the objects on the table. The book_1 is located on the table, and the robotic arm's position suggests it could potentially grab the book_1. Therefore, based on the positioning, the book_1 is likely within the reach of the agent.", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm appears to be positioned above the table, and it seems capable of reaching down towards the objects on the table. The book_1 is located on the table, and the robotic arm's position suggests it could potentially grab the book_1. Therefore, based on the positioning, the book_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 1.1518499377416447e-05, 2.8129308702773415e-05, "To determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm appears to be positioned above the table, and it seems capable of reaching down towards the objects on the table. The book_1 is located on the table, and the robotic arm's position suggests it could potentially grab the book_1. Therefore, based on the positioning, the book_1 is likely within the reach of the agent.", true, "<explanation>\nTo determine if the book_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the book_1. The robotic arm appears to be positioned above the table, and it seems capable of reaching down towards the objects on the table. The book_1 is located on the table, and the robotic arm's position suggests it could potentially grab the book_1. Therefore, based on the positioning, the book_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.6456620869576e-05, 3.16738078254275e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned above the counter, extending towards the cabinet_1.\n2. **Cabinet Position**: The cabinet_1 is located on the counter, directly below the robotic arm's current position.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm seems to be in a position where it can reach the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned above the counter, extending towards the cabinet_1.\n2. **Cabinet Position**: The cabinet_1 is located on the counter, directly below the robotic arm's current position.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm seems to be in a position where it can reach the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["yes", 1.4613068742619362e-05, 3.1681272957939655e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. **Agent Position**: The robotic arm is positioned above the counter, extending towards the right side of the image.\n2. **Cabinet Position**: Cabinet_2 is located on the left side of the counter, below the counter surface.\n3. **Reachability**: The robotic arm appears to be able to extend horizontally across the counter to reach the cabinet_2 without any obstructions.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_2 from its current position.", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. **Agent Position**: The robotic arm is positioned above the counter, extending towards the right side of the image.\n2. **Cabinet Position**: Cabinet_2 is located on the left side of the counter, below the counter surface.\n3. **Reachability**: The robotic arm appears to be able to extend horizontally across the counter to reach the cabinet_2 without any obstructions.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_2 from its current position.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 1.4588432350137737e-05, 6.460709846578538e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the sink_1. The image shows the robotic arm positioned above a counter, and the sink_1 appears to be located on this counter. Given the typical height of sinks and the range of motion of a robotic arm, it seems plausible that the sink_1 could be within the reach of the robotic arm.\n\nHowever, without specific information about the exact dimensions and range of the robotic arm, we cannot definitively conclude whether the sink_1 is within reach. For the purpose of this question, we'll assume that the robotic arm has sufficient range to reach the sink_1 based on its typical capabilities.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the sink_1. The image shows the robotic arm positioned above a counter, and the sink_1 appears to be located on this counter. Given the typical height of sinks and the range of motion of a robotic arm, it seems plausible that the sink_1 could be within the reach of the robotic arm.\n\nHowever, without specific information about the exact dimensions and range of the robotic arm, we cannot definitively conclude whether the sink_1 is within reach. For the purpose of this question, we'll assume that the robotic arm has sufficient range to reach the sink_1 based on its typical capabilities.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable spoon_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.6462779967696406e-05, 2.497234527254477e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the cabinet_1. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach into the cabinet. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the cabinet_1 is in reach of the agent, and we have no clear indication from the image that the robotic arm is not capable of reaching the cabinet, we must assume that it is within the agent's reach.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the cabinet_1. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach into the cabinet. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the cabinet_1 is in reach of the agent, and we have no clear indication from the image that the robotic arm is not capable of reaching the cabinet, we must assume that it is within the agent's reach.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 9.056840099219698e-06, 0.00010395911522209644, "To determine if the cabinet_1 is open, I'll look at the image and identify the cabinet labeled as 'cabinet_1'. The cabinet appears to have a closed front door, indicating that it is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image and identify the cabinet labeled as 'cabinet_1'. The cabinet appears to have a closed front door, indicating that it is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 4.985495252185501e-06, 0.00014832256420049816, "To determine if the cabinet_1 is open, I'll look at the image for any indication that the cabinet door is not closed. In this image, the cabinet_1 appears to have its door closed, as there's no visible gap or opening where one would expect to see the interior of the cabinet. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.", false, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image for any indication that the cabinet door is not closed. In this image, the cabinet_1 appears to have its door closed, as there's no visible gap or opening where one would expect to see the interior of the cabinet. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 1.8544786144047976e-05, 3.36302982759662e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm appears to be positioned above the counter where the bowl_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the bowl_1.\n\nHowever, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it is within its operational range. For the sake of this question, let's assume the robotic arm has sufficient reach to interact with the bowl_1.\n\nTherefore, based on the assumption that the robotic arm can reach the bowl_1, the answer is yes.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm appears to be positioned above the counter where the bowl_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the bowl_1.\n\nHowever, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it is within its operational range. For the sake of this question, let's assume the robotic arm has sufficient reach to interact with the bowl_1.\n\nTherefore, based on the assumption that the robotic arm can reach the bowl_1, the answer is yes.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 9.619999218557496e-06, 0.00021252993610687554, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent appears to be the robotic arm located near the center of the image.\n2. Look for the bowl_1: The bowl_1 is visible on the counter to the right of the agent.\n3. Check if the agent is interacting with the bowl_1: The robotic arm is positioned above the bowl_1, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the bowl_1.", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent appears to be the robotic arm located near the center of the image.\n2. Look for the bowl_1: The bowl_1 is visible on the counter to the right of the agent.\n3. Check if the agent is interacting with the bowl_1: The robotic arm is positioned above the bowl_1, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 1.7454383851145394e-05, 4.801414252142422e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm appears to be positioned above the counter, and the sink_1 is located on the left side of the counter. Given the typical height of sinks and the range of motion of a robotic arm, it seems plausible that the robotic arm could reach the sink_1.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm appears to be positioned above the counter, and the sink_1 is located on the left side of the counter. Given the typical height of sinks and the range of motion of a robotic arm, it seems plausible that the robotic arm could reach the sink_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 9.619999218557496e-06, 0.00021252993610687554, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent appears to be the robotic arm located near the center of the image.\n2. Look for the bowl_1: The bowl_1 is visible on the counter to the right of the agent.\n3. Check if the agent is interacting with the bowl_1: The robotic arm is positioned above the bowl_1, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the bowl_1.", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent appears to be the robotic arm located near the center of the image.\n2. Look for the bowl_1: The bowl_1 is visible on the counter to the right of the agent.\n3. Check if the agent is interacting with the bowl_1: The robotic arm is positioned above the bowl_1, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 1.7454383851145394e-05, 4.801414252142422e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm appears to be positioned above the counter, and the sink_1 is located on the left side of the counter. Given the typical height of sinks and the range of motion of a robotic arm, it seems plausible that the robotic arm could reach the sink_1.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm appears to be positioned above the counter, and the sink_1 is located on the left side of the counter. Given the typical height of sinks and the range of motion of a robotic arm, it seems plausible that the robotic arm could reach the sink_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable sink_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(cabinet_2)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "yes"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["yes", "yes"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "yes"], "nextto piece_of_cloth_1,bowl_2": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6170212765957447, "yes_accuracy": 0.6470588235294118, "yes_correct": 11, "yes_total": 17, "no_accuracy": 0.6, "no_correct": 18, "no_total": 30, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 10, "no_total": 15}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 2, "actions": ["place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "yes"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["yes", "yes"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "yes"], "nextto piece_of_cloth_1,bowl_2": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6170212765957447, "yes_accuracy": 0.6470588235294118, "yes_correct": 11, "yes_total": 17, "no_accuracy": 0.6, "no_correct": 18, "no_total": 30, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 10, "no_total": 15}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 3, "actions": ["place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}], "remaining_actions": ["navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["no", 1.853841240517795e-05, 4.019149127998389e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_1 is located further back in the scene, near the center-left area.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1 if it were extended further.\n4. However, the robotic arm's current position does not seem to be directly aligned with cabinet_1, suggesting that it may not be in immediate reach without some adjustment.\n\nGiven these observations, the robotic arm is not currently in direct reach of cabinet_1 as it stands.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_1 is located further back in the scene, near the center-left area.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1 if it were extended further.\n4. However, the robotic arm's current position does not seem to be directly aligned with cabinet_1, suggesting that it may not be in immediate reach without some adjustment.\n\nGiven these observations, the robotic arm is not currently in direct reach of cabinet_1 as it stands.\n\n</explanation>\n<answer>No</answer>", false], "reachable cabinet_2": ["no", 2.6502402761252597e-05, 3.1683848646935076e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "reachable sink_1": ["yes", 8.036492545215879e-06, 8.18936969153583e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that can hold objects) appears to be close enough to interact with the sink_1. Given the proximity and orientation of the robotic arm, it seems that the sink_1 is indeed within the reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that can hold objects) appears to be close enough to interact with the sink_1. Given the proximity and orientation of the robotic arm, it seems that the sink_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable spoon_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 2.496987144695595e-05, 3.568792453734204e-05, "To determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the cabinet_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_2.\n\n1. The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. Cabinet_2 is located on the right side of the image, near the edge of the screen.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_2 if it were extended further to the right.\n4. However, the robotic arm's current position and angle suggest that it is not currently reaching towards cabinet_2.\n\nGiven these observations, the robotic arm is not currently in a position where it can reach cabinet_2 directly from its current orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open cabinet_2": ["no", 5.939915354247205e-06, 0.00016650542966090143, "To determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.", true, "<explanation>\nTo determine if the cabinet_2 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_2 appears to have its door closed, as there are no visible gaps or openings where one would expect to see the interior of the cabinet if it were open. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door, which further implies that the cabinet is closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 2, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 4, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 5, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 6, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 7, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 8, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 9, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 10, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 11, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 12, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 13, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 14, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 15, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 16, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 17, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 18, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 19, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 20, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}], "remaining_actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 8.55594225868117e-06, 3.169470437569544e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.080055860977154e-06, 3.169253977830522e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 6.327017217699904e-06, 0.00011692058615153655, "To determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. Upon examining the image, the cabinet appears to have its door closed and no items are visible inside, suggesting it is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. Upon examining the image, the cabinet appears to have its door closed and no items are visible inside, suggesting it is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 9.041655175678898e-06, 0.00010378460865467787, "To determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. In this image, the cabinet appears to have its door closed, and no items are visible inside, suggesting it is not open.", false, "<explanation>\nTo determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. In this image, the cabinet appears to have its door closed, and no items are visible inside, suggesting it is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable snack_food_1": ["yes", 1.4544560144713614e-05, 0.00016694985970389098, "To determine if the snack_food_1 is in reach of the agent, we need to assess the distance between the snack_food_1 and the robotic arm (the agent). The image shows the robotic arm positioned near the snack_food_1, suggesting that the snack_food_1 is within the range where the robotic arm can potentially pick it up.\n\nThe robotic arm appears to be extended towards the snack_food_1, indicating that it is close enough to interact with it. Given this observation, it is reasonable to conclude that the snack_food_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the snack_food_1 is in reach of the agent, we need to assess the distance between the snack_food_1 and the robotic arm (the agent). The image shows the robotic arm positioned near the snack_food_1, suggesting that the snack_food_1 is within the range where the robotic arm can potentially pick it up.\n\nThe robotic arm appears to be extended towards the snack_food_1, indicating that it is close enough to interact with it. Given this observation, it is reasonable to conclude that the snack_food_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 5.97838197791134e-06, 5.740058986702934e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's position and the carton_1. The agent appears to be positioned near the center of the room, and the carton_1 is located further back, towards the right side of the image. Given the agent's current position and the visible space around it, it seems that the agent could potentially reach the carton_1 without any significant obstacles.\n\nHowever, the exact reachability would depend on the specific dimensions and range of the robotic arm, which is not explicitly detailed in the description. Assuming typical robotic arm capabilities, it is reasonable to conclude that the carton_1 is within the agent's reach.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's position and the carton_1. The agent appears to be positioned near the center of the room, and the carton_1 is located further back, towards the right side of the image. Given the agent's current position and the visible space around it, it seems that the agent could potentially reach the carton_1 without any significant obstacles.\n\nHowever, the exact reachability would depend on the specific dimensions and range of the robotic arm, which is not explicitly detailed in the description. Assuming typical robotic arm capabilities, it is reasonable to conclude that the carton_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 3.232926928831148e-06, 0.00029803093639202416, "To determine if the carton_1 is open, I need to locate the carton_1 in the image and check its state. However, the image does not show any cartons or their states. Without visual confirmation of the carton's state, it's impossible to accurately assess whether it is open or closed.", true, "<explanation>\nTo determine if the carton_1 is open, I need to locate the carton_1 in the image and check its state. However, the image does not show any cartons or their states. Without visual confirmation of the carton's state, it's impossible to accurately assess whether it is open or closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 1.0010841833718587e-05, 0.0006853010854683816, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be positioned near a counter or table, but there is no visible snack_food_1 being held by the agent. The agent seems to be in a neutral position without any object in its grasp.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be positioned near a counter or table, but there is no visible snack_food_1 being held by the agent. The agent seems to be in a neutral position without any object in its grasp.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 5.97838197791134e-06, 5.740058986702934e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's position and the carton_1. The agent appears to be positioned near the center of the room, and the carton_1 is located further back, towards the right side of the image. Given the agent's current position and the visible space around it, it seems that the agent could potentially reach the carton_1 without any significant obstacles.\n\nHowever, the exact reachability would depend on the specific dimensions and range of the robotic arm, which is not explicitly detailed in the description. Assuming typical robotic arm capabilities, it is reasonable to conclude that the carton_1 is within the agent's reach.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's position and the carton_1. The agent appears to be positioned near the center of the room, and the carton_1 is located further back, towards the right side of the image. Given the agent's current position and the visible space around it, it seems that the agent could potentially reach the carton_1 without any significant obstacles.\n\nHowever, the exact reachability would depend on the specific dimensions and range of the robotic arm, which is not explicitly detailed in the description. Assuming typical robotic arm capabilities, it is reasonable to conclude that the carton_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 3.232926928831148e-06, 0.00029803093639202416, "To determine if the carton_1 is open, I need to locate the carton_1 in the image and check its state. However, the image does not show any cartons or their states. Without visual confirmation of the carton's state, it's impossible to accurately assess whether it is open or closed.", true, "<explanation>\nTo determine if the carton_1 is open, I need to locate the carton_1 in the image and check its state. However, the image does not show any cartons or their states. Without visual confirmation of the carton's state, it's impossible to accurately assess whether it is open or closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 1.0010841833718587e-05, 0.0006853010854683816, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be positioned near a counter or table, but there is no visible snack_food_1 being held by the agent. The agent seems to be in a neutral position without any object in its grasp.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be positioned near a counter or table, but there is no visible snack_food_1 being held by the agent. The agent seems to be in a neutral position without any object in its grasp.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["yes", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7419354838709677, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7407407407407407, "no_correct": 20, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["no", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["no", "no"], "nextto snack_food_1,countertop_1": ["yes", "no"], "nextto snack_food_1,cabinet_1": ["no", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["yes", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.72, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.7857142857142857, "no_correct": 33, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9333333333333333, "no_correct": 14, "no_total": 15}, "inside": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["no", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["no", "no"], "nextto snack_food_1,countertop_1": ["yes", "no"], "nextto snack_food_1,cabinet_1": ["no", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["yes", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.72, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.7857142857142857, "no_correct": 33, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9333333333333333, "no_correct": 14, "no_total": 15}, "inside": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 3, "actions": ["open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 8.55594225868117e-06, 3.169470437569544e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.080055860977154e-06, 3.169253977830522e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending towards the right side of the scene.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the microwave oven.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1 if it were to extend its arm further to the left.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 if it were to move in that direction.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 6.327017217699904e-06, 0.00011692058615153655, "To determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. Upon examining the image, the cabinet appears to have its door closed and no items are visible inside, suggesting it is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. Upon examining the image, the cabinet appears to have its door closed and no items are visible inside, suggesting it is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 8.542386240151245e-06, 5.406992568168789e-05, "To determine if the cabinet_1 is open, I'll look at the image and identify the cabinet_1. The cabinet_1 appears to be a large, dark-colored structure located on the left side of the image. Upon inspection, the cabinet_1 does not seem to have its doors fully opened; they appear to be closed. Therefore, the cabinet_1 is not open.", false, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image and identify the cabinet_1. The cabinet_1 appears to be a large, dark-colored structure located on the left side of the image. Upon inspection, the cabinet_1 does not seem to have its doors fully opened; they appear to be closed. Therefore, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable snack_food_1": ["yes", 1.3719743947149254e-05, 0.00013172818580642343, "To determine if the snack_food_1 is in reach of the agent, we need to assess the distance between the snack_food_1 and the robotic arm (the agent). The image shows the robotic arm positioned near the snack_food_1, suggesting that the snack_food_1 is within the range where the robotic arm can potentially interact with it.", true, "<explanation>\nTo determine if the snack_food_1 is in reach of the agent, we need to assess the distance between the snack_food_1 and the robotic arm (the agent). The image shows the robotic arm positioned near the snack_food_1, suggesting that the snack_food_1 is within the range where the robotic arm can potentially interact with it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable carton_1": ["no", 6.734154339937959e-06, 5.7400320656597614e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the position and orientation of both the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a counter, but there is no visible carton_1 in the immediate vicinity of the arm. The arm appears to be in a neutral position, suggesting it is not currently holding or interacting with any object.\n\nSince the carton_1 is not present in the image and the robotic arm is not actively engaged with it, we cannot conclude that the carton_1 is in reach of the agent based on the provided information.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the position and orientation of both the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a counter, but there is no visible carton_1 in the immediate vicinity of the arm. The arm appears to be in a neutral position, suggesting it is not currently holding or interacting with any object.\n\nSince the carton_1 is not present in the image and the robotic arm is not actively engaged with it, we cannot conclude that the carton_1 is in reach of the agent based on the provided information.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 8.552337021683343e-06, 2.9850589271518402e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's hand and the carton_1. The agent appears to have its hand extended towards the carton_1, suggesting that the carton_1 is within the agent's reach.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's hand and the carton_1. The agent appears to have its hand extended towards the carton_1, suggesting that the carton_1 is within the agent's reach.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 8.555153726774734e-06, 2.6509038434596732e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's hand and the carton_1. The agent appears to have its hand extended towards the carton_1, suggesting that the carton_1 is within the agent's reach.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's hand and the carton_1. The agent appears to have its hand extended towards the carton_1, suggesting that the carton_1 is within the agent's reach.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 4.867788447882049e-06, 0.00037535696174018085, "To determine if the carton_1 is open, I need to look for any indication that it has been opened, such as its lid being lifted or the contents spilling out. However, from the image provided, there is no visible indication that the carton_1 is open. It appears to be closed and intact.", true, "<explanation>\nTo determine if the carton_1 is open, I need to look for any indication that it has been opened, such as its lid being lifted or the contents spilling out. However, from the image provided, there is no visible indication that the carton_1 is open. It appears to be closed and intact.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "navigate-to(snack_food_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 8.534711923857685e-06, 7.274776726262644e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the carton_1.\n\n1. Observe the position of the robotic arm in the image.\n2. Note the location of the carton_1 relative to the robotic arm.\n3. Assess whether the end-effector of the robotic arm can extend towards the carton_1 without colliding with any obstacles.\n\nFrom the image, the robotic arm appears to be positioned such that its end-effector could potentially reach the carton_1 without any significant obstruction. The carton_1 is located within the range where the robotic arm's end-effector can move.\n\nTherefore, based on this analysis, the carton_1 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the carton_1.\n\n1. Observe the position of the robotic arm in the image.\n2. Note the location of the carton_1 relative to the robotic arm.\n3. Assess whether the end-effector of the robotic arm can extend towards the carton_1 without colliding with any obstacles.\n\nFrom the image, the robotic arm appears to be positioned such that its end-effector could potentially reach the carton_1 without any significant obstruction. The carton_1 is located within the range where the robotic arm's end-effector can move.\n\nTherefore, based on this analysis, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable snack_food_1": {"before": false, "after": true}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 6.343747827486368e-06, 5.0947910494869575e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the carton_1.\n\n1. Observe the position of the robotic arm in the image.\n2. Identify the end-effector of the robotic arm, which appears to be near the center of the arm.\n3. Locate the carton_1 in the image. It is positioned on the floor, slightly to the left of the center of the room.\n4. Compare the distance between the end-effector and the carton_1. The end-effector seems to be able to reach the carton_1 without any obstructions.\n\nGiven these observations, the carton_1 is indeed within the reach of the agent's end-effector.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the carton_1.\n\n1. Observe the position of the robotic arm in the image.\n2. Identify the end-effector of the robotic arm, which appears to be near the center of the arm.\n3. Locate the carton_1 in the image. It is positioned on the floor, slightly to the left of the center of the room.\n4. Compare the distance between the end-effector and the carton_1. The end-effector seems to be able to reach the carton_1 without any obstructions.\n\nGiven these observations, the carton_1 is indeed within the reach of the agent's end-effector.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 3.1905135529086692e-06, 0.0003731895994860679, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be holding a rectangular object, which looks like a carton. However, the image does not provide enough detail to determine whether the carton is open or closed. The carton's lid is not visible, and there are no clear signs of it being opened, such as a flap or a gap where the contents might be visible.", true, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be holding a rectangular object, which looks like a carton. However, the image does not provide enough detail to determine whether the carton is open or closed. The carton's lid is not visible, and there are no clear signs of it being opened, such as a flap or a gap where the contents might be visible.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 6.343747827486368e-06, 5.0947910494869575e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the carton_1.\n\n1. Observe the position of the robotic arm in the image.\n2. Identify the end-effector of the robotic arm, which appears to be near the center of the arm.\n3. Locate the carton_1 in the image. It is positioned on the floor, slightly to the left of the center of the room.\n4. Compare the distance between the end-effector and the carton_1. The end-effector seems to be able to reach the carton_1 without any obstructions.\n\nGiven these observations, the carton_1 is indeed within the reach of the agent's end-effector.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the carton_1.\n\n1. Observe the position of the robotic arm in the image.\n2. Identify the end-effector of the robotic arm, which appears to be near the center of the arm.\n3. Locate the carton_1 in the image. It is positioned on the floor, slightly to the left of the center of the room.\n4. Compare the distance between the end-effector and the carton_1. The end-effector seems to be able to reach the carton_1 without any obstructions.\n\nGiven these observations, the carton_1 is indeed within the reach of the agent's end-effector.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 3.1905135529086692e-06, 0.0003731895994860679, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be holding a rectangular object, which looks like a carton. However, the image does not provide enough detail to determine whether the carton is open or closed. The carton's lid is not visible, and there are no clear signs of it being opened, such as a flap or a gap where the contents might be visible.", true, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be holding a rectangular object, which looks like a carton. However, the image does not provide enough detail to determine whether the carton is open or closed. The carton's lid is not visible, and there are no clear signs of it being opened, such as a flap or a gap where the contents might be visible.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["yes", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7419354838709677, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7407407407407407, "no_correct": 20, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["yes", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["no", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto snack_food_1,carton_1": ["no", "no"], "nextto snack_food_1,countertop_1": ["yes", "no"], "nextto snack_food_1,cabinet_1": ["no", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.76, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8095238095238095, "no_correct": 34, "no_total": 42, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 12, "no_total": 15}, "inside": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 2, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open door_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "nextto door_1,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open door_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "nextto door_1,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 5, "actions": ["open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open door_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "nextto door_1,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 6, "actions": ["open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 7.155593721108744e-06, 1.646485907258466e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach various objects in the room.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area. It is mounted on the wall and appears to be at a height that would be accessible to the robotic arm.\n\n3. **Reachability**: Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could extend to reach the cabinet_1. The arm's range of motion allows it to reach objects at a considerable distance from its base.\n\nConsidering these points, the robotic arm appears to have sufficient reach to interact with the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach various objects in the room.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area. It is mounted on the wall and appears to be at a height that would be accessible to the robotic arm.\n\n3. **Reachability**: Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could extend to reach the cabinet_1. The arm's range of motion allows it to reach objects at a considerable distance from its base.\n\nConsidering these points, the robotic arm appears to have sufficient reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 6.743803169229068e-06, 1.46206293720752e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 5.956940640317043e-06, 0.00011683323828037828, "To determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 6.743803169229068e-06, 1.46206293720752e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 5.956940640317043e-06, 0.00011683323828037828, "To determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6756756756756757, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7058823529411765, "no_correct": 24, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6756756756756757, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7058823529411765, "no_correct": 24, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}], "remaining_actions": ["grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 7.155593721108744e-06, 1.646485907258466e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach various objects in the room.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area. It is mounted on the wall and appears to be at a height that would be accessible to the robotic arm.\n\n3. **Reachability**: Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could extend to reach the cabinet_1. The arm's range of motion allows it to reach objects at a considerable distance from its base.\n\nConsidering these points, the robotic arm appears to have sufficient reach to interact with the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach various objects in the room.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area. It is mounted on the wall and appears to be at a height that would be accessible to the robotic arm.\n\n3. **Reachability**: Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could extend to reach the cabinet_1. The arm's range of motion allows it to reach objects at a considerable distance from its base.\n\nConsidering these points, the robotic arm appears to have sufficient reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 6.743803169229068e-06, 1.46206293720752e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 5.956940640317043e-06, 0.00011683323828037828, "To determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 6.743803169229068e-06, 1.46206293720752e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's range seems sufficient to extend from its current position to the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have enough reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 5.956940640317043e-06, 0.00011683323828037828, "To determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In the image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Since there's no evidence of the cabinet being open, the answer is likely \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6756756756756757, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7058823529411765, "no_correct": 24, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6756756756756757, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7058823529411765, "no_correct": 24, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}], "remaining_actions": ["grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["no", 1.3784441762254573e-05, 1.2987870832148474e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_2. The robotic arm appears to be positioned above the plaything_2, suggesting that it could potentially reach it. However, without more specific information about the range or reach of the robotic arm, we cannot definitively say whether it is within its operational range.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_2. The robotic arm appears to be positioned above the plaything_2, suggesting that it could potentially reach it. However, without more specific information about the range or reach of the robotic arm, we cannot definitively say whether it is within its operational range.\n</explanation>\n<answer>No</answer>", false], "reachable carton_1": ["yes", 1.0233405191684142e-05, 1.647506360313855e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's position and the carton_1. The agent appears to be positioned near the center of the image, and the carton_1 is located towards the left side of the image. Given the agent's arm length and the positioning, it seems that the agent could potentially reach the carton_1 without any obstacles.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's position and the carton_1. The agent appears to be positioned near the center of the image, and the carton_1 is located towards the left side of the image. Given the agent's arm length and the positioning, it seems that the agent could potentially reach the carton_1 without any obstacles.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["no", 1.2230583706696052e-05, 1.2230583706696052e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center-right of the image, extending upwards and slightly to the right.\n2. **Table Position**: The table_1 is located towards the left side of the image, near the bottom, with its surface horizontal and parallel to the floor.\n3. **Reachability Analysis**:\n   - The robotic arm's reach appears to extend vertically upwards and slightly to the right.\n   - The table_1 is positioned below the arm's current vertical reach, as the arm does not extend far enough downward to reach the table.\n   \nGiven these observations, the table_1 is not within the vertical reach of the robotic arm.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center-right of the image, extending upwards and slightly to the right.\n2. **Table Position**: The table_1 is located towards the left side of the image, near the bottom, with its surface horizontal and parallel to the floor.\n3. **Reachability Analysis**:\n   - The robotic arm's reach appears to extend vertically upwards and slightly to the right.\n   - The table_1 is positioned below the arm's current vertical reach, as the arm does not extend far enough downward to reach the table.\n   \nGiven these observations, the table_1 is not within the vertical reach of the robotic arm.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["yes", 1.551294008095283e-05, 8.213314868044108e-05, "To determine if the agent is holding the plaything_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plaything_2: The plaything_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plaything_2: The robotic arm appears to be positioned above the plaything_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, it seems the agent is indeed interacting with the plaything_2, likely in the process of picking it up.", true, "<explanation>\nTo determine if the agent is holding the plaything_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plaything_2: The plaything_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plaything_2: The robotic arm appears to be positioned above the plaything_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, it seems the agent is indeed interacting with the plaything_2, likely in the process of picking it up.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_2": ["yes", 1.378327033307869e-05, 1.4628607459599152e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the bottom right corner of the image, while the robotic arm is positioned higher up, closer to the center of the image. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the plaything_2.\n\nHowever, without precise measurements or a clear view of the robotic arm's full range of motion, it's difficult to definitively say whether the plaything_2 is within the robotic arm's reach. For the sake of this question, we'll assume that based on the visual information provided, the plaything_2 is indeed within the reach of the robotic arm.", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the bottom right corner of the image, while the robotic arm is positioned higher up, closer to the center of the image. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the plaything_2.\n\nHowever, without precise measurements or a clear view of the robotic arm's full range of motion, it's difficult to definitively say whether the plaything_2 is within the robotic arm's reach. For the sake of this question, we'll assume that based on the visual information provided, the plaything_2 is indeed within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["yes", 1.551294008095283e-05, 8.213314868044108e-05, "To determine if the agent is holding the plaything_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plaything_2: The plaything_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plaything_2: The robotic arm appears to be positioned above the plaything_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, it seems the agent is indeed interacting with the plaything_2, likely in the process of picking it up.", true, "<explanation>\nTo determine if the agent is holding the plaything_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plaything_2: The plaything_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plaything_2: The robotic arm appears to be positioned above the plaything_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, it seems the agent is indeed interacting with the plaything_2, likely in the process of picking it up.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_2": ["yes", 1.378327033307869e-05, 1.4628607459599152e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the bottom right corner of the image, while the robotic arm is positioned higher up, closer to the center of the image. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the plaything_2.\n\nHowever, without precise measurements or a clear view of the robotic arm's full range of motion, it's difficult to definitively say whether the plaything_2 is within the robotic arm's reach. For the sake of this question, we'll assume that based on the visual information provided, the plaything_2 is indeed within the reach of the robotic arm.", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the bottom right corner of the image, while the robotic arm is positioned higher up, closer to the center of the image. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the plaything_2.\n\nHowever, without precise measurements or a clear view of the robotic arm's full range of motion, it's difficult to definitively say whether the plaything_2 is within the robotic arm's reach. For the sake of this question, we'll assume that based on the visual information provided, the plaything_2 is indeed within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable table_1": ["no", "no"], "holding plaything_2": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6382978723404256, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7333333333333333, "no_correct": 11, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6923076923076923, "no_correct": 9, "no_total": 13}}}, "step": 1, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable table_1": ["no", "no"], "holding plaything_2": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6382978723404256, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7333333333333333, "no_correct": 11, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6923076923076923, "no_correct": 9, "no_total": 13}}}, "step": 2, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 9.647473234508652e-06, 5.992480964778224e-06, "To determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the carton_1. The robotic arm appears to be positioned above the carton_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the carton_1, we can infer that the answer is likely affirmative.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the carton_1. The robotic arm appears to be positioned above the carton_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the carton_1, we can infer that the answer is likely affirmative.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.551201057736762e-05, 1.968210381164681e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Table Position**: The table_1 is located towards the left side of the image, closer to the foreground.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to the table_1 without any obstructions. The angle at which the arm is extended suggests it could reach the table_1.\n\nGiven these observations, the robotic arm appears to be in a position where it can potentially reach the table_1.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Table Position**: The table_1 is located towards the left side of the image, closer to the foreground.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to the table_1 without any obstructions. The angle at which the arm is extended suggests it could reach the table_1.\n\nGiven these observations, the robotic arm appears to be in a position where it can potentially reach the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": true}, "reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 9.647473234508652e-06, 5.992480964778224e-06, "To determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the carton_1. The robotic arm appears to be positioned above the carton_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the carton_1, we can infer that the answer is likely affirmative.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the carton_1. The robotic arm appears to be positioned above the carton_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the carton_1, we can infer that the answer is likely affirmative.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 7.578338227176573e-06, 6.459593714680523e-05, "To determine if the carton_1 is open, we need to visually inspect the image for any indication that the carton is not closed. In this image, the carton appears to have a lid that is not fully covering the contents inside, suggesting that it might be open. However, without a clear view of the inside or a closer inspection, it's difficult to definitively say whether it is open or closed.", true, "<explanation>\nTo determine if the carton_1 is open, we need to visually inspect the image for any indication that the carton is not closed. In this image, the carton appears to have a lid that is not fully covering the contents inside, suggesting that it might be open. However, without a clear view of the inside or a closer inspection, it's difficult to definitively say whether it is open or closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 9.647473234508652e-06, 5.992480964778224e-06, "To determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the carton_1. The robotic arm appears to be positioned above the carton_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the carton_1, we can infer that the answer is likely affirmative.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the carton_1. The robotic arm appears to be positioned above the carton_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the carton_1, we can infer that the answer is likely affirmative.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 7.578338227176573e-06, 6.459593714680523e-05, "To determine if the carton_1 is open, we need to visually inspect the image for any indication that the carton is not closed. In this image, the carton appears to have a lid that is not fully covering the contents inside, suggesting that it might be open. However, without a clear view of the inside or a closer inspection, it's difficult to definitively say whether it is open or closed.", true, "<explanation>\nTo determine if the carton_1 is open, we need to visually inspect the image for any indication that the carton is not closed. In this image, the carton appears to have a lid that is not fully covering the contents inside, suggesting that it might be open. However, without a clear view of the inside or a closer inspection, it's difficult to definitively say whether it is open or closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_6": ["no", "yes"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_6": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_6": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["no", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["yes", "no"], "nextto plaything_6,table_1": ["yes", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_6": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6382978723404256, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.7073170731707317, "no_correct": 29, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 1, "actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_6": ["no", "yes"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_6": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_6": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["no", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["yes", "no"], "nextto plaything_6,table_1": ["yes", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_6": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6382978723404256, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.7073170731707317, "no_correct": 29, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["no", 7.603956873936113e-06, 6.750533884769538e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to pick up the plaything_2 from its current position.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to pick up the plaything_2 from its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_3": ["no", 7.602377991133835e-06, 7.602377991133835e-06, "To determine if the plaything_3 is in reach of the agent, we need to consider the position of both the plaything_3 and the robotic arm (agent). The plaything_3 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_3.", true, "<explanation>\nTo determine if the plaything_3 is in reach of the agent, we need to consider the position of both the plaything_3 and the robotic arm (agent). The plaything_3 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_3.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable carton_1": ["yes", 5.643546046485426e-06, 8.065979272942059e-06, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent (the robotic arm) and the carton_1. The robotic arm appears to be positioned above the floor, and the carton_1 is located on the floor near the center of the room. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the carton_1.\n\nHowever, without specific information about the exact dimensions of the robotic arm and the carton, it's difficult to definitively say whether the robotic arm can physically grasp the carton_1. But based on the visual evidence, it looks like the robotic arm is positioned in a way that suggests it could potentially reach the carton_1.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent (the robotic arm) and the carton_1. The robotic arm appears to be positioned above the floor, and the carton_1 is located on the floor near the center of the room. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the carton_1.\n\nHowever, without specific information about the exact dimensions of the robotic arm and the carton, it's difficult to definitively say whether the robotic arm can physically grasp the carton_1. But based on the visual evidence, it looks like the robotic arm is positioned in a way that suggests it could potentially reach the carton_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["no", 5.64116771784029e-06, 8.215960406232625e-05, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.", false, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is clearly visible in the image, and it appears to be positioned near the plaything_2. However, there is no indication in the image that the robotic arm is actually holding the plaything_2. The plaything_2 is on the floor, and the robotic arm is not in contact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["no", 6.7505934566725045e-06, 6.360492534440709e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The plaything_2 appears to be on the floor near the center of the room, while the robotic arm is positioned higher up, likely attached to a ceiling or wall-mounted structure. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the floor to interact with the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 1, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 2, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 3, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 4, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 5, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 6, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 7, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 8, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 9, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 10, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 11, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 12, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 13, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 14, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 15, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 16, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 17, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 18, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 19, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "no"], "holding plaything_3": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 20, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 4.449279458640376e-06, 1.2239238458278123e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the plaything_2.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the plaything_2 is within the reach of the robotic arm.\n\nFrom the image, the plaything_2 appears to be a small object on the floor near the center of the room. The robotic arm is positioned above the floor, extending towards the right side of the image. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor and potentially pick up the plaything_2.\n\nTherefore, based on the visual information provided, it is reasonable to conclude that the plaything_2 is in reach of the agent.", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the plaything_2.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the plaything_2 is within the reach of the robotic arm.\n\nFrom the image, the plaything_2 appears to be a small object on the floor near the center of the room. The robotic arm is positioned above the floor, extending towards the right side of the image. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor and potentially pick up the plaything_2.\n\nTherefore, based on the visual information provided, it is reasonable to conclude that the plaything_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 4.7237181206583045e-06, 7.1653948907624e-06, "To determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton and the robotic arm (agent). The carton appears to be placed on the floor near the center of the room, while the robotic arm is positioned above and slightly to the right of the carton. The robotic arm seems to have a range of motion that allows it to reach down towards the carton.\n\nGiven this information, it appears that the robotic arm could potentially reach the carton_1.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton and the robotic arm (agent). The carton appears to be placed on the floor near the center of the room, while the robotic arm is positioned above and slightly to the right of the carton. The robotic arm seems to have a range of motion that allows it to reach down towards the carton.\n\nGiven this information, it appears that the robotic arm could potentially reach the carton_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 4.192932010482764e-06, 1.086755219148472e-05, "To determine if the plaything_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plaything_2. The robotic arm appears to be extended towards the plaything_2, suggesting that it is within the range where the arm could potentially interact with the object.\n\nThe robotic arm is positioned above the plaything_2, and its end effector (the part that holds objects) is close enough to touch or pick up the plaything_2. This indicates that the plaything_2 is indeed within the reach of the agent.\n\nTherefore, based on this reasoning, the answer is \"Yes\".", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plaything_2. The robotic arm appears to be extended towards the plaything_2, suggesting that it is within the range where the arm could potentially interact with the object.\n\nThe robotic arm is positioned above the plaything_2, and its end effector (the part that holds objects) is close enough to touch or pick up the plaything_2. This indicates that the plaything_2 is indeed within the reach of the agent.\n\nTherefore, based on this reasoning, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_2": ["no", 1.1485983122838661e-05, 0.0002122562873410061, "The image shows a robotic arm (the agent) interacting with a dog. The dog appears to be in motion, possibly being moved or guided by the robotic arm. However, the question asks specifically about the agent holding an object called \"plaything_2\". There is no visible object labeled as \"plaything_2\" in the image, nor does the robotic arm appear to be holding any object. Therefore, based on the information provided in the image, the answer is \"No\".", false, "<explanation>\nThe image shows a robotic arm (the agent) interacting with a dog. The dog appears to be in motion, possibly being moved or guided by the robotic arm. However, the question asks specifically about the agent holding an object called \"plaything_2\". There is no visible object labeled as \"plaything_2\" in the image, nor does the robotic arm appear to be holding any object. Therefore, based on the information provided in the image, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop plaything_2,carton_1": ["no", 3.4928050354210427e-06, 0.00018844411533791572, "The image shows a robotic arm holding a plaything_2, which appears to be a toy lion. The plaything_2 is being held by the robotic arm, not placed on top of any object like a carton_1. The carton_1 is visible in the background but does not have the plaything_2 on top of it.", true, "<explanation>\nThe image shows a robotic arm holding a plaything_2, which appears to be a toy lion. The plaything_2 is being held by the robotic arm, not placed on top of any object like a carton_1. The carton_1 is visible in the background but does not have the plaything_2 on top of it.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_2,carton_1": ["yes", 7.135904525057413e-06, 0.0001485398388467729, "To determine if the plaything_2 is next to the carton_1, I need to identify both objects in the image. The plaything_2 appears to be a small object near the robotic arm, while the carton_1 looks like a larger box-like structure. Observing their positions relative to each other, they do seem to be close to one another, suggesting that the plaything_2 is indeed next to the carton_1.", false, "<explanation>\nTo determine if the plaything_2 is next to the carton_1, I need to identify both objects in the image. The plaything_2 appears to be a small object near the robotic arm, while the carton_1 looks like a larger box-like structure. Observing their positions relative to each other, they do seem to be close to one another, suggesting that the plaything_2 is indeed next to the carton_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_2,plaything_1": {"before": false, "after": false}, "ontop plaything_2,plaything_2": {"before": null, "after": false}, "ontop plaything_2,plaything_3": {"before": false, "after": false}, "ontop plaything_2,plaything_4": {"before": false, "after": false}, "ontop plaything_2,table_1": {"before": false, "after": false}, "nextto plaything_2,plaything_1": {"before": false, "after": false}, "nextto plaything_2,plaything_2": {"before": null, "after": false}, "nextto plaything_2,plaything_3": {"before": false, "after": false}, "nextto plaything_2,plaything_4": {"before": false, "after": false}, "nextto plaything_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 7.591791927552549e-06, 5.744782538386062e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the position and orientation of both the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a dog, but there is no visible carton_1 in the immediate vicinity of the robotic arm. The robotic arm appears to be in a neutral position, not actively holding or interacting with any object. Given this information, it seems that the carton_1 is not currently in the reach of the agent.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the position and orientation of both the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a dog, but there is no visible carton_1 in the immediate vicinity of the robotic arm. The robotic arm appears to be in a neutral position, not actively holding or interacting with any object. Given this information, it seems that the carton_1 is not currently in the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 7.153759725042619e-06, 4.0198454371420667e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a table, and there is a carton_1 located on the floor to the left of the robotic arm. Given the typical range of motion for a robotic arm, it appears that the robotic arm could potentially reach the carton_1 if it were to extend its arm downward.\n\nHowever, the exact reachability would depend on the specific design and capabilities of the robotic arm, which are not detailed in the image. Assuming the robotic arm has sufficient reach, the carton_1 is indeed within the potential reach of the agent.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a table, and there is a carton_1 located on the floor to the left of the robotic arm. Given the typical range of motion for a robotic arm, it appears that the robotic arm could potentially reach the carton_1 if it were to extend its arm downward.\n\nHowever, the exact reachability would depend on the specific design and capabilities of the robotic arm, which are not detailed in the image. Assuming the robotic arm has sufficient reach, the carton_1 is indeed within the potential reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_2": ["yes", 8.564147719880566e-06, 1.299093128181994e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the plaything_2.\n\n1. The robotic arm (agent) appears to be positioned near the center of the image.\n2. The plaything_2, which looks like a lion figure, is located to the left side of the image.\n3. The robotic arm seems to have a range of motion that allows it to extend towards the left side of the image.\n4. Given the positioning, it appears that the robotic arm could potentially reach the plaything_2 if it were to move its arm in that direction.\n\nTherefore, based on the visual information provided, the plaything_2 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the plaything_2.\n\n1. The robotic arm (agent) appears to be positioned near the center of the image.\n2. The plaything_2, which looks like a lion figure, is located to the left side of the image.\n3. The robotic arm seems to have a range of motion that allows it to extend towards the left side of the image.\n4. Given the positioning, it appears that the robotic arm could potentially reach the plaything_2 if it were to move its arm in that direction.\n\nTherefore, based on the visual information provided, the plaything_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 7.155693310778588e-06, 3.5696462873602286e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a lion figure, but there is no visible carton_1 in the immediate vicinity of the robotic arm. The robotic arm appears to be in a position where it could potentially reach various objects, but without seeing the carton_1, we cannot confirm its presence or proximity.\n\nSince the carton_1 is not clearly visible in the image, we cannot definitively say whether it is in reach of the agent.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows a robotic arm positioned near a lion figure, but there is no visible carton_1 in the immediate vicinity of the robotic arm. The robotic arm appears to be in a position where it could potentially reach various objects, but without seeing the carton_1, we cannot confirm its presence or proximity.\n\nSince the carton_1 is not clearly visible in the image, we cannot definitively say whether it is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["no", 5.2609557315008715e-06, 0.00033933226950466633, "I need to determine if the carton_1 is within the reach of the robotic arm (agent). However, the image does not show any carton_1 object present in the scene. Since there is no carton_1 visible, it's impossible to assess its reachability.", false, "<explanation>\nI need to determine if the carton_1 is within the reach of the robotic arm (agent). However, the image does not show any carton_1 object present in the scene. Since there is no carton_1 visible, it's impossible to assess its reachability.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_2": ["yes", 5.983786195429275e-06, 6.471585220424458e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the agent: The agent is the robotic arm.\n2. Identify the plaything_2: The plaything_2 appears to be a small object near the robotic arm.\n3. Assess the distance between the agent and the plaything_2: The robotic arm is positioned close to the plaything_2, suggesting that it could potentially pick up the object.\n\nGiven these observations, the robotic arm (agent) seems to be in a position where it could interact with the plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the agent: The agent is the robotic arm.\n2. Identify the plaything_2: The plaything_2 appears to be a small object near the robotic arm.\n3. Assess the distance between the agent and the plaything_2: The robotic arm is positioned close to the plaything_2, suggesting that it could potentially pick up the object.\n\nGiven these observations, the robotic arm (agent) seems to be in a position where it could interact with the plaything_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 6.286901225394104e-06, 0.00038207301986403763, "I need to determine if the carton_1 is within the reach of the robotic arm (agent). However, the image does not show any carton_1 object present in the scene. Since there is no carton_1 visible, it's impossible to assess its reachability.", true, "<explanation>\nI need to determine if the carton_1 is within the reach of the robotic arm (agent). However, the image does not show any carton_1 object present in the scene. Since there is no carton_1 visible, it's impossible to assess its reachability.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["no", 9.087017133424524e-06, 2.815710104187019e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows the robotic arm positioned near the carton_1, suggesting that the arm could potentially interact with the carton_1. However, without specific information about the range of motion of the robotic arm or the exact distance between them, we cannot definitively conclude whether the carton_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows the robotic arm positioned near the carton_1, suggesting that the arm could potentially interact with the carton_1. However, without specific information about the range of motion of the robotic arm or the exact distance between them, we cannot definitively conclude whether the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_2": ["yes", 1.086740849132184e-05, 2.2199152226676233e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. The robotic arm is positioned near the center of the image, with its end effector (the part that holds objects) extended towards the right side.\n2. Plaything_2 is located on the floor to the left of the robotic arm.\n3. The robotic arm appears to have enough range of motion to reach plaything_2, as it is positioned in a way that suggests it could grasp the object.\n\nGiven these observations, the robotic arm seems capable of reaching plaything_2.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. The robotic arm is positioned near the center of the image, with its end effector (the part that holds objects) extended towards the right side.\n2. Plaything_2 is located on the floor to the left of the robotic arm.\n3. The robotic arm appears to have enough range of motion to reach plaything_2, as it is positioned in a way that suggests it could grasp the object.\n\nGiven these observations, the robotic arm seems capable of reaching plaything_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 1.0232129170617554e-05, 3.571364140952937e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows the robotic arm positioned near the carton_1, suggesting that the arm could potentially interact with the carton_1. However, without specific information about the range of motion of the robotic arm or the exact distance between them, we cannot definitively conclude whether the carton_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The image shows the robotic arm positioned near the carton_1, suggesting that the arm could potentially interact with the carton_1. However, without specific information about the range of motion of the robotic arm or the exact distance between them, we cannot definitively conclude whether the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["no", 7.06203763911617e-06, 0.000381011632271111, "I need to determine if the carton_1 is within the reach of the robotic arm (agent). However, the image does not show any carton_1 object. Since the question asks about the carton_1 and it's not present in the image, we cannot assess its reachability.", false, "<explanation>\nI need to determine if the carton_1 is within the reach of the robotic arm (agent). However, the image does not show any carton_1 object. Since the question asks about the carton_1 and it's not present in the image, we cannot assess its reachability.\n</explanation>\n<answer>No</answer>", false], "reachable plaything_2": ["no", 8.564396921428852e-06, 2.091509486490395e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2). The robotic arm appears to be positioned near the plaything_2, suggesting that it could potentially interact with it. However, without specific information about the range of motion of the robotic arm or the exact distance between them, it's not possible to definitively say whether the plaything_2 is within the reach of the agent.", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2). The robotic arm appears to be positioned near the plaything_2, suggesting that it could potentially interact with it. However, without specific information about the range of motion of the robotic arm or the exact distance between them, it's not possible to definitively say whether the plaything_2 is within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 7.603905487485463e-06, 1.97083627426764e-05, "To determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.", false, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_2).\n\n1. **Position of the Agent**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Position of plaything_2**: plaything_2 is located on the floor to the left of the robotic arm.\n3. **Reachability**: The robotic arm seems to have enough length to extend from its current position to reach plaything_2.\n\nGiven these observations, the robotic arm appears to be able to reach plaything_2 based on its current position and the visible length of the arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 1, "actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["yes", "no"], "nextto plaything_2,plaything_7": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,plaything_7": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"], "nextto plaything_7,plaything_2": ["yes", "no"], "nextto plaything_7,plaything_5": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5172413793103449, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 9}}}, "step": 3, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["yes", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.5833333333333334, "no_correct": 7, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 5, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 6, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 7, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 8, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 9, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 10, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 11, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 12, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 13, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 14, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 15, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 16, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 17, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 18, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 19, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 20, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 1.2237039300089236e-05, 1.5526722563663498e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and plaything_2.\n\n1. The robotic arm (agent) is visible in the foreground, extending towards the right side of the image.\n2. Plaything_2 appears to be a small object located near the center of the image, closer to the bottom.\n3. The robotic arm's reach seems to extend far enough to potentially interact with plaything_2 based on its current position and orientation.\n\nGiven these observations, it appears that plaything_2 is within the reach of the robotic arm (agent).", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and plaything_2.\n\n1. The robotic arm (agent) is visible in the foreground, extending towards the right side of the image.\n2. Plaything_2 appears to be a small object located near the center of the image, closer to the bottom.\n3. The robotic arm's reach seems to extend far enough to potentially interact with plaything_2 based on its current position and orientation.\n\nGiven these observations, it appears that plaything_2 is within the reach of the robotic arm (agent).\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["yes", 6.75109913572669e-06, 5.320727723301388e-06, "To determine if plaything_4 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and plaything_4.\n\n1. The robotic arm (agent) is visible in the foreground, extending towards the center of the room.\n2. Plaything_4 appears to be a small object located near the center of the room, slightly to the left of the robotic arm's current position.\n3. The robotic arm seems to have enough length to reach plaything_4 from its current position, as the arm extends far enough to potentially grasp the object.\n\nGiven these observations, it appears that the robotic arm (agent) is indeed in reach of plaything_4.", false, "<explanation>\nTo determine if plaything_4 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and plaything_4.\n\n1. The robotic arm (agent) is visible in the foreground, extending towards the center of the room.\n2. Plaything_4 appears to be a small object located near the center of the room, slightly to the left of the robotic arm's current position.\n3. The robotic arm seems to have enough length to reach plaything_4 from its current position, as the arm extends far enough to potentially grasp the object.\n\nGiven these observations, it appears that the robotic arm (agent) is indeed in reach of plaything_4.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 7.1629251578997355e-06, 1.1531806194398087e-05, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end effector (the part of the robotic arm that holds objects) and the carton_1.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the carton_1.\n2. Check the proximity of the end effector to the carton_1: The red bounding box around the end effector indicates its current position relative to the carton_1.\n3. Assess the clearance: There seems to be enough space for the end effector to grasp the carton_1 without colliding with any obstacles.\n\nGiven these observations, the carton_1 appears to be within the reach of the agent's end effector.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the agent's end effector (the part of the robotic arm that holds objects) and the carton_1.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the carton_1.\n2. Check the proximity of the end effector to the carton_1: The red bounding box around the end effector indicates its current position relative to the carton_1.\n3. Assess the clearance: There seems to be enough space for the end effector to grasp the carton_1 without colliding with any obstacles.\n\nGiven these observations, the carton_1 appears to be within the reach of the agent's end effector.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_3": ["yes", 7.1489425863546785e-06, 5.0970662414329126e-05, "To determine if the plaything_3 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the plaything_3.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the plaything_3.\n2. Check the proximity: The end-effector of the robotic arm is close to the plaything_3, indicating that the plaything_3 is within the range where the agent can potentially interact with it.\n\nGiven this analysis, the plaything_3 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the plaything_3 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that can hold objects) and the plaything_3.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the plaything_3.\n2. Check the proximity: The end-effector of the robotic arm is close to the plaything_3, indicating that the plaything_3 is within the range where the agent can potentially interact with it.\n\nGiven this analysis, the plaything_3 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_4": ["no", 9.082077667699195e-06, 2.6515550416661426e-05, "To determine if the plaything_4 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plaything_4. The robotic arm appears to be positioned above the plaything_4, suggesting that it could potentially pick up the object. However, without specific measurements or a clear view of the exact dimensions and distances involved, it's difficult to definitively state whether the plaything_4 is within the agent's reach based solely on this image.\n\nSince the image does not provide enough detail to confirm the exact reach capability of the robotic arm, we cannot conclusively say whether the plaything_4 is in reach.", true, "<explanation>\nTo determine if the plaything_4 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plaything_4. The robotic arm appears to be positioned above the plaything_4, suggesting that it could potentially pick up the object. However, without specific measurements or a clear view of the exact dimensions and distances involved, it's difficult to definitively state whether the plaything_4 is within the agent's reach based solely on this image.\n\nSince the image does not provide enough detail to confirm the exact reach capability of the robotic arm, we cannot conclusively say whether the plaything_4 is in reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_4, plaything_3)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_4": ["yes", 1.1507515409903135e-05, 0.00010410307731945068, "The image shows a robotic arm (the agent) positioned above a gray object labeled \"plaything_4\". The red bounding box around the \"plaything_4\" suggests that this object is being interacted with by the agent. Given that the agent is directly above the object and there's no indication of the object being held in another way, it is reasonable to infer that the agent is holding the \"plaything_4\".", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned above a gray object labeled \"plaything_4\". The red bounding box around the \"plaything_4\" suggests that this object is being interacted with by the agent. Given that the agent is directly above the object and there's no indication of the object being held in another way, it is reasonable to infer that the agent is holding the \"plaything_4\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_3": ["yes", 7.149694283725694e-06, 4.80302915093489e-05, "To determine if the plaything_3 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that holds objects) and the plaything_3.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the plaything_3.\n2. Check the proximity: The end-effector of the robotic arm is close to the plaything_3, indicating that the plaything_3 is within the range where the agent can potentially interact with it.\n\nGiven these observations, the plaything_3 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the plaything_3 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that holds objects) and the plaything_3.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the plaything_3.\n2. Check the proximity: The end-effector of the robotic arm is close to the plaything_3, indicating that the plaything_3 is within the range where the agent can potentially interact with it.\n\nGiven these observations, the plaything_3 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plaything_4, plaything_3)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_4": ["yes", 1.1507515409903135e-05, 0.00010410307731945068, "The image shows a robotic arm (the agent) positioned above a gray object labeled \"plaything_4\". The red bounding box around the \"plaything_4\" suggests that this object is being interacted with by the agent. Given that the agent is directly above the object and there's no indication of the object being held in another way, it is reasonable to infer that the agent is holding the \"plaything_4\".", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned above a gray object labeled \"plaything_4\". The red bounding box around the \"plaything_4\" suggests that this object is being interacted with by the agent. Given that the agent is directly above the object and there's no indication of the object being held in another way, it is reasonable to infer that the agent is holding the \"plaything_4\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_3": ["yes", 7.149694283725694e-06, 4.80302915093489e-05, "To determine if the plaything_3 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that holds objects) and the plaything_3.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the plaything_3.\n2. Check the proximity: The end-effector of the robotic arm is close to the plaything_3, indicating that the plaything_3 is within the range where the agent can potentially interact with it.\n\nGiven these observations, the plaything_3 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the plaything_3 is in reach of the agent, we need to assess the distance between the agent's end-effector (the part of the robotic arm that holds objects) and the plaything_3.\n\n1. Observe the position of the robotic arm: The arm appears to be extended towards the plaything_3.\n2. Check the proximity: The end-effector of the robotic arm is close to the plaything_3, indicating that the plaything_3 is within the range where the agent can potentially interact with it.\n\nGiven these observations, the plaything_3 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "holding plaything_2": ["yes", "no"], "holding plaything_4": ["yes", "no"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_4,plaything_2": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_4,plaything_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.375, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 1, "actions": ["navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_3": ["yes", "no"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_3": ["no", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_3,plaything_4": ["yes", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_4,plaything_3": ["yes", "no"], "ontop plaything_4,carton_1": ["yes", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_3,plaything_4": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 6, "no_total": 14, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 2, "actions": ["place-next-to(plaything_4, plaything_3)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_3": ["yes", "no"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_3": ["no", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_3,plaything_4": ["yes", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_4,plaything_3": ["yes", "no"], "ontop plaything_4,carton_1": ["yes", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_3,plaything_4": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 6, "no_total": 14, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 3, "actions": ["place-next-to(plaything_4, plaything_3)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.3704073353437707e-05, 0.00026877771597355604, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.3704073353437707e-05, 0.00026877771597355604, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 1.2218333722557873e-05, 6.865735485916957e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near a pole, while the robotic arm is extended towards it. The arm's end effector seems to be positioned close enough to potentially grasp the gym_shoe_1, indicating that it is within the agent's reach.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near a pole, while the robotic arm is extended towards it. The arm's end effector seems to be positioned close enough to potentially grasp the gym_shoe_1, indicating that it is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 5.316603164828848e-06, 1.4625101357523818e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Locate the sock_2 in the image.\n2. Observe the position of the robotic arm.\n3. Assess whether the robotic arm can extend to the location of the sock_2 without colliding with any obstacles.\n\nFrom the image, the sock_2 appears to be on the floor near the center of the room. The robotic arm is positioned above the floor, and it seems capable of reaching down to the floor level where the sock_2 is located. There are no visible obstacles between the robotic arm and the sock_2.\n\nTherefore, based on the position and potential reach of the robotic arm, the sock_2 is likely within the agent's reach.", true, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Locate the sock_2 in the image.\n2. Observe the position of the robotic arm.\n3. Assess whether the robotic arm can extend to the location of the sock_2 without colliding with any obstacles.\n\nFrom the image, the sock_2 appears to be on the floor near the center of the room. The robotic arm is positioned above the floor, and it seems capable of reaching down to the floor level where the sock_2 is located. There are no visible obstacles between the robotic arm and the sock_2.\n\nTherefore, based on the position and potential reach of the robotic arm, the sock_2 is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": true, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable table_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable table_2": ["no", 1.151745982497232e-05, 2.8126769393566065e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table, suggesting it could potentially interact with objects on the table. However, without specific information about the arm's reach or the exact dimensions of the table, we cannot definitively conclude whether the table is within the arm's operational range.\n\nSince the question asks if the table is in reach, and we don't have enough information to confirm this, we must assume that based on the visual cues, the table might be within the arm's reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of precise information, the most accurate response is to acknowledge that we cannot conclusively say yes or no without more details.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table, suggesting it could potentially interact with objects on the table. However, without specific information about the arm's reach or the exact dimensions of the table, we cannot definitively conclude whether the table is within the arm's operational range.\n\nSince the question asks if the table is in reach, and we don't have enough information to confirm this, we must assume that based on the visual cues, the table might be within the arm's reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of precise information, the most accurate response is to acknowledge that we cannot conclusively say yes or no without more details.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": false, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.0839564311027061e-05, 0.00010407454828964546, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact positioning and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm reaching down to the gym_shoe_1, we cannot confirm that the gym_shoe_1 is definitely in reach.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact positioning and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm reaching down to the gym_shoe_1, we cannot confirm that the gym_shoe_1 is definitely in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 5.316540864441777e-06, 1.4624929463025182e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) and the location of the sock_2.\n\n1. The robotic arm is positioned above a desk, extending towards the right side of the image.\n2. The sock_2 is located on the floor near the center of the image, closer to the left side.\n3. The robotic arm appears to have a range of motion that allows it to reach objects on the desk and possibly nearby areas.\n4. Given the positioning of the sock_2 relative to the robotic arm's current position and potential reach, it seems plausible that the robotic arm could reach the sock_2 if it were to move its arm downward and slightly to the left.\n\nSince the robotic arm has the capability to reach the sock_2 based on its current position and potential movement, the answer is yes.", true, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) and the location of the sock_2.\n\n1. The robotic arm is positioned above a desk, extending towards the right side of the image.\n2. The sock_2 is located on the floor near the center of the image, closer to the left side.\n3. The robotic arm appears to have a range of motion that allows it to reach objects on the desk and possibly nearby areas.\n4. Given the positioning of the sock_2 relative to the robotic arm's current position and potential reach, it seems plausible that the robotic arm could reach the sock_2 if it were to move its arm downward and slightly to the left.\n\nSince the robotic arm has the capability to reach the sock_2 based on its current position and potential movement, the answer is yes.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": true, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable table_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable table_2": ["no", 1.1511466254887637e-05, 4.017896935692988e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table. However, without specific information about the arm's reach or the exact dimensions of the table, we cannot definitively conclude whether the table is within the arm's reach.\n\nSince the question asks if the table_2 is in reach of the agent, and we do not have enough information to confirm this, we must assume that based on the visual cues provided, the table might be within the arm's reach. However, this is an assumption and not a definitive answer.\n\nGiven the lack of precise information, the most accurate response is to acknowledge the uncertainty.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table. However, without specific information about the arm's reach or the exact dimensions of the table, we cannot definitively conclude whether the table is within the arm's reach.\n\nSince the question asks if the table_2 is in reach of the agent, and we do not have enough information to confirm this, we must assume that based on the visual cues provided, the table might be within the arm's reach. However, this is an assumption and not a definitive answer.\n\nGiven the lack of precise information, the most accurate response is to acknowledge the uncertainty.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": false, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.0206162187387235e-05, 0.00013196216605138034, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm reaching down to the gym_shoe_1, we cannot confirm that the gym_shoe_1 is definitely in reach.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm reaching down to the gym_shoe_1, we cannot confirm that the gym_shoe_1 is definitely in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.0206162187387235e-05, 0.00013196216605138034, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm reaching down to the gym_shoe_1, we cannot confirm that the gym_shoe_1 is definitely in reach.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm reaching down to the gym_shoe_1, we cannot confirm that the gym_shoe_1 is definitely in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.1496081242512446e-05, 0.00013195785868447274, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned to grab the gym_shoe_1 from its current location on the floor.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in direct reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned to grab the gym_shoe_1 from its current location on the floor.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in direct reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.1496081242512446e-05, 0.00013195785868447274, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned to grab the gym_shoe_1 from its current location on the floor.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in direct reach of the agent.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned to grab the gym_shoe_1 from its current location on the floor.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in direct reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 8.546135177311953e-06, 9.242809028364718e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 8.546135177311953e-06, 9.242809028364718e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to the gym_shoe_1 from its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.021804018819239e-05, 0.00010412406118120998, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned with the gym_shoe_1, suggesting that the gym_shoe_1 may not be within the immediate reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned with the gym_shoe_1, suggesting that the gym_shoe_1 may not be within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.021804018819239e-05, 0.00010412406118120998, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned with the gym_shoe_1, suggesting that the gym_shoe_1 may not be within the immediate reach of the agent.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near some wooden poles, while the robotic arm is positioned above and to the right of the shoe. Given the current position of the robotic arm, it seems that the arm is not directly aligned with the gym_shoe_1, suggesting that the gym_shoe_1 may not be within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 9.592000424163416e-06, 0.00021191136329434812, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, likely a coat rack, but no gym_shoe_1 is visible in the immediate vicinity of the arm. Since the gym_shoe_1 is not present in the image, it cannot be determined whether it is in reach of the agent.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, likely a coat rack, but no gym_shoe_1 is visible in the immediate vicinity of the arm. Since the gym_shoe_1 is not present in the image, it cannot be determined whether it is in reach of the agent.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 9.592000424163416e-06, 0.00021191136329434812, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, likely a coat rack, but no gym_shoe_1 is visible in the immediate vicinity of the arm. Since the gym_shoe_1 is not present in the image, it cannot be determined whether it is in reach of the agent.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, likely a coat rack, but no gym_shoe_1 is visible in the immediate vicinity of the arm. Since the gym_shoe_1 is not present in the image, it cannot be determined whether it is in reach of the agent.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 9.045443221111782e-06, 0.00018828848260454834, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm's ability to reach the gym_shoe_1, we cannot make a definitive statement about its reach.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm's ability to reach the gym_shoe_1, we cannot make a definitive statement about its reach.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 9.045443221111782e-06, 0.00018828848260454834, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm's ability to reach the gym_shoe_1, we cannot make a definitive statement about its reach.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, extending towards the right side of the image.\n\nGiven the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to the gym_shoe_1 if it were oriented correctly. However, the image does not provide enough detail about the exact position and angle of the robotic arm relative to the gym_shoe_1 to definitively conclude whether it is within reach.\n\nSince the image does not clearly show the robotic arm's ability to reach the gym_shoe_1, we cannot make a definitive statement about its reach.\n</explanation>\n<answer>No</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.0157775250263512e-05, 0.00026828498812392354, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.0157775250263512e-05, 0.00026828498812392354, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.0804509656736627e-05, 0.000211908423807472, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.0804509656736627e-05, 0.000211908423807472, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The image shows a robotic arm extending towards a wooden structure, possibly a coat rack, but no gym_shoe_1 is visible in the image. Since the gym_shoe_1 is not present in the scene, it cannot be in the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.2215934475534596e-05, 7.732211088296026e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and the robotic arm is positioned nearby. However, the robotic arm's end effector does not seem to be directly interacting with or reaching towards the gym_shoe_1. The arm is oriented away from the shoe, and there is no indication of movement towards it.\n\nTherefore, based on the current positioning and orientation of the robotic arm relative to the gym_shoe_1, it seems that the gym_shoe_1 is not currently in reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and the robotic arm is positioned nearby. However, the robotic arm's end effector does not seem to be directly interacting with or reaching towards the gym_shoe_1. The arm is oriented away from the shoe, and there is no indication of movement towards it.\n\nTherefore, based on the current positioning and orientation of the robotic arm relative to the gym_shoe_1, it seems that the gym_shoe_1 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.2215934475534596e-05, 7.732211088296026e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and the robotic arm is positioned nearby. However, the robotic arm's end effector does not seem to be directly interacting with or reaching towards the gym_shoe_1. The arm is oriented away from the shoe, and there is no indication of movement towards it.\n\nTherefore, based on the current positioning and orientation of the robotic arm relative to the gym_shoe_1, it seems that the gym_shoe_1 is not currently in reach of the agent.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and the robotic arm is positioned nearby. However, the robotic arm's end effector does not seem to be directly interacting with or reaching towards the gym_shoe_1. The arm is oriented away from the shoe, and there is no indication of movement towards it.\n\nTherefore, based on the current positioning and orientation of the robotic arm relative to the gym_shoe_1, it seems that the gym_shoe_1 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 9.622054676583502e-06, 0.0001675364765105769, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and is positioned at a height and distance that would make it difficult for the robotic arm to reach without additional manipulation.\n\nThe robotic arm is shown in a position where its end effector is extended towards the gym_shoe_1, but the angle and distance suggest that the arm cannot physically grasp the shoe as it is currently suspended. The arm's reach seems limited by the current configuration of the gym_shoe_1 and the structure it is attached to.\n\nTherefore, based on the visual information provided, the gym_shoe_1 is not in direct reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and is positioned at a height and distance that would make it difficult for the robotic arm to reach without additional manipulation.\n\nThe robotic arm is shown in a position where its end effector is extended towards the gym_shoe_1, but the angle and distance suggest that the arm cannot physically grasp the shoe as it is currently suspended. The arm's reach seems limited by the current configuration of the gym_shoe_1 and the structure it is attached to.\n\nTherefore, based on the visual information provided, the gym_shoe_1 is not in direct reach of the agent.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 9.622054676583502e-06, 0.0001675364765105769, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and is positioned at a height and distance that would make it difficult for the robotic arm to reach without additional manipulation.\n\nThe robotic arm is shown in a position where its end effector is extended towards the gym_shoe_1, but the angle and distance suggest that the arm cannot physically grasp the shoe as it is currently suspended. The arm's reach seems limited by the current configuration of the gym_shoe_1 and the structure it is attached to.\n\nTherefore, based on the visual information provided, the gym_shoe_1 is not in direct reach of the agent.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a structure, possibly a coat rack, and is positioned at a height and distance that would make it difficult for the robotic arm to reach without additional manipulation.\n\nThe robotic arm is shown in a position where its end effector is extended towards the gym_shoe_1, but the angle and distance suggest that the arm cannot physically grasp the shoe as it is currently suspended. The arm's reach seems limited by the current configuration of the gym_shoe_1 and the structure it is attached to.\n\nTherefore, based on the visual information provided, the gym_shoe_1 is not in direct reach of the agent.\n</explanation>\n<answer>No</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.0825449862750247e-05, 0.00016733455413486809, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the gym_shoe_1 is within the reach of the agent's end-effector.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the gym_shoe_1 is within the reach of the agent's end-effector.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.0825449862750247e-05, 0.00016733455413486809, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the gym_shoe_1 is within the reach of the agent's end-effector.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and to the right. Given the typical range of motion for a robotic arm, it seems unlikely that the gym_shoe_1 is within the reach of the agent's end-effector.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 9.606718776922207e-06, 0.00013182955444790423, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned above and to the right of the shoe. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to pick up the gym_shoe_1 from the floor.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned above and to the right of the shoe. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to pick up the gym_shoe_1 from the floor.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 7.154937520681415e-06, 2.497318564564921e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Locate the sock_2 in the image.\n2. Observe the position of the robotic arm.\n3. Assess whether the robotic arm can extend towards the sock_2 without hitting any obstacles.\n\nFrom the image, the sock_2 is on the floor near the center of the room. The robotic arm appears to be positioned above the floor, and it seems capable of reaching down to the floor level where the sock_2 is located. There are no visible obstacles between the robotic arm and the sock_2.\n\nTherefore, based on the positioning and the apparent reach of the robotic arm, the sock_2 is likely within the reach of the agent.", true, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Locate the sock_2 in the image.\n2. Observe the position of the robotic arm.\n3. Assess whether the robotic arm can extend towards the sock_2 without hitting any obstacles.\n\nFrom the image, the sock_2 is on the floor near the center of the room. The robotic arm appears to be positioned above the floor, and it seems capable of reaching down to the floor level where the sock_2 is located. There are no visible obstacles between the robotic arm and the sock_2.\n\nTherefore, based on the positioning and the apparent reach of the robotic arm, the sock_2 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["no", 2.213036350440234e-05, 7.277895929291844e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table_1, suggesting it could potentially reach the table. However, without specific information about the arm's range or the exact distance between the arm and the table, we cannot definitively conclude whether the table is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume the answer is based on the visual evidence alone.\n\nThe robotic arm is positioned above the table, which suggests it might be able to reach the table. However, this is speculative without more precise information about the arm's capabilities.\n\nGiven the lack of definitive information, we cannot conclusively say the table is definitely within reach.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table_1, suggesting it could potentially reach the table. However, without specific information about the arm's range or the exact distance between the arm and the table, we cannot definitively conclude whether the table is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume the answer is based on the visual evidence alone.\n\nThe robotic arm is positioned above the table, which suggests it might be able to reach the table. However, this is speculative without more precise information about the arm's capabilities.\n\nGiven the lack of definitive information, we cannot conclusively say the table is definitely within reach.\n</explanation>\n<answer>No</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": true, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable table_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 4, "actions": ["navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 5, "actions": ["navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable table_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 7, "actions": ["navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 8, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 9, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 11, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 12, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 13, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 14, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 15, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 16, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 17, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 18, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 9.63648926699534e-06, 5.4149430070538074e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a hook, and the robotic arm is positioned nearby. However, the robotic arm's end effector does not seem to be directly interacting with or reaching towards the gym_shoe_1 at this moment.\n\nTherefore, based on the current positioning and interaction, the gym_shoe_1 is not in direct reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the position and orientation of both the gym_shoe_1 and the robotic arm (agent). The gym_shoe_1 appears to be hanging from a hook, and the robotic arm is positioned nearby. However, the robotic arm's end effector does not seem to be directly interacting with or reaching towards the gym_shoe_1 at this moment.\n\nTherefore, based on the current positioning and interaction, the gym_shoe_1 is not in direct reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": true, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["no", 6.746522558387369e-06, 1.086142765416298e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.", false, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_2: It appears to be on the floor near the center of the room.\n2. Identify the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. Assess the distance: The sock_2 is located approximately 2-3 meters away from the robotic arm based on the scale of the room.\n4. Consider the arm's reach: The robotic arm seems to have a limited range of motion, as it is currently extended horizontally without any visible mechanism for vertical movement.\n\nGiven these observations, the sock_2 is not within the immediate reach of the robotic arm due to both the distance and the apparent limitations of the arm's range of motion.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding gym_shoe_1": [true, false, false], "holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 9, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 11, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 12, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 13, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 14, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 15, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 16, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 17, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 18, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 19, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "holding sock_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 20, "actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}], "remaining_actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 1.0843722520803567e-05, 0.0001041144787450321, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (the agent). From the image, the gym_shoe_1 appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, closer to the wall. The gym_shoe_1 is not directly in front of the robotic arm, and there doesn't seem to be enough space for the robotic arm to reach it without moving significantly.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in immediate reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (the agent). From the image, the gym_shoe_1 appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, closer to the wall. The gym_shoe_1 is not directly in front of the robotic arm, and there doesn't seem to be enough space for the robotic arm to reach it without moving significantly.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable sock_1": ["no", 1.0233288776362315e-05, 2.8150096113677137e-05, "To determine if the sock_1 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_1: It appears to be located on the floor near the center of the room.\n2. Observe the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the wall.\n3. Assess the reach: The robotic arm seems to have a limited range of motion, primarily extending horizontally. Given this, it would be challenging for the robotic arm to reach the sock_1 without moving significantly out of its current position.\n\nBased on these observations, the sock_1 is not within the immediate reach of the robotic arm as it stands currently.", true, "<explanation>\nTo determine if the sock_1 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_1: It appears to be located on the floor near the center of the room.\n2. Observe the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the wall.\n3. Assess the reach: The robotic arm seems to have a limited range of motion, primarily extending horizontally. Given this, it would be challenging for the robotic arm to reach the sock_1 without moving significantly out of its current position.\n\nBased on these observations, the sock_1 is not within the immediate reach of the robotic arm as it stands currently.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 2.352756928303279e-05, 2.6502022592467256e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_1. The robotic arm appears to be positioned close to the table_1, suggesting that it could potentially interact with the table_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_1. The robotic arm appears to be positioned close to the table_1, suggesting that it could potentially interact with the table_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", true, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["yes", 8.052643352129962e-06, 6.467239290941507e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-right area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-right area of the image.\n3. **Reachability**: The robotic arm appears to be positioned in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 1.6397769286413677e-05, 0.0002690144465304911, "The image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm as the agent. The agent appears to be holding a gym shoe labeled \"gym_shoe_1\". The gym shoe is clearly visible in the agent's hand, indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 2.0881907403236255e-05, 2.6495594283915125e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 1, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 2, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 3, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 4, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 5, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 6, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 7, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 8, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 9, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 10, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 11, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 12, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 13, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 14, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 15, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 16, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 17, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 18, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 19, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5483870967741935, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5769230769230769, "no_correct": 15, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}}}, "step": 20, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 8.544397132936865e-06, 0.00010409206879558042, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (the agent). From the image, the gym_shoe_1 appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, closer to the wall. The gym_shoe_1 is not directly in front of the robotic arm, and there doesn't seem to be enough space for the robotic arm to reach it without moving significantly.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in immediate reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (the agent). From the image, the gym_shoe_1 appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, closer to the wall. The gym_shoe_1 is not directly in front of the robotic arm, and there doesn't seem to be enough space for the robotic arm to reach it without moving significantly.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable sock_1": ["no", 1.0229665349470451e-05, 3.364176154718734e-05, "To determine if the sock_1 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_1: It appears to be located on the floor near the center of the room.\n2. Observe the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the wall.\n3. Assess the reach: The robotic arm seems to have a limited range of motion, as indicated by the red line which likely represents its operational area. The sock_1 is outside this operational area.\n4. Consider the agent's capabilities: The agent can hold objects, but it cannot reach the sock_1 due to the limitations of its arm.\n\nGiven these observations, the sock_1 is not within the reach of the agent.", true, "<explanation>\nTo determine if the sock_1 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm's current position and its range of motion.\n\n1. Identify the sock_1: It appears to be located on the floor near the center of the room.\n2. Observe the robotic arm: The robotic arm is positioned towards the right side of the image, extending from the wall.\n3. Assess the reach: The robotic arm seems to have a limited range of motion, as indicated by the red line which likely represents its operational area. The sock_1 is outside this operational area.\n4. Consider the agent's capabilities: The agent can hold objects, but it cannot reach the sock_1 due to the limitations of its arm.\n\nGiven these observations, the sock_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 2.3518228772445582e-05, 2.9840637580491602e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table. The robotic arm appears to be positioned close to the table, suggesting that it could potentially interact with the table. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its operational reach.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table. The robotic arm appears to be positioned close to the table, suggesting that it could potentially interact with the table. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its operational reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_2": ["no", 1.853450885391794e-05, 3.166932219755836e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.", true, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_2. The robotic arm appears to be positioned close to the table_2, suggesting that it could potentially interact with the table_2. However, without more specific information about the range of motion of the robotic arm, it's difficult to definitively say whether it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["yes", 7.584440481878119e-06, 7.282093429239467e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned near the edge of the room, close to the wall.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-right area of the image. It is situated against the wall and appears to be at a height that would be accessible by the robotic arm.\n\n3. **Reachability**: The robotic arm extends far enough to reach the cabinet_1. The arm's length and angle suggest that it could potentially grasp the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have sufficient reach to interact with the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned near the edge of the room, close to the wall.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-right area of the image. It is situated against the wall and appears to be at a height that would be accessible by the robotic arm.\n\n3. **Reachability**: The robotic arm extends far enough to reach the cabinet_1. The arm's length and angle suggest that it could potentially grasp the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm appears to have sufficient reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 1.2207693544041831e-05, 0.0001320286828558892, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (the agent). From the image, the gym_shoe_1 appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, closer to the wall. The gym_shoe_1 is not directly in front of the robotic arm, and there doesn't seem to be enough space for the robotic arm to reach it without moving significantly.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in immediate reach of the agent.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (the agent). From the image, the gym_shoe_1 appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, closer to the wall. The gym_shoe_1 is not directly in front of the robotic arm, and there doesn't seem to be enough space for the robotic arm to reach it without moving significantly.\n\nTherefore, based on the current positioning, the gym_shoe_1 is not in immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 5.300377324601868e-06, 0.00013190261961426586, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned towards the right side of the image. Given the distance between the gym_shoe_1 and the robotic arm, it seems that the gym_shoe_1 is not within the immediate reach of the robotic arm.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned towards the right side of the image. Given the distance between the gym_shoe_1 and the robotic arm, it seems that the gym_shoe_1 is not within the immediate reach of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable sock_1": ["no", 6.745213340764167e-06, 1.969296317838598e-05, "To determine if the sock_1 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm (the agent). The sock appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and towards the right side of the image. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to pick up the sock from the floor.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the sock_1 is in reach of the agent, we need to consider the position of the sock relative to the robotic arm (the agent). The sock appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up and towards the right side of the image. Given the typical range of motion for a robotic arm, it seems unlikely that the arm could reach down to pick up the sock from the floor.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 1.7463611584389582e-05, 2.351734474359546e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_1. The robotic arm appears to be positioned near the table_1, suggesting that it could potentially reach the table. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it can reach the table or not.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_1. The robotic arm appears to be positioned near the table_1, suggesting that it could potentially reach the table. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it can reach the table or not.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_2": ["no", 1.2215868991916068e-05, 3.166199167026207e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of the robotic arm (the agent) relative to the table_2.\n\n1. The robotic arm is positioned on the right side of the image.\n2. The table_2 is located on the left side of the image, across from the robotic arm.\n3. The robotic arm appears to be facing towards the table_2, suggesting it could potentially reach it.\n4. However, the robotic arm's reach seems limited based on its current position and orientation.\n\nGiven these observations, the robotic arm does not appear to be in direct reach of the table_2 without some form of movement or adjustment.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of the robotic arm (the agent) relative to the table_2.\n\n1. The robotic arm is positioned on the right side of the image.\n2. The table_2 is located on the left side of the image, across from the robotic arm.\n3. The robotic arm appears to be facing towards the table_2, suggesting it could potentially reach it.\n4. However, the robotic arm's reach seems limited based on its current position and orientation.\n\nGiven these observations, the robotic arm does not appear to be in direct reach of the table_2 without some form of movement or adjustment.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 4.436000835994491e-06, 0.00011716262088157237, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned towards the right side of the image. Given the distance between the gym_shoe_1 and the robotic arm, it seems that the gym_shoe_1 is not within the immediate reach of the robotic arm.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the gym_shoe_1 relative to the robotic arm (agent). The gym_shoe_1 appears to be on the floor near the bottom left corner of the image, while the robotic arm is positioned towards the right side of the image. Given the distance between the gym_shoe_1 and the robotic arm, it seems that the gym_shoe_1 is not within the immediate reach of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 5.988792963762535e-06, 2.9875307518523186e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the distance between the shoe and the robotic arm (the agent). The shoe is located on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it appears that the shoe is within its reach as the arm can extend downward to grasp objects on the floor.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the distance between the shoe and the robotic arm (the agent). The shoe is located on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it appears that the shoe is within its reach as the arm can extend downward to grasp objects on the floor.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 1.3764337381871883e-05, 2.984121601912193e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table_2, suggesting it could potentially reach the table. However, without specific information about the arm's range or the exact distance between the arm and the table, we cannot definitively say whether the table is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the information provided does not allow us to make a definitive conclusion.\n\nTherefore, the answer is \"No\" because we cannot confirm the reachability based on the given information.", true, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the table_2, suggesting it could potentially reach the table. However, without specific information about the arm's range or the exact distance between the arm and the table, we cannot definitively say whether the table is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the information provided does not allow us to make a definitive conclusion.\n\nTherefore, the answer is \"No\" because we cannot confirm the reachability based on the given information.\n</explanation>\n<answer>No</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable gym_shoe_1": ["yes", 6.354970537358895e-06, 3.1702023989055306e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to assess the distance between the shoe and the robotic arm (the agent). The shoe is located on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it appears that the shoe is within its reach as the arm can extend downward to grasp objects on the floor.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to assess the distance between the shoe and the robotic arm (the agent). The shoe is located on the floor near the bottom left corner of the image, while the robotic arm is positioned higher up, closer to the center-right of the image. Given the typical range of motion for a robotic arm, it appears that the shoe is within its reach as the arm can extend downward to grasp objects on the floor.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 2.2198162696440704e-05, 2.816569758579135e-05, "The image shows a robotic arm (the agent) holding a gym shoe. The gym shoe appears to be the object referred to as 'gym_shoe_1' in the question. Since the robotic arm is gripping the gym shoe, it can be concluded that the agent is indeed holding the gym shoe.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding a gym shoe. The gym shoe appears to be the object referred to as 'gym_shoe_1' in the question. Since the robotic arm is gripping the gym shoe, it can be concluded that the agent is indeed holding the gym shoe.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop gym_shoe_1,table_2": ["no", 1.1527326023497153e-05, 3.571865818230435e-05, "To determine if the gym_shoe_1 is on top of the table_2, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a black shoe being held by the robotic arm.\n2. Identify the table_2: This seems to be the surface where the shoe is resting.\n3. Check the position: The shoe is clearly positioned above the table, suggesting it's not directly on top of it.\n\nGiven this analysis, the gym_shoe_1 is not on top of the table_2; it is being held above it by the robotic arm.", true, "<explanation>\nTo determine if the gym_shoe_1 is on top of the table_2, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a black shoe being held by the robotic arm.\n2. Identify the table_2: This seems to be the surface where the shoe is resting.\n3. Check the position: The shoe is clearly positioned above the table, suggesting it's not directly on top of it.\n\nGiven this analysis, the gym_shoe_1 is not on top of the table_2; it is being held above it by the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,table_2": ["no", 8.554149644623976e-06, 4.806754077435471e-05, "To determine if the gym_shoe_1 is next to the table_2, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a shoe held by the robotic arm.\n2. Identify the table_2: It seems to be the surface on which the shoe is placed.\n3. Check the spatial relationship: The shoe is directly on the surface of the table, indicating it's in contact with the table.\n\nSince the shoe is on the table, it is not next to the table but rather on it. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if the gym_shoe_1 is next to the table_2, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a shoe held by the robotic arm.\n2. Identify the table_2: It seems to be the surface on which the shoe is placed.\n3. Check the spatial relationship: The shoe is directly on the surface of the table, indicating it's in contact with the table.\n\nSince the shoe is on the table, it is not next to the table but rather on it. Therefore, the answer is \"No\".\n\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": true, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": true, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": true, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 1.0854755601030774e-05, 5.414939369075e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position and orientation of both the sock_2 and the robotic arm (agent). The sock_2 appears to be floating in mid-air near the robotic arm, suggesting it might be in the process of being picked up or placed down by the agent. Given the proximity and alignment, it seems reasonable to conclude that the sock_2 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position and orientation of both the sock_2 and the robotic arm (agent). The sock_2 appears to be floating in mid-air near the robotic arm, suggesting it might be in the process of being picked up or placed down by the agent. Given the proximity and alignment, it seems reasonable to conclude that the sock_2 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 2.8136619221186265e-05, 3.570058834156953e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the shoe and the robotic arm.\n\n1. **Position of the Shoe**: The gym_shoe_1 appears to be floating in mid-air, suggesting it has been lifted from its original position.\n2. **Position of the Agent**: The robotic arm is positioned below the shoe, indicating that it is holding or attempting to hold the shoe.\n3. **Reach Assessment**: Given that the robotic arm is directly under the shoe and appears to be gripping it, it suggests that the shoe is within the reach of the agent.\n\nBased on this analysis, the gym_shoe_1 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position and orientation of both the shoe and the robotic arm.\n\n1. **Position of the Shoe**: The gym_shoe_1 appears to be floating in mid-air, suggesting it has been lifted from its original position.\n2. **Position of the Agent**: The robotic arm is positioned below the shoe, indicating that it is holding or attempting to hold the shoe.\n3. **Reach Assessment**: Given that the robotic arm is directly under the shoe and appears to be gripping it, it suggests that the shoe is within the reach of the agent.\n\nBased on this analysis, the gym_shoe_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 6.734659109497443e-06, 4.016441380372271e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, holding a shoe. Its position appears to be relatively low and close to the ground.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the wall. It is positioned at a higher elevation compared to the agent's current position.\n3. **Reachability**: The robotic arm seems to have a limited range of motion based on its design and the way it is currently holding the shoe. Given this, it would be challenging for the agent to reach the cabinet_1 without significant repositioning or adjustment.\n\nConsidering these points, the cabinet_1 is not within easy reach of the agent as it stands now.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, holding a shoe. Its position appears to be relatively low and close to the ground.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the wall. It is positioned at a higher elevation compared to the agent's current position.\n3. **Reachability**: The robotic arm seems to have a limited range of motion based on its design and the way it is currently holding the shoe. Given this, it would be challenging for the agent to reach the cabinet_1 without significant repositioning or adjustment.\n\nConsidering these points, the cabinet_1 is not within easy reach of the agent as it stands now.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.366788223502226e-05, 2.8162003218312748e-05, "The image shows a robotic arm (the agent) holding a gym shoe. The gym shoe appears to be the object referred to as 'gym_shoe_1' in the question. Since the robotic arm is gripping the gym shoe, it can be concluded that the agent is indeed holding the gym shoe.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding a gym shoe. The gym shoe appears to be the object referred to as 'gym_shoe_1' in the question. Since the robotic arm is gripping the gym shoe, it can be concluded that the agent is indeed holding the gym shoe.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sock_2": ["yes", 1.0229301551589742e-05, 4.808043013326824e-05, "To determine if the sock_2 is in reach of the agent, we need to consider the position and orientation of both the sock_2 and the robotic arm (agent). The sock_2 appears to be floating in mid-air near the robotic arm, suggesting that it is within the range where the robotic arm could potentially pick it up. The robotic arm's claw-like end is positioned close to the sock_2, indicating that it is indeed in reach.\n\nTherefore, based on the visual information provided, the sock_2 is in reach of the agent.", true, "<explanation>\nTo determine if the sock_2 is in reach of the agent, we need to consider the position and orientation of both the sock_2 and the robotic arm (agent). The sock_2 appears to be floating in mid-air near the robotic arm, suggesting that it is within the range where the robotic arm could potentially pick it up. The robotic arm's claw-like end is positioned close to the sock_2, indicating that it is indeed in reach.\n\nTherefore, based on the visual information provided, the sock_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"nextto gym_shoe_1,sock_2": ["yes", 7.597821877425304e-06, 4.2693729483289644e-05, "To determine if the gym_shoe_1 is next to the sock_2, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a gray shoe located on the floor near the center of the image.\n2. Identify the sock_2: It appears to be a white sock also on the floor, positioned slightly to the right of the gym_shoe_1.\n3. Check their proximity: The gym_shoe_1 and the sock_2 are close enough to each other to be considered next to each other.\n\nBased on this analysis, the gym_shoe_1 is indeed next to the sock_2.", true, "<explanation>\nTo determine if the gym_shoe_1 is next to the sock_2, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a gray shoe located on the floor near the center of the image.\n2. Identify the sock_2: It appears to be a white sock also on the floor, positioned slightly to the right of the gym_shoe_1.\n3. Check their proximity: The gym_shoe_1 and the sock_2 are close enough to each other to be considered next to each other.\n\nBased on this analysis, the gym_shoe_1 is indeed next to the sock_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding gym_shoe_1": ["yes", 1.7430314983357675e-05, 0.000303491426166147, "To determine if the agent is holding the gym_shoe_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the gym_shoe_1: The gym_shoe_1 is located on the floor near the agent's position.\n3. Check if the agent is interacting with the gym_shoe_1: The agent appears to be positioned close to the gym_shoe_1, suggesting it might be attempting to pick it up.\n\nSince the agent is positioned near the gym_shoe_1 and seems to be in a position where it could potentially pick it up, we can infer that the agent is likely holding the gym_shoe_1.", false, "<explanation>\nTo determine if the agent is holding the gym_shoe_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the gym_shoe_1: The gym_shoe_1 is located on the floor near the agent's position.\n3. Check if the agent is interacting with the gym_shoe_1: The agent appears to be positioned close to the gym_shoe_1, suggesting it might be attempting to pick it up.\n\nSince the agent is positioned near the gym_shoe_1 and seems to be in a position where it could potentially pick it up, we can infer that the agent is likely holding the gym_shoe_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable gym_shoe_1": ["yes", 9.645011232350953e-06, 1.8563607227406465e-05, "To determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the shoe relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Shoe**: The gym_shoe_1 is on the floor near the bottom left corner of the image.\n2. **Position of the Robotic Arm**: The robotic arm is visible in the upper right part of the image, extending towards the center of the room.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a significant range of motion, capable of reaching across the room. However, the specific reach needed to pick up the shoe would depend on the exact dimensions of the room and the arm's capabilities.\n\nGiven the visual information, the robotic arm seems to be positioned in such a way that it could potentially reach the gym_shoe_1 if it were extended further. However, without precise measurements or more detailed information about the arm's reach, it's difficult to definitively say whether it is currently in reach.\n\nSince the question asks if the gym_shoe_1 is in reach of the agent, and based on the visual evidence provided, it appears that the shoe is within the potential reach of the robotic arm.", true, "<explanation>\nTo determine if the gym_shoe_1 is in reach of the agent, we need to consider the position of the shoe relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Shoe**: The gym_shoe_1 is on the floor near the bottom left corner of the image.\n2. **Position of the Robotic Arm**: The robotic arm is visible in the upper right part of the image, extending towards the center of the room.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a significant range of motion, capable of reaching across the room. However, the specific reach needed to pick up the shoe would depend on the exact dimensions of the room and the arm's capabilities.\n\nGiven the visual information, the robotic arm seems to be positioned in such a way that it could potentially reach the gym_shoe_1 if it were extended further. However, without precise measurements or more detailed information about the arm's reach, it's difficult to definitively say whether it is currently in reach.\n\nSince the question asks if the gym_shoe_1 is in reach of the agent, and based on the visual evidence provided, it appears that the shoe is within the potential reach of the robotic arm.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_2": ["no", 1.1503238965815399e-05, 0.00016753620002418756, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be interacting with objects on the floor, specifically a pair of shoes and a sock. However, the specific action of the robotic arm holding the sock_2 cannot be determined from this image alone as the exact interaction is not clearly visible.", true, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be interacting with objects on the floor, specifically a pair of shoes and a sock. However, the specific action of the robotic arm holding the sock_2 cannot be determined from this image alone as the exact interaction is not clearly visible.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 3.1698069506092e-05, 5.416148269432597e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop gym_shoe_1,sock_2": ["no", 9.056116141437087e-06, 0.0001485704560764134, "To determine if the gym_shoe_1 is on top of the sock_2, I need to analyze their positions relative to each other. From the image, the gym_shoe_1 appears to be floating above the floor, while the sock_2 is on the ground. There is no indication that the shoe is resting on the sock. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if the gym_shoe_1 is on top of the sock_2, I need to analyze their positions relative to each other. From the image, the gym_shoe_1 appears to be floating above the floor, while the sock_2 is on the ground. There is no indication that the shoe is resting on the sock. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,table_2": ["no", 3.2894238302105805e-06, 0.0001484483218519017, "I need to determine if the gym_shoe_1 is located on top of the table_2. From the image, I observe that the gym_shoe_1 appears to be floating in mid-air near the wall, not resting on any surface like a table. The table_2 is visible in the background, but the shoe is not positioned on it. Therefore, the answer is \"No\".", true, "<explanation>\nI need to determine if the gym_shoe_1 is located on top of the table_2. From the image, I observe that the gym_shoe_1 appears to be floating in mid-air near the wall, not resting on any surface like a table. The table_2 is visible in the background, but the shoe is not positioned on it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,cabinet_1": ["no", 6.334479621727951e-06, 0.00014852748427074403, "To determine if the gym_shoe_1 is on top of the cabinet_1, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a black and white sneaker floating in the air.\n2. Identify the cabinet_1: It's a piece of furniture located in the background, partially visible behind the gym_shoe_1.\n3. Check the position of the gym_shoe_1 relative to the cabinet_1: The gym_shoe_1 is not touching the cabinet_1; instead, it seems to be floating above it.\n\nBased on this analysis, the gym_shoe_1 is not on top of the cabinet_1.", true, "<explanation>\nTo determine if the gym_shoe_1 is on top of the cabinet_1, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be a black and white sneaker floating in the air.\n2. Identify the cabinet_1: It's a piece of furniture located in the background, partially visible behind the gym_shoe_1.\n3. Check the position of the gym_shoe_1 relative to the cabinet_1: The gym_shoe_1 is not touching the cabinet_1; instead, it seems to be floating above it.\n\nBased on this analysis, the gym_shoe_1 is not on top of the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,sock_2": ["no", 6.338114872050937e-06, 0.0001039801791193895, "To determine if the gym_shoe_1 is next to the sock_2, I'll analyze their positions relative to each other in the image.\n\n1. Locate the gym_shoe_1: It appears to be floating in mid-air near the top center of the image.\n2. Locate the sock_2: It is visible at the bottom center of the image, lying on the floor.\n3. Check proximity: The gym_shoe_1 is not physically touching the sock_2; they are separated by a significant vertical distance and are not adjacent horizontally.\n\nSince the gym_shoe_1 and sock_2 are not next to each other, the answer is \"No\".", true, "<explanation>\nTo determine if the gym_shoe_1 is next to the sock_2, I'll analyze their positions relative to each other in the image.\n\n1. Locate the gym_shoe_1: It appears to be floating in mid-air near the top center of the image.\n2. Locate the sock_2: It is visible at the bottom center of the image, lying on the floor.\n3. Check proximity: The gym_shoe_1 is not physically touching the sock_2; they are separated by a significant vertical distance and are not adjacent horizontally.\n\nSince the gym_shoe_1 and sock_2 are not next to each other, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,table_2": ["no", 3.713473006428103e-06, 8.203994366340339e-05, "To determine if the gym_shoe_1 is next to the table_2, I need to identify both the gym_shoe_1 and the table_2 in the image. The gym_shoe_1 appears to be floating in mid-air near the left side of the image. The table_2 is located further back in the room, closer to the center of the image. Since the gym_shoe_1 is not in contact with the table_2 and is not positioned next to it, the answer is \"No\".", true, "<explanation>\nTo determine if the gym_shoe_1 is next to the table_2, I need to identify both the gym_shoe_1 and the table_2 in the image. The gym_shoe_1 appears to be floating in mid-air near the left side of the image. The table_2 is located further back in the room, closer to the center of the image. Since the gym_shoe_1 is not in contact with the table_2 and is not positioned next to it, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,cabinet_1": ["no", 8.054609679675195e-06, 6.468812352977693e-05, "To determine if the gym_shoe_1 is next to the cabinet_1, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be the black and white shoe floating in the air.\n2. Identify the cabinet_1: It's the piece of furniture with a light brown color and a reflective surface located near the center-right of the image.\n3. Check the spatial relationship: The gym_shoe_1 is not touching or close to the cabinet_1; instead, it is floating above the floor, separate from any furniture.\n\nBased on this analysis, the gym_shoe_1 is not next to the cabinet_1.", true, "<explanation>\nTo determine if the gym_shoe_1 is next to the cabinet_1, I'll follow these steps:\n\n1. Identify the gym_shoe_1: It appears to be the black and white shoe floating in the air.\n2. Identify the cabinet_1: It's the piece of furniture with a light brown color and a reflective surface located near the center-right of the image.\n3. Check the spatial relationship: The gym_shoe_1 is not touching or close to the cabinet_1; instead, it is floating above the floor, separate from any furniture.\n\nBased on this analysis, the gym_shoe_1 is not next to the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 3.3640659239608794e-05, 5.748072362621315e-05, "The image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.", true, "<explanation>\nThe image shows a robotic arm holding a gym shoe. The gym shoe appears to be the same as the one labeled as 'gym_shoe_1' in the question. Since the robotic arm is holding the gym shoe, it can be inferred that the agent is indeed holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 7.129487130441703e-06, 9.218182094627991e-05, "To determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.", false, "<explanation>\nTo determine if the table_2 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_2.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the wall, holding a shoe. Its arm is extended towards the shoe, indicating it is actively manipulating the object.\n\n2. **Table Position**: The table_2 is located further into the room, near the center of the image. It is positioned against the wall and appears to be at a distance from where the robotic arm is currently located.\n\n3. **Reach Assessment**: For the robotic arm to reach the table_2, it would need to extend its arm significantly beyond the current position. Given the current posture of the robotic arm, it does not appear to have enough range to reach the table_2.\n\nBased on this analysis, the table_2 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["no", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6451612903225806, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.7307692307692307, "no_correct": 19, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.2, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 1, "no_total": 8}}}, "step": 1, "actions": ["navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable table_2": ["no", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["no", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["yes", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["no", "no"], "ontop notebook_1,table_2": ["no", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["no", "no"], "nextto notebook_1,table_2": ["no", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7435897435897436, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 0.84375, "no_correct": 27, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}}}, "step": 2, "actions": ["navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["yes", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}}}, "step": 5, "actions": ["place-next-to(gym_shoe_1, sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["yes", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["yes", "yes"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto sock_2,gym_shoe_1": ["yes", "yes"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8095238095238095, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.7647058823529411, "no_correct": 13, "no_total": 17, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}}}, "step": 6, "actions": ["grasp(gym_shoe_1)", "place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 8, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 9, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 10, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 11, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 12, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 13, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 14, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 15, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 16, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 17, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 18, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 19, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 15, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 20, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 8.567948498239275e-06, 5.994755156280007e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned above the counter where the apple_1 is located. The arm appears to have a range of motion that allows it to reach down towards the counter. Given this information, it seems plausible that the robotic arm could reach the apple_1.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned above the counter where the apple_1 is located. The arm appears to have a range of motion that allows it to reach down towards the counter. Given this information, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 7.144227311073337e-06, 0.00013202239642851055, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the refrigerator. The robotic arm appears to be positioned above the counter, and its reach seems to extend towards the refrigerator. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it can reach the refrigerator without more information.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the refrigerator. The robotic arm appears to be positioned above the counter, and its reach seems to extend towards the refrigerator. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it can reach the refrigerator without more information.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 5.977316959615564e-06, 0.00011723287752829492, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the refrigerator. The robotic arm appears to be positioned above the counter, and its reach seems to extend towards the refrigerator. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it can reach the refrigerator without more information.\n\nSince the robotic arm's reach is not explicitly stated as sufficient to reach the refrigerator, we must assume that the reach might not be enough based on typical robotic arm capabilities and the positioning shown in the image.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the refrigerator. The robotic arm appears to be positioned above the counter, and its reach seems to extend towards the refrigerator. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it can reach the refrigerator without more information.\n\nSince the robotic arm's reach is not explicitly stated as sufficient to reach the refrigerator, we must assume that the reach might not be enough based on typical robotic arm capabilities and the positioning shown in the image.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.1504580470500514e-05, 0.00010407652735011652, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.3793358448310755e-05, 6.36221648164792e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.3792173376714345e-05, 8.56694077810971e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 8.050461474340409e-06, 9.240728832082823e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. **Identify the robotic arm**: The robotic arm is visible in the image, extending from the right side towards the center.\n2. **Determine the range of the robotic arm**: The robotic arm appears to have a limited range, as it is not reaching across the entire room.\n3. **Locate the electric_refrigerator_1**: The electric_refrigerator_1 is located on the left side of the image, near the microwave.\n4. **Check the reachability**: Given the position of the robotic arm and its apparent range, it does not appear to be able to reach the electric_refrigerator_1.\n\nBased on this reasoning, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. **Identify the robotic arm**: The robotic arm is visible in the image, extending from the right side towards the center.\n2. **Determine the range of the robotic arm**: The robotic arm appears to have a limited range, as it is not reaching across the entire room.\n3. **Locate the electric_refrigerator_1**: The electric_refrigerator_1 is located on the left side of the image, near the microwave.\n4. **Check the reachability**: Given the position of the robotic arm and its apparent range, it does not appear to be able to reach the electric_refrigerator_1.\n\nBased on this reasoning, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 6.736893737979699e-06, 9.244798275176436e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the lower cabinets, and its reach seems limited to the area directly in front of it. The electric_refrigerator_1 is located further back and to the left of the robotic arm, beyond the arm's apparent reach.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the lower cabinets, and its reach seems limited to the area directly in front of it. The electric_refrigerator_1 is located further back and to the left of the robotic arm, beyond the arm's apparent reach.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.1506896044011228e-05, 9.241411316907033e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the bottom right corner of the image, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and it's not clear from the image alone whether the arm can extend far enough to reach the refrigerator.\n\nSince the image does not provide specific details about the robotic arm's range or the exact distance between the arm and the refrigerator, we cannot definitively say whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the bottom right corner of the image, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and it's not clear from the image alone whether the arm can extend far enough to reach the refrigerator.\n\nSince the image does not provide specific details about the robotic arm's range or the exact distance between the arm and the refrigerator, we cannot definitively say whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.1536921192600857e-05, 5.647802936437074e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.0871075573959388e-05, 6.362303338391939e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the countertop where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to grasp the apple_2.\n\nTherefore, based on the positioning and apparent reach of the robotic arm, the answer is \"Yes\".", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the countertop where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to grasp the apple_2.\n\nTherefore, based on the positioning and apparent reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["yes", 6.7247833612782415e-06, 0.00014856735651846975, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the countertop, and its end-effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be positioned close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we assume the robotic arm has sufficient reach to interact with the refrigerator.\n\nTherefore, based on the assumption that the robotic arm can reach the refrigerator, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the countertop, and its end-effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be positioned close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we assume the robotic arm has sufficient reach to interact with the refrigerator.\n\nTherefore, based on the assumption that the robotic arm can reach the refrigerator, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 6.7295018197910395e-06, 0.00011717219604179263, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the countertop, and its reach seems limited to the immediate area around it. The electric_refrigerator_1 is located further back in the kitchen, beyond the reach of the robotic arm as it is currently positioned.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the countertop, and its reach seems limited to the immediate area around it. The electric_refrigerator_1 is located further back in the kitchen, beyond the reach of the robotic arm as it is currently positioned.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.1503932910272852e-05, 8.20209679659456e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Refrigerator**: The electric_refrigerator_1 appears to be positioned against a wall, with its door slightly ajar.\n2. **Position of the Agent**: The robotic arm is extended towards the refrigerator, indicating it is actively interacting with the object.\n3. **Reach Assessment**: The robotic arm's end effector (the part that holds objects) is close to the refrigerator door handle, suggesting that the arm can reach the handle without any obstructions.\n\nGiven these observations, the robotic arm is indeed in a position where it can interact with the refrigerator, implying that the refrigerator is within reach of the agent.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Refrigerator**: The electric_refrigerator_1 appears to be positioned against a wall, with its door slightly ajar.\n2. **Position of the Agent**: The robotic arm is extended towards the refrigerator, indicating it is actively interacting with the object.\n3. **Reach Assessment**: The robotic arm's end effector (the part that holds objects) is close to the refrigerator door handle, suggesting that the arm can reach the handle without any obstructions.\n\nGiven these observations, the robotic arm is indeed in a position where it can interact with the refrigerator, implying that the refrigerator is within reach of the agent.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 1.1507729141158052e-05, 7.283943705260754e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of both the arm and the refrigerator, it's impossible to definitively say whether the refrigerator is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we cannot confirm the exact reach of the robotic arm, the most accurate response is to acknowledge the possibility without certainty.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of both the arm and the refrigerator, it's impossible to definitively say whether the refrigerator is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we cannot confirm the exact reach of the robotic arm, the most accurate response is to acknowledge the possibility without certainty.\n</explanation>\n<answer>No</answer>", false], "open electric_refrigerator_1": ["yes", 7.595720489916857e-06, 3.570190165191889e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing the interior shelves. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing the interior shelves. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.2995901670365129e-05, 5.0140956773248035e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.2994136341148987e-05, 8.566269571019802e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the countertop where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_2 is within the reach of the agent.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the countertop where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 8.555551175959408e-06, 2.8136193577665836e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the lower cabinets, and its reach seems limited to the countertop area directly in front of it. The electric_refrigerator_1 is located further back and to the left, beyond the reach of the robotic arm as it is currently oriented.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the lower cabinets, and its reach seems limited to the countertop area directly in front of it. The electric_refrigerator_1 is located further back and to the left, beyond the reach of the robotic arm as it is currently oriented.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 8.558631634514313e-06, 3.364916847203858e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the lower cabinets, and its reach seems limited to the countertop area directly in front of it. The electric_refrigerator_1 is located further back and to the left, beyond the reach of the robotic arm as it is currently oriented.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the lower cabinets, and its reach seems limited to the countertop area directly in front of it. The electric_refrigerator_1 is located further back and to the left, beyond the reach of the robotic arm as it is currently oriented.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.3748282071901485e-05, 0.00010403456690255553, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm relative to the refrigerator, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes.\"", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm relative to the refrigerator, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes.\"\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 1.1504597750899848e-05, 8.202570461435243e-05, "The robotic arm is positioned near the electric refrigerator_1, suggesting that it could potentially interact with it. However, the exact reach of the robotic arm is not specified in the description. Without more information about the robotic arm's range of motion, we cannot definitively say whether it is in reach.", false, "<explanation>\nThe robotic arm is positioned near the electric refrigerator_1, suggesting that it could potentially interact with it. However, the exact reach of the robotic arm is not specified in the description. Without more information about the robotic arm's range of motion, we cannot definitively say whether it is in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "open electric_refrigerator_1": ["yes", 7.59312115405919e-06, 4.528414137894288e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing the interior shelves. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing the interior shelves. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.0865747753996402e-05, 4.0251168684335425e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n\nHowever, without specific information about the exact reach capabilities of this particular robotic arm model, we must assume that the arm has sufficient reach to interact with objects on the countertop.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n\nHowever, without specific information about the exact reach capabilities of this particular robotic arm model, we must assume that the arm has sufficient reach to interact with objects on the countertop.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 1.0865747753996402e-05, 4.0251168684335425e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n\nHowever, without specific information about the exact reach capabilities of this particular robotic arm model, we must assume that the arm has sufficient reach to interact with objects on the countertop.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grasp the apple_1.\n\nHowever, without specific information about the exact reach capabilities of this particular robotic arm model, we must assume that the arm has sufficient reach to interact with objects on the countertop.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"updated_non_visible_preds": {"holding apple_1": {"before": false, "after": true}, "ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": false, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.7445016055717133e-05, 0.00013200825196690857, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the robotic arm's range, it's difficult to definitively state whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the visual proximity and the typical capabilities of robotic arms, it seems reasonable to infer that the robotic arm might indeed be in reach of the refrigerator.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the robotic arm's range, it's difficult to definitively state whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the visual proximity and the typical capabilities of robotic arms, it seems reasonable to infer that the robotic arm might indeed be in reach of the refrigerator.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["no", 1.2238814633747097e-05, 4.024914596811868e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-inside(apple_1, electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_1": ["yes", 1.152204094978515e-05, 0.0001322557363891974, "The image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be in a position where it could potentially hold the apple, suggesting that the agent might be interacting with the apple.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be in a position where it could potentially hold the apple, suggesting that the agent might be interacting with the apple.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 1.2965667337994091e-05, 8.206762140616775e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. The robotic arm is visible in the image.\n2. The robotic arm appears to have a limited range of motion based on its design and the visible part of the arm.\n3. The electric_refrigerator_1 is positioned behind the robotic arm and appears to be out of the arm's immediate reach.\n4. There are no visible extensions or additional parts of the robotic arm that would extend its reach further.\n\nGiven these observations, the robotic arm does not appear to be able to reach the electric_refrigerator_1 from its current position and orientation.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. The robotic arm is visible in the image.\n2. The robotic arm appears to have a limited range of motion based on its design and the visible part of the arm.\n3. The electric_refrigerator_1 is positioned behind the robotic arm and appears to be out of the arm's immediate reach.\n4. There are no visible extensions or additional parts of the robotic arm that would extend its reach further.\n\nGiven these observations, the robotic arm does not appear to be able to reach the electric_refrigerator_1 from its current position and orientation.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "open electric_refrigerator_1": ["yes", 1.0841693438123912e-05, 9.241189400199801e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.4606310287490487e-05, 8.207588689401746e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.0842620213225018e-05, 9.241980296792462e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding apple_1": ["no", 1.0858077075681649e-05, 0.00011743220238713548, "The image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.4606310287490487e-05, 8.207588689401746e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.0842620213225018e-05, 9.241980296792462e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding apple_1": ["no", 1.0858077075681649e-05, 0.00011743220238713548, "The image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.4606310287490487e-05, 8.207588689401746e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.0842620213225018e-05, 9.241980296792462e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding apple_1": ["no", 1.0858077075681649e-05, 0.00011743220238713548, "The image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.4606310287490487e-05, 8.207588689401746e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.0842620213225018e-05, 9.241980296792462e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding apple_1": ["no", 1.0858077075681649e-05, 0.00011743220238713548, "The image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.4606310287490487e-05, 8.207588689401746e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.0842620213225018e-05, 9.241980296792462e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding apple_1": ["no", 1.0858077075681649e-05, 0.00011743220238713548, "The image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.4606310287490487e-05, 8.207588689401746e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and size of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific measurements or a clear view of the arm's range, it's difficult to definitively say whether the arm can reach the refrigerator.\n\nSince the question asks if the refrigerator is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the refrigerator, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.0842620213225018e-05, 9.241980296792462e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding apple_1": ["no", 1.0858077075681649e-05, 0.00011743220238713548, "The image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a green apple labeled as \"apple_1\". The robotic arm appears to be interacting with the apple, suggesting that it might be holding it. However, without a clear view of the robotic arm's gripper or any visible contact points, it's not definitive whether the apple is being held.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable countertop_1": ["no", "no"], "reachable carrot_2": ["no", "no"], "reachable cabinet_1": ["no", "no"], "reachable electric_refrigerator_1": ["no", "yes"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["yes", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.9090909090909091, "no_correct": 20, "no_total": 22, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "inside": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 2, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,cabinet_1": ["yes", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,cabinet_1": ["yes", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["yes", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "yes"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7013888888888888, "yes_accuracy": 0.8333333333333334, "yes_correct": 15, "yes_total": 18, "no_accuracy": 0.6825396825396826, "no_correct": 86, "no_total": 126, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8214285714285714, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.82, "no_correct": 41, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.40384615384615385, "no_correct": 21, "no_total": 52}}}, "step": 3, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable countertop_1": ["no", "no"], "reachable carrot_2": ["no", "no"], "reachable cabinet_1": ["no", "no"], "reachable electric_refrigerator_1": ["no", "yes"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.9545454545454546, "no_correct": 21, "no_total": 22, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 4, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["yes", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["yes", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,cabinet_1": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["yes", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6736111111111112, "yes_accuracy": 0.9444444444444444, "yes_correct": 17, "yes_total": 18, "no_accuracy": 0.6349206349206349, "no_correct": 80, "no_total": 126, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7857142857142857, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.76, "no_correct": 38, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.375, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.34615384615384615, "no_correct": 18, "no_total": 52}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 7, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,cabinet_1": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,cabinet_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "yes"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "no"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "no"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["no", "yes"], "nextto broccoli_1,cabinet_1": ["no", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["no", "yes"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["no", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7055555555555556, "yes_accuracy": 0.6363636363636364, "yes_correct": 14, "yes_total": 22, "no_accuracy": 0.7151898734177216, "no_correct": 113, "no_total": 158, "predicates": {"reachable": {"accuracy": 0.7, "yes_accuracy": 0.6666666666666666, "yes_correct": 6, "yes_total": 9, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.9692307692307692, "no_correct": 63, "no_total": 65}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 16, "no_total": 16}, "nextto": {"accuracy": 0.3472222222222222, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.3484848484848485, "no_correct": 23, "no_total": 66}}}, "step": 8, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 10, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 14, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 15, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 16, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 17, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 18, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 19, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 20, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 9.092865184356924e-06, 8.072328455455136e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) is extended towards the apple_1. The apple_1 is located on the counter, and the robotic arm appears to be able to reach it without any obstructions. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) is extended towards the apple_1. The apple_1 is located on the counter, and the robotic arm appears to be able to reach it without any obstructions. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 5.976553438813426e-06, 0.0001320369483437389, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm appears to be positioned near the lower cabinets, and the refrigerator is located further back against the wall. Given the distance between the robotic arm and the refrigerator, it seems that the robotic arm would not be able to reach the refrigerator directly.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm appears to be positioned near the lower cabinets, and the refrigerator is located further back against the wall. Given the distance between the robotic arm and the refrigerator, it seems that the robotic arm would not be able to reach the refrigerator directly.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 5.632053671433823e-06, 0.00011723591887857765, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach of the robotic arm isn't specified, so we can only infer based on the visual proximity.\n\nGiven the positioning, it seems plausible that the robotic arm could reach the refrigerator if it were extended further. But without specific information about the robotic arm's reach, we cannot definitively say it is in reach.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach of the robotic arm isn't specified, so we can only infer based on the visual proximity.\n\nGiven the positioning, it seems plausible that the robotic arm could reach the refrigerator if it were extended further. But without specific information about the robotic arm's reach, we cannot definitively say it is in reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 8.556868124287575e-06, 3.3642234484432265e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that based on typical robotic arm capabilities, it might be within reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of clear evidence from the image, the most accurate response is to acknowledge the uncertainty.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that based on typical robotic arm capabilities, it might be within reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of clear evidence from the image, the most accurate response is to acknowledge the uncertainty.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.2242740012879949e-05, 1.3790518096357118e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned above the counter, and the red bounding box around the apple_1 indicates its location. The robotic arm appears to be able to extend towards the apple_1, suggesting that it could potentially pick up the apple_1.\n\nTherefore, based on the positioning and the ability of the robotic arm to reach the apple_1, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned above the counter, and the red bounding box around the apple_1 indicates its location. The robotic arm appears to be able to extend towards the apple_1, suggesting that it could potentially pick up the apple_1.\n\nTherefore, based on the positioning and the ability of the robotic arm to reach the apple_1, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["yes", 5.960710041108541e-06, 0.00023880969092715532, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n\nSince the question asks for a yes or no answer based on the given image, and we do not have specific details about the robotic arm's reach, we must assume that the robotic arm can potentially reach the refrigerator based on its position and orientation.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n\nSince the question asks for a yes or no answer based on the given image, and we do not have specific details about the robotic arm's reach, we must assume that the robotic arm can potentially reach the refrigerator based on its position and orientation.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 4.996088591724401e-06, 0.0001674289524089545, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the refrigerator. The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance is not specified, so we cannot definitively say whether the refrigerator is within the robotic arm's reach without more information.\n</explanation>\n<answer>No</answer>", true], "open electric_refrigerator_1": ["no", 3.4709930787357735e-06, 0.00023761038028169423, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door with no visible signs of it being open. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 9.62238209467614e-06, 0.00030383141711354256, "The image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.", true, "<explanation>\nThe image shows a robotic arm in a kitchen setting. The robotic arm appears to be positioned near a countertop where an apple labeled as \"apple_1\" is located. However, there is no indication that the robotic arm is currently holding the apple_1. The arm seems to be in a neutral position, not interacting with any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.25, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 3, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 4, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 5, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 6, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 7, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 8, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 9, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 10, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 11, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 12, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 13, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 14, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 15, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 16, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 17, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 18, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 19, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7410714285714286, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.7244897959183674, "no_correct": 71, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9523809523809523, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 16, "no_total": 40}}}, "step": 20, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.0242546522931661e-05, 1.0242546522931661e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["yes", 8.060763320827391e-06, 5.747178147430532e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance isn't specified, so we must infer based on the visual information.\n\nFrom the image, the robotic arm seems to have enough length to reach the refrigerator, as it is positioned close to the counter where the refrigerator is located. The arm's end effector is extended towards the refrigerator, suggesting that it could potentially grasp or interact with the refrigerator.\n\nTherefore, based on the visual evidence, it can be inferred that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm is positioned near the counter, and its reach appears to extend towards the refrigerator. However, the exact reach distance isn't specified, so we must infer based on the visual information.\n\nFrom the image, the robotic arm seems to have enough length to reach the refrigerator, as it is positioned close to the counter where the refrigerator is located. The arm's end effector is extended towards the refrigerator, suggesting that it could potentially grasp or interact with the refrigerator.\n\nTherefore, based on the visual evidence, it can be inferred that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.556274224247318e-06, 5.747943214373663e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned near the counter, and its end effector (the part that holds objects) is extended towards the refrigerator. However, the exact reach of the robotic arm is not specified, and typically, robotic arms have a certain range of motion.\n\nGiven the visual information, the robotic arm seems to be close enough to potentially interact with the refrigerator, but without specific details about the arm's reach, we cannot definitively say it is within reach. For the purpose of this question, we'll assume the arm has sufficient reach to interact with the refrigerator based on the proximity shown.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 2, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 3, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 4, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 6, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 7, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 8, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 9, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 10, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 11, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 12, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 13, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 14, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 15, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 16, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 17, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 18, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 19, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7232142857142857, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7346938775510204, "no_correct": 72, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9459459459459459, "no_correct": 35, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.425, "no_correct": 17, "no_total": 40}}}, "step": 20, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.8560949683887884e-05, 2.98818285955349e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the table where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the table.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the table where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the table.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.7412708984920755e-05, 0.00016718586266506463, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.9710654669324867e-05, 1.22431765703368e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["no", 1.7500291505712084e-05, 1.0870220648939721e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.9710654669324867e-05, 1.22431765703368e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 1.7490423488197848e-05, 6.479166768258438e-05, "The image shows a robotic arm interacting with various objects on a countertop. The robotic arm appears to be positioned near an apple labeled as \"apple_2\". However, there is no clear indication that the robotic arm is actively holding the apple_2 at this moment. The arm seems to be in a position where it could potentially pick up the apple, but it's not currently grasping it.", true, "<explanation>\nThe image shows a robotic arm interacting with various objects on a countertop. The robotic arm appears to be positioned near an apple labeled as \"apple_2\". However, there is no clear indication that the robotic arm is actively holding the apple_2 at this moment. The arm seems to be in a position where it could potentially pick up the apple, but it's not currently grasping it.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 1.8571307009551674e-05, 4.0262766560772434e-05, "The image shows a robotic arm interacting with various objects on a counter. The red bounding box around the apple_1 indicates that this object is being held by the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nThe image shows a robotic arm interacting with various objects on a counter. The red bounding box around the apple_1 indicates that this object is being held by the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,apple_2": ["yes", 1.222271839651512e-05, 0.00016772815433796495, "I will analyze the image to determine if the apple_1 is on top of the apple_2. Upon examining the image, I see two apples labeled as apple_1 and apple_2. Apple_1 appears to be positioned above apple_2, suggesting that apple_1 is indeed on top of apple_2.", false, "<explanation>\nI will analyze the image to determine if the apple_1 is on top of the apple_2. Upon examining the image, I see two apples labeled as apple_1 and apple_2. Apple_1 appears to be positioned above apple_2, suggesting that apple_1 is indeed on top of apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto apple_1,apple_2": ["yes", 1.8558584997663274e-05, 5.105161835672334e-05, "To determine if the apple_1 is next to the apple_2, I'll examine their spatial relationship. Both apples are clearly visible in the image, and they appear to be close to each other, suggesting they are adjacent. The red bounding boxes around them indicate their positions relative to each other, confirming they are indeed next to one another.", false, "<explanation>\nTo determine if the apple_1 is next to the apple_2, I'll examine their spatial relationship. Both apples are clearly visible in the image, and they appear to be close to each other, suggesting they are adjacent. The red bounding boxes around them indicate their positions relative to each other, confirming they are indeed next to one another.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.8531831301515922e-05, 6.46825137664564e-05, "The robotic arm is positioned close to the electric refrigerator_1, indicating that it is within the range where the robotic arm can interact with the object. The arm appears to be holding an apple, suggesting that it has successfully reached the refrigerator and is interacting with it.", true, "<explanation>\nThe robotic arm is positioned close to the electric refrigerator_1, indicating that it is within the range where the robotic arm can interact with the object. The arm appears to be holding an apple, suggesting that it has successfully reached the refrigerator and is interacting with it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 1.9698152755154297e-05, 2.6526487999944948e-05, "The image shows a robotic arm holding an apple near a refrigerator. The robotic arm appears to be positioned in such a way that the apple is close enough to be considered within its reach. The arm's end effector (the part that holds the apple) is directly interacting with the apple, indicating that the apple is indeed within the robotic arm's reach.", false, "<explanation>\nThe image shows a robotic arm holding an apple near a refrigerator. The robotic arm appears to be positioned in such a way that the apple is close enough to be considered within its reach. The arm's end effector (the part that holds the apple) is directly interacting with the apple, indicating that the apple is indeed within the robotic arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["no", "yes"], "reachable chair_1": ["no", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["yes", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["yes", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["no", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["yes", "no"], "nextto countertop_1,orange_3": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["no", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["no", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["no", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["no", "no"], "nextto orange_3,bread_1": ["no", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7849686847599165, "yes_accuracy": 0.6578947368421053, "yes_correct": 25, "yes_total": 38, "no_accuracy": 0.7959183673469388, "no_correct": 351, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.47058823529411764, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.125, "no_correct": 1, "no_total": 8}, "holding": {"accuracy": 0.7142857142857143, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7142857142857143, "no_correct": 10, "no_total": 14}, "ontop": {"accuracy": 0.9419642857142857, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.9575471698113207, "no_correct": 203, "no_total": 212}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.5882352941176471, "yes_correct": 10, "yes_total": 17, "no_accuracy": 0.6618357487922706, "no_correct": 137, "no_total": 207}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["yes", "yes"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["yes", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,broccoli_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "no"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "no"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.8947368421052632, "yes_correct": 17, "yes_total": 19, "no_accuracy": 0.4936708860759494, "no_correct": 39, "no_total": 79, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 3, "no_total": 6}, "ontop": {"accuracy": 0.6428571428571429, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.6486486486486487, "no_correct": 24, "no_total": 37}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.3333333333333333, "no_correct": 12, "no_total": 36}}}, "step": 4, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 5, "actions": ["place-next-to(apple_1, apple_1)", "open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.8560949683887884e-05, 2.98818285955349e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the table where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the table.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the table where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the table.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.7412708984920755e-05, 0.00016718586266506463, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.4636652849731036e-05, 5.0133266995544545e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.2993808013561647e-05, 5.6470880736014806e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.6430516552645713e-05, 0.00011714661377482116, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. The robotic arm is visible in the foreground, extending towards the refrigerator.\n2. The robotic arm appears to be positioned such that its end effector (the part that holds objects) is close to the refrigerator door.\n3. The arm's range of motion seems sufficient to reach the refrigerator door without any obstructions.\n\nGiven these observations, the robotic arm is indeed in a position where it could potentially open the refrigerator door.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. The robotic arm is visible in the foreground, extending towards the refrigerator.\n2. The robotic arm appears to be positioned such that its end effector (the part that holds objects) is close to the refrigerator door.\n3. The arm's range of motion seems sufficient to reach the refrigerator door without any obstructions.\n\nGiven these observations, the robotic arm is indeed in a position where it could potentially open the refrigerator door.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["no", 2.2188873117556795e-05, 4.023867950309068e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_2": ["yes", 2.355007927690167e-05, 3.171368007315323e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm appears to be positioned close to the apple_2, suggesting that it could potentially pick up the apple_2. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively state whether the apple_2 is within its reach. Given the proximity and the context of a virtual household simulator where such interactions are common, it is reasonable to assume that the robotic arm is capable of reaching the apple_2.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm appears to be positioned close to the apple_2, suggesting that it could potentially pick up the apple_2. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively state whether the apple_2 is within its reach. Given the proximity and the context of a virtual household simulator where such interactions are common, it is reasonable to assume that the robotic arm is capable of reaching the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.7492699043941684e-05, 3.366793316672556e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned close to the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether the apple_1 is within its reach.\n\nSince the question asks if the apple_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["no", "yes"], "reachable chair_1": ["no", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["yes", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["yes", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["no", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["yes", "no"], "nextto countertop_1,orange_3": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["no", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["no", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["no", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["no", "no"], "nextto orange_3,bread_1": ["no", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7849686847599165, "yes_accuracy": 0.6578947368421053, "yes_correct": 25, "yes_total": 38, "no_accuracy": 0.7959183673469388, "no_correct": 351, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.47058823529411764, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.125, "no_correct": 1, "no_total": 8}, "holding": {"accuracy": 0.7142857142857143, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7142857142857143, "no_correct": 10, "no_total": 14}, "ontop": {"accuracy": 0.9419642857142857, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.9575471698113207, "no_correct": 203, "no_total": 212}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.5882352941176471, "yes_correct": 10, "yes_total": 17, "no_accuracy": 0.6618357487922706, "no_correct": 137, "no_total": 207}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,broccoli_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "no"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["yes", "no"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.578125, "yes_accuracy": 0.96, "yes_correct": 24, "yes_total": 25, "no_accuracy": 0.4854368932038835, "no_correct": 50, "no_total": 103, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 2, "no_total": 8}, "ontop": {"accuracy": 0.7321428571428571, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.6938775510204082, "no_correct": 34, "no_total": 49}, "nextto": {"accuracy": 0.4107142857142857, "yes_accuracy": 0.9, "yes_correct": 9, "yes_total": 10, "no_accuracy": 0.30434782608695654, "no_correct": 14, "no_total": 46}}}, "step": 3, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 4, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 5, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 6, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 7, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 8, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 9, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 10, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 11, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 12, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 13, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 14, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 15, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 16, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 17, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 18, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 19, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["no", "no"], "reachable carrot_3": ["no", "no"], "reachable broccoli_1": ["yes", "no"], "reachable apple_1": ["no", "no"], "reachable apple_2": ["no", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["yes", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside flour_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside broccoli_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,broccoli_1": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7662337662337663, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.8041958041958042, "no_correct": 115, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.890625, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.9655172413793104, "no_correct": 56, "no_total": 58}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6833333333333333, "no_correct": 41, "no_total": 60}}}, "step": 20, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.8560949683887884e-05, 2.98818285955349e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the table where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the table.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the table where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the table.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.7412708984920755e-05, 0.00016718586266506463, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.5538718798779882e-05, 1.0872018719965126e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it seems that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it seems that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.8575601643533446e-05, 7.16686190571636e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_2 is within the reach of the agent.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.2200174751342274e-05, 0.0001039912604028359, "The robotic arm is positioned near the electric refrigerator_1, suggesting that it could potentially interact with it. However, the exact reach of the robotic arm is not specified in the description provided. Without more information about the range of motion of the robotic arm, we cannot definitively say whether it is in reach of the electric refrigerator_1.", false, "<explanation>\nThe robotic arm is positioned near the electric refrigerator_1, suggesting that it could potentially interact with it. However, the exact reach of the robotic arm is not specified in the description provided. Without more information about the range of motion of the robotic arm, we cannot definitively say whether it is in reach of the electric refrigerator_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 2.500750451872591e-05, 1.9709104890353046e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 2.0919627786497585e-05, 1.6487336324644275e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the countertop where the apple_2 is located. The red bounding box around the apple_2 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_2 if it were to move downward.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the countertop where the apple_2 is located. The red bounding box around the apple_2 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_2 if it were to move downward.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.84829314093804e-05, 0.00014844012912362814, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Refrigerator**: The electric_refrigerator_1 appears to be positioned near the center of the image, slightly to the left side. It is standing upright and seems to be at a height that would allow interaction from a human-like perspective.\n\n2. **Position of the Agent**: The robotic arm (agent) is visible in the foreground, extending towards the refrigerator. The arm is oriented in such a way that it could potentially reach the refrigerator if it were extended further.\n\n3. **Reachability Analysis**: Given the current position of the robotic arm, it appears that the arm is positioned close enough to the refrigerator to potentially interact with it. The arm's end effector (the part that holds objects) is close to the refrigerator door, suggesting that the arm is in a position where it could open or close the refrigerator door.\n\nBased on this analysis, the robotic arm (agent) is indeed in reach of the electric_refrigerator_1.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Refrigerator**: The electric_refrigerator_1 appears to be positioned near the center of the image, slightly to the left side. It is standing upright and seems to be at a height that would allow interaction from a human-like perspective.\n\n2. **Position of the Agent**: The robotic arm (agent) is visible in the foreground, extending towards the refrigerator. The arm is oriented in such a way that it could potentially reach the refrigerator if it were extended further.\n\n3. **Reachability Analysis**: Given the current position of the robotic arm, it appears that the arm is positioned close enough to the refrigerator to potentially interact with it. The arm's end effector (the part that holds objects) is close to the refrigerator door, suggesting that the arm is in a position where it could open or close the refrigerator door.\n\nBased on this analysis, the robotic arm (agent) is indeed in reach of the electric_refrigerator_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.6400117601733655e-05, 0.00018824887229129672, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Refrigerator**: The electric_refrigerator_1 appears to be positioned near the center of the image, slightly to the left side. It is standing upright and seems to be at a height that would allow interaction from a human-like perspective.\n\n2. **Position of the Agent**: The robotic arm (agent) is visible in the foreground, extending towards the refrigerator. The arm's end effector (the part that interacts with objects) is positioned close to the refrigerator door.\n\n3. **Reachability**: The robotic arm is extended towards the refrigerator, and its end effector is close enough to potentially open the refrigerator door or interact with it. This suggests that the refrigerator is within the reach of the agent.\n\nGiven these observations, the robotic arm (agent) is indeed in a position where it can interact with the electric_refrigerator_1.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Refrigerator**: The electric_refrigerator_1 appears to be positioned near the center of the image, slightly to the left side. It is standing upright and seems to be at a height that would allow interaction from a human-like perspective.\n\n2. **Position of the Agent**: The robotic arm (agent) is visible in the foreground, extending towards the refrigerator. The arm's end effector (the part that interacts with objects) is positioned close to the refrigerator door.\n\n3. **Reachability**: The robotic arm is extended towards the refrigerator, and its end effector is close enough to potentially open the refrigerator door or interact with it. This suggests that the refrigerator is within the reach of the agent.\n\nGiven these observations, the robotic arm (agent) is indeed in a position where it can interact with the electric_refrigerator_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 9.040411896421574e-06, 0.0001670632918830961, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing the interior. This indicates that the refrigerator is indeed open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing the interior. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.9711731511051767e-05, 1.648815486987587e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["no", 1.9714922018465586e-05, 6.752726676495513e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.9711731511051767e-05, 1.648815486987587e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 1.856529343058355e-05, 5.752650395152159e-05, "The image shows a robotic arm (the agent) positioned above a counter with various objects including carrots and apples. The robotic arm appears to be interacting with the objects, specifically the apple_2, as indicated by the red bounding box around the apple_2 object and the proximity of the robotic arm to this object.", false, "<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter with various objects including carrots and apples. The robotic arm appears to be interacting with the objects, specifically the apple_2, as indicated by the red bounding box around the apple_2 object and the proximity of the robotic arm to this object.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.2952551514899824e-05, 9.23493571463041e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned near the refrigerator, suggesting it might be able to interact with it.\n2. **Reach of the Robotic Arm**: The robotic arm's design and the visible part of its structure suggest it has a certain range of motion. However, without specific information about the arm's reach, we can infer that it likely has enough range to interact with the refrigerator based on typical robotic arm capabilities.\n3. **Proximity to the Refrigerator**: The robotic arm is close to the refrigerator, indicating that it is within a reasonable distance to perform tasks such as opening or closing the door.\n\nGiven these observations, it seems plausible that the robotic arm could reach the electric_refrigerator_1.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned near the refrigerator, suggesting it might be able to interact with it.\n2. **Reach of the Robotic Arm**: The robotic arm's design and the visible part of its structure suggest it has a certain range of motion. However, without specific information about the arm's reach, we can infer that it likely has enough range to interact with the refrigerator based on typical robotic arm capabilities.\n3. **Proximity to the Refrigerator**: The robotic arm is close to the refrigerator, indicating that it is within a reasonable distance to perform tasks such as opening or closing the door.\n\nGiven these observations, it seems plausible that the robotic arm could reach the electric_refrigerator_1.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["no", "yes"], "reachable chair_1": ["no", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["yes", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["yes", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["no", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["yes", "no"], "nextto countertop_1,orange_3": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["no", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["no", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["no", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["no", "no"], "nextto orange_3,bread_1": ["no", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7849686847599165, "yes_accuracy": 0.6578947368421053, "yes_correct": 25, "yes_total": 38, "no_accuracy": 0.7959183673469388, "no_correct": 351, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.47058823529411764, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.125, "no_correct": 1, "no_total": 8}, "holding": {"accuracy": 0.7142857142857143, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7142857142857143, "no_correct": 10, "no_total": 14}, "ontop": {"accuracy": 0.9419642857142857, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.9575471698113207, "no_correct": 203, "no_total": 212}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.5882352941176471, "yes_correct": 10, "yes_total": 17, "no_accuracy": 0.6618357487922706, "no_correct": 137, "no_total": 207}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,broccoli_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "no"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "no"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "no"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_2": ["yes", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6836734693877551, "yes_accuracy": 0.9130434782608695, "yes_correct": 21, "yes_total": 23, "no_accuracy": 0.6133333333333333, "no_correct": 46, "no_total": 75, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "ontop": {"accuracy": 0.7857142857142857, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.7777777777777778, "no_correct": 28, "no_total": 36}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.9, "yes_correct": 9, "yes_total": 10, "no_accuracy": 0.375, "no_correct": 12, "no_total": 32}}}, "step": 3, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["yes", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,broccoli_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "no"], "nextto carrot_2,apple_1": ["no", "yes"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "no"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "no"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7653061224489796, "yes_accuracy": 0.9130434782608695, "yes_correct": 21, "yes_total": 23, "no_accuracy": 0.72, "no_correct": 54, "no_total": 75, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.7857142857142857, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.75, "no_correct": 27, "no_total": 36}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.8, "yes_correct": 8, "yes_total": 10, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 7, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,broccoli_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "no"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "no"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["yes", "no"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6632653061224489, "yes_accuracy": 0.8695652173913043, "yes_correct": 20, "yes_total": 23, "no_accuracy": 0.6, "no_correct": 45, "no_total": 75, "predicates": {"reachable": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.42857142857142855, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}, "ontop": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.8611111111111112, "no_correct": 31, "no_total": 36}, "nextto": {"accuracy": 0.47619047619047616, "yes_accuracy": 0.9, "yes_correct": 9, "yes_total": 10, "no_accuracy": 0.34375, "no_correct": 11, "no_total": 32}}}, "step": 9, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "problem_stats": {"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"action_correct": 0, "action_total": 28, "remaining_actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"action_correct": 0, "action_total": 28, "remaining_actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"action_correct": 3, "action_total": 10, "remaining_actions": ["grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)", "navigate-to(book_1)", "grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)"], "action_accuracy": 0.3, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"action_correct": 2, "action_total": 11, "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.18181818181818182, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"action_correct": 0, "action_total": 8, "remaining_actions": ["navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"action_correct": 0, "action_total": 28, "remaining_actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"action_correct": 0, "action_total": 11, "remaining_actions": ["grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"action_correct": 2, "action_total": 16, "remaining_actions": ["navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.125, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"action_correct": 0, "action_total": 17, "remaining_actions": ["grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"action_correct": 0, "action_total": 17, "remaining_actions": ["grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 10, "remaining_actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"action_correct": 0, "action_total": 28, "remaining_actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"action_correct": 1, "action_total": 32, "remaining_actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.03125, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 14, "remaining_actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"action_correct": 2, "action_total": 26, "remaining_actions": ["navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.07692307692307693, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"action_correct": 0, "action_total": 28, "remaining_actions": ["grasp(sock_2)", "navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"action_correct": 0, "action_total": 25, "remaining_actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"action_correct": 3, "action_total": 23, "remaining_actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.13043478260869565, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"action_correct": 7, "action_total": 25, "remaining_actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.28, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"action_correct": 1, "action_total": 23, "remaining_actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.043478260869565216, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"action_correct": 0, "action_total": 26, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"action_correct": 1, "action_total": 8, "remaining_actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.125, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"action_correct": 1, "action_total": 24, "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.041666666666666664, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"action_correct": 4, "action_total": 16, "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.25, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.6534823731728289, "yes_accuracy": 0.709592641261498, "yes_correct": 540, "yes_total": 761, "no_accuracy": 0.5472636815920398, "no_correct": 220, "no_total": 402, "correct": 760, "total": 1163}, "holding": {"accuracy": 0.7192052980132451, "yes_accuracy": 0.37777777777777777, "yes_correct": 17, "yes_total": 45, "no_accuracy": 0.7408450704225352, "no_correct": 526, "no_total": 710, "correct": 543, "total": 755}, "ontop": {"accuracy": 0.8984112776907586, "yes_accuracy": 0.5872235872235873, "yes_correct": 239, "yes_total": 407, "no_accuracy": 0.92959133431807, "no_correct": 3776, "no_total": 4062, "correct": 4015, "total": 4469}, "nextto": {"accuracy": 0.5224882524054598, "yes_accuracy": 0.6318537859007833, "yes_correct": 242, "yes_total": 383, "no_accuracy": 0.5122369065100343, "no_correct": 2093, "no_total": 4086, "correct": 2335, "total": 4469}, "open": {"accuracy": 0.6748251748251748, "yes_accuracy": 0.014925373134328358, "yes_correct": 1, "yes_total": 67, "no_accuracy": 0.8767123287671232, "no_correct": 192, "no_total": 219, "correct": 193, "total": 286}, "inside": {"accuracy": 0.9845132743362832, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 9, "no_accuracy": 0.994413407821229, "no_correct": 890, "no_total": 895, "correct": 890, "total": 904}}, "predicate_accuracy": 0.7252199900381869, "macro_predicate_accuracy": 0.7421542750739584, "action_accuracy": 0.05465587044534413, "task_accuracy": 0.0, "fail_ratio": 0.0, "metadata": {"model_name": "Qwen/Qwen2.5-VL-7B-Instruct", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/medium", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7211616_1"}}