{"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to have a range that allows it to interact with objects on the floor. Since the book_1 is within the reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to have a range that allows it to interact with objects on the floor. Since the book_1 is within the reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to have a range that allows it to interact with objects on the floor. Since the book_1 is within the reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to have a range that allows it to interact with objects on the floor. Since the book_1 is within the reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent appears to be a robotic arm. Next, I will look for any books in the image. There is a book visible in the image. The robotic arm is holding the book, as it is positioned in a way that suggests it is grasping the book. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent appears to be a robotic arm. Next, I will look for any books in the image. There is a book visible in the image. The robotic arm is holding the book, as it is positioned in a way that suggests it is grasping the book. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the hardback_1 in the image. It appears to be a chair located in the room. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned above the table and seems to have a range of motion that could potentially extend to the chair. Given the layout and the positioning of the arm, it looks like the arm could reach the chair without any obstructions. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the hardback_1 in the image. It appears to be a chair located in the room. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned above the table and seems to have a range of motion that could potentially extend to the chair. Given the layout and the positioning of the arm, it looks like the arm could reach the chair without any obstructions. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the position of the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table_1, and it appears to be within a range that allows it to interact with objects on the table. Since the robotic arm is close to the table and can hold objects, it is in reach of the agent.", false, "<explanation>\nFirst, I will identify the position of the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table_1, and it appears to be within a range that allows it to interact with objects on the table. Since the robotic arm is close to the table and can hold objects, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is located on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, with its end effector close to the book_1. The robotic arm appears to be able to reach the book_1 without any obstructions. Therefore, the book_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is located on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, with its end effector close to the book_1. The robotic arm appears to be able to reach the book_1 without any obstructions. Therefore, the book_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(shelf_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable shelf_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned near the table and seems to be able to move towards the shelf. Given that the shelf is within the range of the robotic arm's reach, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned near the table and seems to be able to move towards the shelf. Given that the shelf is within the range of the robotic arm's reach, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.", false, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "place-on(book_1, shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is currently holding an object and is positioned near the table. The arm's reach needs to be evaluated to determine if it can extend to the shelf_1. Given the height of the shelf_1 and the current position of the robotic arm, it seems that the arm can reach the shelf_1 if it moves upwards. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is currently holding an object and is positioned near the table. The arm's reach needs to be evaluated to determine if it can extend to the shelf_1. Given the height of the shelf_1 and the current position of the robotic arm, it seems that the arm can reach the shelf_1 if it moves upwards. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"ontop book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. Then, I will look for the shelf_1 and check if the book_1 is on top of it. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the book_1 in the image. Then, I will look for the shelf_1 and check if the book_1 is on top of it. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding book_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned above the table, but it does not appear to be holding any book or object. The books on the table are stationary and not being grasped by the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned above the table, but it does not appear to be holding any book or object. The books on the table are stationary and not being grasped by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is in a position that allows it to reach the table, the book_1 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is in a position that allows it to reach the table, the book_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the book_1 in the image. The book_1 is visible in the image, and it is being held by the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the book_1 in the image. The book_1 is visible in the image, and it is being held by the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will look for the shelf_1 in the image. The shelf_1 is not visible in the image. Since the book_1 is on the table and there is no shelf_1 present, the book_1 cannot be on top of the shelf_1.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will look for the shelf_1 in the image. The shelf_1 is not visible in the image. Since the book_1 is on the table and there is no shelf_1 present, the book_1 cannot be on top of the shelf_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will locate the shelf_1, which is not visible in the image. Since the shelf_1 is not present, it is impossible for the book_1 to be next to it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will locate the shelf_1, which is not visible in the image. Since the shelf_1 is not present, it is impossible for the book_1 to be next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "place-on(book_1, shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned near the table and seems to have a range of motion that allows it to reach higher areas. Given that the shelf_1 is within the arm's reach, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned near the table and seems to have a range of motion that allows it to reach higher areas. Given that the shelf_1 is within the arm's reach, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"ontop book_1,shelf_1": ["no", 0.0, 1.3003917389699035e-06, "First, I will identify the book_1 in the image. Then, I will check if it is on top of the shelf_1. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the book_1 in the image. Then, I will check if it is on top of the shelf_1. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding book_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, but it is not specified which book it is holding. The question asks if the agent is holding \"book_1\". Since the image does not provide a clear indication that the robotic arm is specifically holding \"book_1\", I cannot confirm this with certainty.", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, but it is not specified which book it is holding. The question asks if the agent is holding \"book_1\". Since the image does not provide a clear indication that the robotic arm is specifically holding \"book_1\", I cannot confirm this with certainty.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is above the table, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is above the table, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. Then, I will look for the shelf_1 and check if the book_1 is on top of it. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. Then, I will look for the shelf_1 and check if the book_1 is on top of it. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. Then, I will locate the shelf_1. Next, I will determine the relative position of the book_1 with respect to the shelf_1. In the image, the book_1 is on the table, and the shelf_1 is not visible in the provided view. Therefore, the book_1 is not next to the shelf_1.", true, "<explanation>\nFirst, I will identify the book_1 in the image. Then, I will locate the shelf_1. Next, I will determine the relative position of the book_1 with respect to the shelf_1. In the image, the book_1 is on the table, and the shelf_1 is not visible in the provided view. Therefore, the book_1 is not next to the shelf_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "place-on(book_1, shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 is positioned on the wall above the table. Next, I will determine the position and reach of the robotic arm. The robotic arm is currently holding a drawing and is positioned near the table. The arm's reach needs to be assessed to see if it can extend to the shelf_1. Given that the shelf_1 is above the table and the robotic arm is near the table, it is reasonable to conclude that the arm can reach the shelf_1 if it extends upwards. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 is positioned on the wall above the table. Next, I will determine the position and reach of the robotic arm. The robotic arm is currently holding a drawing and is positioned near the table. The arm's reach needs to be assessed to see if it can extend to the shelf_1. Given that the shelf_1 is above the table and the robotic arm is near the table, it is reasonable to conclude that the arm can reach the shelf_1 if it extends upwards. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"ontop book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. Then, I will look for the shelf_1 and check if the book_1 is on top of it. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the book_1 in the image. Then, I will look for the shelf_1 and check if the book_1 is on top of it. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding book_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, but it is not specified which book it is holding. The question asks if the agent is holding \"book_1,\" but there is no information provided about the specific book it is holding. Therefore, I cannot confirm that the agent is holding \"book_1.\"", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a book, but it is not specified which book it is holding. The question asks if the agent is holding \"book_1,\" but there is no information provided about the specific book it is holding. Therefore, I cannot confirm that the agent is holding \"book_1.\"\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is designed to interact with objects on the table, it is likely within reach to pick up the book_1.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is designed to interact with objects on the table, it is likely within reach to pick up the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm located on the right side of the image. Next, I will look for the book_1, which is one of the objects on the table. The book_1 is on the table, but the robotic arm is not holding it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm located on the right side of the image. Next, I will look for the book_1, which is one of the objects on the table. The book_1 is on the table, but the robotic arm is not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. Then, I will check if it is on top of the shelf_1. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. Then, I will check if it is on top of the shelf_1. In the image, the book_1 is on the table, not on the shelf_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto book_1,shelf_1": ["no", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will locate the shelf_1. The shelf_1 is not visible in the image. Since the book_1 is on the table and there is no shelf_1 present, the book_1 cannot be next to the shelf_1.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will locate the shelf_1. The shelf_1 is not visible in the image. Since the book_1 is on the table and there is no shelf_1 present, the book_1 cannot be next to the shelf_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent to pick up the book_1.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent to pick up the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["yes", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["no", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["yes", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["no", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["yes", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.52, "yes_accuracy": 0.6666666666666666, "yes_correct": 6, "yes_total": 9, "no_accuracy": 0.4375, "no_correct": 7, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 3, "actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["yes", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"], "ontop book_1,shelf_1": ["no", "yes"], "nextto book_1,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 5, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"], "ontop book_1,shelf_1": ["no", "yes"], "nextto book_1,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 7, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["no", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "no"], "ontop book_1,shelf_1": ["no", "yes"], "nextto book_1,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.4, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 9, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the wall and appears to have a range of motion that could extend to the floor. Given the position and size of the robotic arm, it seems capable of reaching the book_1 on the floor.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the wall and appears to have a range of motion that could extend to the floor. Given the position and size of the robotic arm, it seems capable of reaching the book_1 on the floor.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned in the room, and it appears to have a range of motion that allows it to move towards the book_1. Since the book_1 is within the robotic arm's reach, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned in the room, and it appears to have a range of motion that allows it to move towards the book_1. Since the book_1 is within the robotic arm's reach, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the book_1 in the image. The book_1 is visible in the image and is being held by the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the book_1 in the image. The book_1 is visible in the image and is being held by the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the position of the hardback_1 in the image. It is located on a table in the foreground. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move towards the hardback_1. Since the robotic arm is in close proximity to the table and the hardback_1 is on the table, it is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the position of the hardback_1 in the image. It is located on a table in the foreground. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move towards the hardback_1. Since the robotic arm is in close proximity to the table and the hardback_1 is on the table, it is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the position of the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table_1, indicating that it is within the arm's reach. Since the arm can hold objects and is positioned near the table, it is reasonable to conclude that the table_1 is within the agent's reach.", false, "<explanation>\nFirst, I will identify the position of the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table_1, indicating that it is within the arm's reach. Since the arm can hold objects and is positioned near the table, it is reasonable to conclude that the table_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, held by a robotic arm. The robotic arm is the agent in this scenario. Next, I will determine if the robotic arm can reach the book_1. Since the robotic arm is already holding the book_1, it is within its reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, held by a robotic arm. The robotic arm is the agent in this scenario. Next, I will determine if the robotic arm can reach the book_1. Since the robotic arm is already holding the book_1, it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(shelf_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable shelf_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be mounted on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table and seems to be able to move around the area. Since the shelf_1 is on the wall and the robotic arm is in the air, it is likely that the arm can reach the shelf_1 if it moves downward. Therefore, the shelf_1 is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be mounted on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table and seems to be able to move around the area. Since the shelf_1 is on the wall and the robotic arm is in the air, it is likely that the arm can reach the shelf_1 if it moves downward. Therefore, the shelf_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will determine if the robotic arm (the agent) can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in a position to interact with objects on the table, it is within reach of the agent.", false, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table. Next, I will determine if the robotic arm (the agent) can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in a position to interact with objects on the table, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["yes", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["yes", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["no", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["yes", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.56, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.4375, "no_correct": 7, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}, "nextto": {"accuracy": 0.4444444444444444, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 3, "actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["no", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to be able to move towards it. Since the robotic arm can hold objects and is close to the book_1, it is within reach.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to be able to move towards it. Since the robotic arm can hold objects and is close to the book_1, it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to be able to move towards it. Since the robotic arm can hold objects and is close to the book_1, it is within reach.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to be able to move towards it. Since the robotic arm can hold objects and is close to the book_1, it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is labeled as \"book_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a book, which is labeled as \"book_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the position of the hardback_1 in the image. It is located on a table in the foreground. Next, I will consider the position and range of the robotic arm. The robotic arm is positioned above the table and appears to be able to reach down towards the table. Given that the hardback_1 is on the table and the robotic arm is in a position that suggests it can move downwards, it is reasonable to conclude that the hardback_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the hardback_1 in the image. It is located on a table in the foreground. Next, I will consider the position and range of the robotic arm. The robotic arm is positioned above the table and appears to be able to reach down towards the table. Given that the hardback_1 is on the table and the robotic arm is in a position that suggests it can move downwards, it is reasonable to conclude that the hardback_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table_1, and it appears to be within a range that allows it to interact with objects on the table. Since the robotic arm is close to the table and can hold objects, it is in reach of the agent.", false, "<explanation>\nFirst, I will identify the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table_1, and it appears to be within a range that allows it to interact with objects on the table. Since the robotic arm is close to the table and can hold objects, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is placed on a small table. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Given that the robotic arm is close to the table and the book_1 is on the table, it is reasonable to conclude that the book_1 is within the reach of the robotic arm.", false, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is placed on a small table. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Given that the robotic arm is close to the table and the book_1 is on the table, it is reasonable to conclude that the book_1 is within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(shelf_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable shelf_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 is located on the wall above the table. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, extending towards the right side of the image. The arm appears to be able to reach towards the upper part of the image, which includes the area where the shelf_1 is located. Since the shelf_1 is within the reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 is located on the wall above the table. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, extending towards the right side of the image. The arm appears to be able to reach towards the upper part of the image, which includes the area where the shelf_1 is located. Since the shelf_1 is within the reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent.", false, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "place-on(book_1, shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding book_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner. Next, I will look for the book_1 in the image. The book_1 is on the table in the lower left corner. Since the robotic arm is not holding the book_1 and the book_1 is on the table, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner. Next, I will look for the book_1 in the image. The book_1 is on the table in the lower left corner. Since the robotic arm is not holding the book_1 and the book_1 is on the table, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table and seems to be able to move around the area. Since the shelf_1 is on the wall and the robotic arm is in the same general vicinity, it is likely that the arm can reach the shelf_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table and seems to be able to move around the area. Since the shelf_1 is on the wall and the robotic arm is in the same general vicinity, it is likely that the arm can reach the shelf_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(book_1, shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding book_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner. Next, I will look for the book_1 in the image. The book_1 is on the table in the lower left corner. Since the robotic arm is not holding the book_1 and the book_1 is on the table, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner. Next, I will look for the book_1 in the image. The book_1 is on the table in the lower left corner. Since the robotic arm is not holding the book_1 and the book_1 is on the table, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table and seems to be able to move around the area. Since the shelf_1 is on the wall and the robotic arm is in the same general vicinity, it is likely that the arm can reach the shelf_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned above the table and seems to be able to move around the area. Since the shelf_1 is on the wall and the robotic arm is in the same general vicinity, it is likely that the arm can reach the shelf_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent to pick up the book_1.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent to pick up the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent to pick up the book_1.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is in the environment and can interact with objects on the table, it is likely within reach of the agent to pick up the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable hardback_2": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding hardback_2": ["yes", "no"], "holding book_1": ["yes", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,hardback_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop hardback_2,hardback_1": ["yes", "no"], "ontop hardback_2,table_1": ["yes", "no"], "ontop hardback_2,book_1": ["yes", "no"], "ontop hardback_2,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,hardback_2": ["no", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,hardback_2": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,hardback_2": ["yes", "no"], "nextto hardback_1,table_1": ["yes", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto hardback_2,hardback_1": ["yes", "no"], "nextto hardback_2,table_1": ["yes", "no"], "nextto hardback_2,book_1": ["no", "no"], "nextto hardback_2,book_2": ["yes", "no"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,hardback_2": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,hardback_2": ["yes", "no"], "nextto book_2,table_1": ["yes", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.3902439024390244, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.21875, "no_correct": 7, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "ontop": {"accuracy": 0.3125, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.21428571428571427, "no_correct": 3, "no_total": 14}, "nextto": {"accuracy": 0.375, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 4, "no_total": 14}}}, "step": 3, "actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["yes", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["yes", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned to the right side of the image, and it appears to have a range of motion that could potentially extend to the book_1. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the book_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned to the right side of the image, and it appears to have a range of motion that could potentially extend to the book_1. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the book_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to have a range that allows it to pick up objects on the floor. Since the book_1 is within the reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the floor in the foreground. Next, I will determine if the robotic arm (the agent) can reach it. The robotic arm is positioned near the book_1, and it appears to have a range that allows it to pick up objects on the floor. Since the book_1 is within the reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent appears to be a robotic arm. Next, I will look for any objects that the robotic arm is holding. The robotic arm is holding a book, which is labeled as \"book_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent appears to be a robotic arm. Next, I will look for any objects that the robotic arm is holding. The robotic arm is holding a book, which is labeled as \"book_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the position of the hardback_1 in the image. The hardback_1 is located near the ceiling, held by a robotic arm. Next, I will determine if the robotic arm is within a range that allows it to interact with the hardback_1. Since the robotic arm is already holding the hardback_1, it is clearly within reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the position of the hardback_1 in the image. The hardback_1 is located near the ceiling, held by a robotic arm. Next, I will determine if the robotic arm is within a range that allows it to interact with the hardback_1. Since the robotic arm is already holding the hardback_1, it is clearly within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the position of the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table_1, and it appears to be within a range that allows it to interact with objects on the table. Since the robotic arm is close to the table and can hold objects, it is in reach of the agent.", false, "<explanation>\nFirst, I will identify the position of the table_1 in the image. The table_1 is located in the foreground, closer to the viewer. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table_1, and it appears to be within a range that allows it to interact with objects on the table. Since the robotic arm is close to the table and can hold objects, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, held by a robotic arm. The robotic arm is the agent in this scenario. Next, I will determine if the robotic arm can reach the book_1. Since the robotic arm is already holding the book_1, it is within its reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, held by a robotic arm. The robotic arm is the agent in this scenario. Next, I will determine if the robotic arm can reach the book_1. Since the robotic arm is already holding the book_1, it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(shelf_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable shelf_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be mounted on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned near the table and seems to have the capability to move and interact with objects within its range. Since the shelf_1 is above the table and the robotic arm is in the vicinity, it is likely that the arm can reach the shelf_1 if it moves upwards. Therefore, the shelf_1 is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the shelf_1 in the image. The shelf_1 appears to be mounted on the wall above the table. Next, I will consider the position and reach of the robotic arm. The robotic arm is positioned near the table and seems to have the capability to move and interact with objects within its range. Since the shelf_1 is above the table and the robotic arm is in the vicinity, it is likely that the arm can reach the shelf_1 if it moves upwards. Therefore, the shelf_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.", false, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is on the table. Next, I will determine if the robotic arm can reach the book_1. The robotic arm is positioned above the table and appears to be able to move towards the book_1. Since the robotic arm is capable of holding objects and is in proximity to the book_1, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the location of the hardback_1 in the image. The hardback_1 is shown in the upper part of the image, near the ceiling. Next, I will consider the position and reach of the robotic arm, which is also in the image. The robotic arm is positioned above the hardback_1, indicating that it is within the arm's reach. Since the robotic arm can hold objects and is close to the hardback_1, it is reasonable to conclude that the hardback_1 is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the hardback_1 in the image. The hardback_1 is shown in the upper part of the image, near the ceiling. Next, I will consider the position and reach of the robotic arm, which is also in the image. The robotic arm is positioned above the hardback_1, indicating that it is within the arm's reach. Since the robotic arm can hold objects and is close to the hardback_1, it is reasonable to conclude that the hardback_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the position of the table_1 in the image. The table_1 is located in the center of the room, near the robotic arm. Next, I will consider the range of the robotic arm. The robotic arm is positioned above the table_1 and appears to be able to reach down to the surface of the table. Since the robotic arm is close to the table and can likely extend its reach to the table's surface, it is within the agent's reach.", false, "<explanation>\nFirst, I will identify the position of the table_1 in the image. The table_1 is located in the center of the room, near the robotic arm. Next, I will consider the range of the robotic arm. The robotic arm is positioned above the table_1 and appears to be able to reach down to the surface of the table. Since the robotic arm is close to the table and can likely extend its reach to the table's surface, it is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["no", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, attached to the wall. Next, I will consider the reach of the robotic arm. The robotic arm is positioned above the table and seems to have a range of motion that allows it to reach objects within its vicinity. However, the book_1 is high up on the wall, which is beyond the typical reach of a robotic arm unless it has an extended or specialized mechanism. Given the image, the robotic arm does not appear to have such capabilities. Therefore, the book_1 is not in reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, attached to the wall. Next, I will consider the reach of the robotic arm. The robotic arm is positioned above the table and seems to have a range of motion that allows it to reach objects within its vicinity. However, the book_1 is high up on the wall, which is beyond the typical reach of a robotic arm unless it has an extended or specialized mechanism. Given the image, the robotic arm does not appear to have such capabilities. Therefore, the book_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["no", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, attached to the wall. Next, I will consider the reach of the robotic arm. The robotic arm is positioned above the table and seems to have a range of motion that allows it to reach objects within its vicinity. However, the book_1 is high up on the wall, which is likely beyond the robotic arm's reach. Therefore, the book_1 is not in reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is located near the ceiling, attached to the wall. Next, I will consider the reach of the robotic arm. The robotic arm is positioned above the table and seems to have a range of motion that allows it to reach objects within its vicinity. However, the book_1 is high up on the wall, which is likely beyond the robotic arm's reach. Therefore, the book_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, close to the book_1. Since the robotic arm is within a reasonable distance to grasp the book_1 and it is not obstructed, it is in reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, close to the book_1. Since the robotic arm is within a reasonable distance to grasp the book_1 and it is not obstructed, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the location of the hardback_1 in the image. The hardback_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, close to the hardback_1. Since the robotic arm is within a reasonable distance to grasp the hardback_1 and it is not obstructed, it is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the hardback_1 in the image. The hardback_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, close to the hardback_1. Since the robotic arm is within a reasonable distance to grasp the hardback_1 and it is not obstructed, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the position of the table_1 in the image. The table_1 is located in the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The reach of the robotic arm needs to be assessed to see if it can extend to the table_1. Given the height and positioning of the robotic arm, it appears that it can reach the table_1 as it is within the arm's range. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the position of the table_1 in the image. The table_1 is located in the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The reach of the robotic arm needs to be assessed to see if it can extend to the table_1. Given the height and positioning of the robotic arm, it appears that it can reach the table_1 as it is within the arm's range. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is above the table, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is above the table, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Next, I will look for the object \"hardback_1\" to see if it is being held by the robotic arm. The robotic arm is positioned above the table, and there is a book labeled \"hardback_1\" on the table. The robotic arm is not in contact with the book, so it is not holding the hardback_1.", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Next, I will look for the object \"hardback_1\" to see if it is being held by the robotic arm. The robotic arm is positioned above the table, and there is a book labeled \"hardback_1\" on the table. The robotic arm is not in contact with the book, so it is not holding the hardback_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the position of the book_1 in the image. The book_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is above the table, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the position of the book_1 in the image. The book_1 is on a table in the foreground. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the table, and it appears to be able to move downwards. Since the book_1 is on the table and the robotic arm is above the table, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Next, I will look for the object \"hardback_1\" to see if it is being held by the robotic arm. The robotic arm is positioned above the table, and there is a book labeled \"hardback_1\" on the table. The robotic arm is not in contact with the book, so it is not holding the hardback_1.", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Next, I will look for the object \"hardback_1\" to see if it is being held by the robotic arm. The robotic arm is positioned above the table, and there is a book labeled \"hardback_1\" on the table. The robotic arm is not in contact with the book, so it is not holding the hardback_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["yes", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["no", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["no", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.72, "yes_accuracy": 0.6666666666666666, "yes_correct": 6, "yes_total": 9, "no_accuracy": 0.75, "no_correct": 12, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}}}, "step": 3, "actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["no", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["yes", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["no", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["no", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["yes", "no"], "nextto book_2,book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.76, "yes_accuracy": 0.5555555555555556, "yes_correct": 5, "yes_total": 9, "no_accuracy": 0.875, "no_correct": 14, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}}}, "step": 5, "actions": ["navigate-to(book_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)", "navigate-to(book_1)", "grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop book_1,hardback_1": ["yes", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.56, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.4375, "no_correct": 7, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.4444444444444444, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}, "nextto": {"accuracy": 0.4444444444444444, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 6, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.5, "no_correct": 8, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}, "nextto": {"accuracy": 0.4444444444444444, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 7, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the center of the kitchen, facing the counter. The robotic arm is capable of moving and holding objects. Based on the positioning, the robotic arm can reach the cabinet_1 as it is within its reachable range. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the center of the kitchen, facing the counter. The robotic arm is capable of moving and holding objects. Based on the positioning, the robotic arm can reach the cabinet_1 as it is within its reachable range. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the center of the kitchen counter, facing the cabinet_2. The robotic arm is capable of moving and holding objects. Based on the positioning, the robotic arm can reach the cabinet_2 without any obstructions. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the center of the kitchen counter, facing the cabinet_2. The robotic arm is capable of moving and holding objects. Based on the positioning, the robotic arm can reach the cabinet_2 without any obstructions. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable spoon_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the center of the kitchen counter, facing the cabinet_2. The robotic arm is capable of moving and holding objects. Based on the positioning, the robotic arm can reach the cabinet_2 without any obstructions. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the center of the kitchen counter, facing the cabinet_2. The robotic arm is capable of moving and holding objects. Based on the positioning, the robotic arm can reach the cabinet_2 without any obstructions. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_2": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet is open or closed. In the image, there is a cabinet labeled \"cabinet_2\" and it appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet is open or closed. In the image, there is a cabinet labeled \"cabinet_2\" and it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_2": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet is open or closed. In the image, there is a cabinet labeled \"cabinet_2\" and it appears to be closed. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet is open or closed. In the image, there is a cabinet labeled \"cabinet_2\" and it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable spoon_1": ["yes", 0.0, 0.0, "First, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the counter, facing the center. The reach of the robotic arm is determined by its range of motion. The robotic arm appears to be able to extend across the counter to the left side where the spoon_1 is located. Therefore, the spoon_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the left side of the kitchen counter. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the counter, facing the center. The reach of the robotic arm is determined by its range of motion. The robotic arm appears to be able to extend across the counter to the left side where the spoon_1 is located. Therefore, the spoon_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(bowl_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable bowl_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the bottom. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned towards the center-right of the image. To assess if the cabinet_1 is in reach of the agent, I need to consider the range and movement capabilities of the robotic arm. The robotic arm appears to be able to move and reach across the kitchen counter. Given its position and the layout of the kitchen, it seems plausible that the robotic arm can extend to the cabinet_1. Therefore, the cabinet_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the bottom. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned towards the center-right of the image. To assess if the cabinet_1 is in reach of the agent, I need to consider the range and movement capabilities of the robotic arm. The robotic arm appears to be able to move and reach across the kitchen counter. Given its position and the layout of the kitchen, it seems plausible that the robotic arm can extend to the cabinet_1. Therefore, the cabinet_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the left side of the image, near the bottom. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned towards the center-right of the image. To assess if the cabinet_2 is within reach of the agent, I will consider the distance and orientation between the agent and the cabinet_2. The robotic arm appears to be able to move towards the cabinet_2, and there are no significant obstacles blocking its path. Therefore, the cabinet_2 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the left side of the image, near the bottom. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned towards the center-right of the image. To assess if the cabinet_2 is within reach of the agent, I will consider the distance and orientation between the agent and the cabinet_2. The robotic arm appears to be able to move towards the cabinet_2, and there are no significant obstacles blocking its path. Therefore, the cabinet_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable spoon_1": ["yes", 0.0, 0.0, "First, I will identify the location of the spoon_1 in the image. The spoon_1 is on the kitchen counter. Next, I will determine if the robotic arm (the agent) can reach the spoon_1. The robotic arm is positioned near the kitchen counter, and it appears to have a range of motion that allows it to reach objects on the counter. Since the spoon_1 is on the counter and the robotic arm is close enough to interact with it, the spoon_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the spoon_1 in the image. The spoon_1 is on the kitchen counter. Next, I will determine if the robotic arm (the agent) can reach the spoon_1. The robotic arm is positioned near the kitchen counter, and it appears to have a range of motion that allows it to reach objects on the counter. Since the spoon_1 is on the counter and the robotic arm is close enough to interact with it, the spoon_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "grasp(spoon_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable spoon_1": ["yes", 0.0, 0.0, "First, I will identify the location of the spoon_1 in the image. The spoon_1 is on the kitchen counter. Next, I will determine if the robotic arm (the agent) can reach the spoon_1. The robotic arm is positioned near the counter, and it appears to have a range of motion that allows it to reach objects on the counter. Since the spoon_1 is on the counter and the robotic arm is close to it, the spoon_1 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the spoon_1 in the image. The spoon_1 is on the kitchen counter. Next, I will determine if the robotic arm (the agent) can reach the spoon_1. The robotic arm is positioned near the counter, and it appears to have a range of motion that allows it to reach objects on the counter. Since the spoon_1 is on the counter and the robotic arm is close to it, the spoon_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "all_correct": true}, "effects_results": {"updated_non_visible_preds": {"holding spoon_1": {"before": false, "after": true}, "ontop spoon_1,bowl_1": {"before": false, "after": false}, "ontop spoon_1,cabinet_1": {"before": false, "after": false}, "ontop spoon_1,cabinet_2": {"before": false, "after": false}, "ontop spoon_1,spoon_1": {"before": null, "after": false}, "ontop spoon_1,sink_1": {"before": false, "after": false}, "nextto spoon_1,bowl_1": {"before": false, "after": false}, "nextto spoon_1,cabinet_1": {"before": false, "after": false}, "nextto spoon_1,cabinet_2": {"before": false, "after": false}, "nextto spoon_1,spoon_1": {"before": null, "after": false}, "nextto spoon_1,sink_1": {"before": false, "after": false}, "inside spoon_1,cabinet_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable bowl_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the wall. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the kitchen counter, towards the center of the image. To assess if the cabinet_1 is within reach of the agent, I need to consider the range and movement capabilities of the robotic arm. The robotic arm appears to be able to move horizontally and vertically, but it is not clear if it can reach the lower cabinets without additional movement or adjustments. Given the positioning and typical range of robotic arms in such simulations, it seems unlikely that the robotic arm can reach the cabinet_1 directly. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the wall. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the kitchen counter, towards the center of the image. To assess if the cabinet_1 is within reach of the agent, I need to consider the range and movement capabilities of the robotic arm. The robotic arm appears to be able to move horizontally and vertically, but it is not clear if it can reach the lower cabinets without additional movement or adjustments. Given the positioning and typical range of robotic arms in such simulations, it seems unlikely that the robotic arm can reach the cabinet_1 directly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the right side of the kitchen counter. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach down to the counter level. Since the cabinet_2 is on the counter and the robotic arm is positioned in a way that suggests it can move down to interact with objects on the counter, it is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the right side of the kitchen counter. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach down to the counter level. Since the cabinet_2 is on the counter and the robotic arm is positioned in a way that suggests it can move down to interact with objects on the counter, it is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. The sink_1 is located on the left side of the kitchen counter. Next, I will determine if the robotic arm can reach the sink_1. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach the sink_1. The arm's position and orientation suggest it can interact with objects on the counter, including the sink_1. Therefore, the sink_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the sink_1 in the image. The sink_1 is located on the left side of the kitchen counter. Next, I will determine if the robotic arm can reach the sink_1. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach the sink_1. The arm's position and orientation suggest it can interact with objects on the counter, including the sink_1. Therefore, the sink_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable spoon_1": {"before": true, "after": false}}}, "action_info": "executed but failed"}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the sink_1 in the image. The sink_1 is located on the left side of the kitchen counter. Next, I will determine if the robotic arm (agent) can reach it. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach the sink_1. The arm is not obstructed by any objects and is within the reach of the sink_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the sink_1 in the image. The sink_1 is located on the left side of the kitchen counter. Next, I will determine if the robotic arm (agent) can reach it. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach the sink_1. The arm is not obstructed by any objects and is within the reach of the sink_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, true, true], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the sink_1 in the image. The sink_1 is located on the left side of the kitchen counter. Next, I will determine if the robotic arm (agent) can reach it. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach the sink_1. The arm is not obstructed by any objects and is within the reach of the sink_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the sink_1 in the image. The sink_1 is located on the left side of the kitchen counter. Next, I will determine if the robotic arm (agent) can reach it. The robotic arm is positioned above the counter, and it appears to have a range that allows it to reach the sink_1. The arm is not obstructed by any objects and is within the reach of the sink_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, true, true], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "open cabinet_1": ["yes", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "navigate-to(bowl_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable spoon_1": ["no", "yes"], "reachable spoon_2": ["yes", "yes"], "holding spoon_1": ["no", "no"], "holding spoon_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_1": ["no", "no"], "ontop spoon_1,cabinet_2": ["no", "no"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_2,cabinet_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "no"], "ontop spoon_2,spoon_1": ["no", "no"], "inside spoon_1,cabinet_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_1": ["no", "no"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_1": ["yes", "no"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["yes", "yes"], "nextto spoon_2,cabinet_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.45454545454545453, "yes_correct": 5, "yes_total": 11, "no_accuracy": 0.7692307692307693, "no_correct": 10, "no_total": 13, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable spoon_1": ["yes", "yes"], "holding spoon_1": ["no", "no"], "open cabinet_1": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_1": ["no", "no"], "ontop spoon_1,cabinet_2": ["no", "no"], "inside spoon_1,cabinet_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_1": ["no", "no"], "nextto spoon_1,cabinet_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["grasp(spoon_1)", "navigate-to(bowl_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable spoon_2": ["yes", "no"], "reachable sink_1": ["yes", "no"], "holding spoon_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open cabinet_2": ["yes", "yes"], "ontop spoon_2,cabinet_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_2,cabinet_1": ["no", "no"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,cabinet_1": ["no", "no"], "nextto spoon_2,cabinet_2": ["yes", "yes"], "nextto spoon_2,sink_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable spoon_2": ["yes", "no"], "reachable sink_1": ["yes", "no"], "holding spoon_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["yes", "yes"], "ontop spoon_2,cabinet_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_2,cabinet_1": ["no", "no"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,cabinet_1": ["no", "no"], "nextto spoon_2,cabinet_2": ["yes", "yes"], "nextto spoon_2,sink_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}], "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the cabinet_1 in the image. Cabinet_1 is located above the black oven and to the left of the robotic arm. Next, I will assess the range of the robotic arm. The robotic arm is positioned to the right of the cabinet_1 and appears to have a significant reach, as indicated by the red outline around it. The robotic arm is designed to hold objects, and its reach seems to extend towards the cabinet_1. Given the positioning and the reach of the robotic arm, it is reasonable to conclude that the cabinet_1 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the position of the cabinet_1 in the image. Cabinet_1 is located above the black oven and to the left of the robotic arm. Next, I will assess the range of the robotic arm. The robotic arm is positioned to the right of the cabinet_1 and appears to have a significant reach, as indicated by the red outline around it. The robotic arm is designed to hold objects, and its reach seems to extend towards the cabinet_1. Given the positioning and the reach of the robotic arm, it is reasonable to conclude that the cabinet_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the position of the cabinet_2 in the image. Cabinet_2 is located on the right side of the image, near the robotic arm. Next, I will assess the range of the robotic arm to determine if it can reach cabinet_2. The robotic arm is positioned close to cabinet_2 and appears to have an extended reach. Given the proximity and the positioning of the robotic arm, it is reasonable to conclude that the robotic arm can reach cabinet_2.", false, "<explanation>\nFirst, I will identify the position of the cabinet_2 in the image. Cabinet_2 is located on the right side of the image, near the robotic arm. Next, I will assess the range of the robotic arm to determine if it can reach cabinet_2. The robotic arm is positioned close to cabinet_2 and appears to have an extended reach. Given the proximity and the positioning of the robotic arm, it is reasonable to conclude that the robotic arm can reach cabinet_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. The sink_1 is located on the left side of the image, near the wall. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the cabinets. The robotic arm is positioned above the counter and appears to be able to move horizontally. The sink_1 is on the counter, and the robotic arm is close enough to reach it without any significant obstacles. Therefore, the sink_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the sink_1 in the image. The sink_1 is located on the left side of the image, near the wall. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the cabinets. The robotic arm is positioned above the counter and appears to be able to move horizontally. The sink_1 is on the counter, and the robotic arm is close enough to reach it without any significant obstacles. Therefore, the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable spoon_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the cabinet_1 in the image. Cabinet_1 is located above the black oven and to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm is positioned near the cabinet_1 and appears to have a range that extends towards it. Given the proximity and the positioning of the robotic arm, it seems that the robotic arm can reach cabinet_1 without any obstructions. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the position of the cabinet_1 in the image. Cabinet_1 is located above the black oven and to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm is positioned near the cabinet_1 and appears to have a range that extends towards it. Given the proximity and the positioning of the robotic arm, it seems that the robotic arm can reach cabinet_1 without any obstructions. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and it appears to have its door closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and it appears to have its door closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, the cabinet labeled \"cabinet_1\" is clearly visible and its doors are open.", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, the cabinet labeled \"cabinet_1\" is clearly visible and its doors are open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of bowl_1 in the image. Bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position of the robotic arm, which is also in the upper part of the image. The robotic arm is positioned close to bowl_1. Since the robotic arm can hold objects and is in proximity to bowl_1, it is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of bowl_1 in the image. Bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position of the robotic arm, which is also in the upper part of the image. The robotic arm is positioned close to bowl_1. Since the robotic arm can hold objects and is in proximity to bowl_1, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the right side of the image, near the top. Next, I will determine the position of the robotic arm, which is also on the right side but slightly lower than the cabinet_2. The robotic arm is capable of holding objects and moving within the environment. Since the cabinet_2 is within the range of the robotic arm's reach, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the right side of the image, near the top. Next, I will determine the position of the robotic arm, which is also on the right side but slightly lower than the cabinet_2. The robotic arm is capable of holding objects and moving within the environment. Since the cabinet_2 is within the range of the robotic arm's reach, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_2": ["yes", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, \"cabinet_2\" is visible and its doors are open.", false, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, \"cabinet_2\" is visible and its doors are open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the bowl_1, but it does not appear to be holding the bowl_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the bowl_1, but it does not appear to be holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the right side of the image, near the top. Next, I will determine the position of the robotic arm, which is also on the right side but slightly lower than the cabinet_2. The robotic arm is capable of holding objects and moving within the environment. Since the cabinet_2 is within the range of the robotic arm's reach, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the cabinet_2 in the image. The cabinet_2 is located on the right side of the image, near the top. Next, I will determine the position of the robotic arm, which is also on the right side but slightly lower than the cabinet_2. The robotic arm is capable of holding objects and moving within the environment. Since the cabinet_2 is within the range of the robotic arm's reach, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_2": ["yes", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, \"cabinet_2\" is visible and its doors are open.", false, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_2\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, \"cabinet_2\" is visible and its doors are open.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the bowl_1, but it does not appear to be holding the bowl_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the bowl_1, but it does not appear to be holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located in the upper part of the image, near the ceiling. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the lower part of the image, closer to the floor. The robotic arm's reach is limited to the area it can physically interact with, which is typically within its arm's length. Since the bowl_1 is located above the robotic arm and not within its immediate reach, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(cabinet_2)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["yes", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 3, "actions": ["open-container(cabinet_2)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.6111111111111112, "yes_correct": 11, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 4, "actions": ["grasp(bowl_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 5, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 6, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 7, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 8, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.8275862068965517, "no_correct": 24, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}}}, "step": 9, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 10, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 11, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 12, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 13, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 14, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 15, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 16, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 17, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 18, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.8275862068965517, "no_correct": 24, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}}}, "step": 19, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 20, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}], "remaining_actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor, and its reach needs to be assessed to see if it can interact with the cabinet_1. The cabinet_1 is at a height that the robotic arm can likely reach, considering its height and the typical range of motion for such an arm. Therefore, the cabinet_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor, and its reach needs to be assessed to see if it can interact with the cabinet_1. The cabinet_1 is at a height that the robotic arm can likely reach, considering its height and the typical range of motion for such an arm. Therefore, the cabinet_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor and appears to be able to move towards the cabinet_1. Since the cabinet_1 is within the vicinity of the robotic arm and the arm can move, it is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor and appears to be able to move towards the cabinet_1. Since the cabinet_1 is within the vicinity of the robotic arm and the arm can move, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. Then, I will determine if the agent (robotic arm) is within a range to reach it. The snack_food_1 appears to be on a counter or table. The robotic arm is positioned in the kitchen area, facing the counter. Given the positioning and the size of the objects, it seems the robotic arm can likely reach the snack_food_1 without any obstructions.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. Then, I will determine if the agent (robotic arm) is within a range to reach it. The snack_food_1 appears to be on a counter or table. The robotic arm is positioned in the kitchen area, facing the counter. Given the positioning and the size of the objects, it seems the robotic arm can likely reach the snack_food_1 without any obstructions.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the carton is open or closed. In the image, there is a carton on the counter, but it is not open. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the carton is open or closed. In the image, there is a carton on the counter, but it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a green snack food item on the counter to the left of the robotic arm. Finally, I will determine if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the counter. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a green snack food item on the counter to the left of the robotic arm. Finally, I will determine if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the counter. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the carton is open or closed. In the image, there is a carton on the counter, but it is not open. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the carton is open or closed. In the image, there is a carton on the counter, but it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a green snack food item on the counter to the left of the robotic arm. Finally, I will determine if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the counter. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a green snack food item on the counter to the left of the robotic arm. Finally, I will determine if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the counter. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["yes", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7419354838709677, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7407407407407407, "no_correct": 20, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.625, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.625, "no_correct": 5, "no_total": 8}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,snack_food_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["yes", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["yes", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto snack_food_1,carton_1": ["no", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["yes", "yes"], "nextto snack_food_1,juice_1": ["yes", "no"], "nextto snack_food_1,door_1": ["yes", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.7142857142857143, "no_correct": 30, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 10, "no_total": 15}, "inside": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,snack_food_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["yes", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto snack_food_1,carton_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["yes", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["yes", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.72, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.7380952380952381, "no_correct": 31, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7333333333333333, "no_correct": 11, "no_total": 15}, "inside": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 3, "actions": ["open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor and appears to be able to move around the kitchen. Considering the size of the cabinet and the robotic arm's reach, it seems that the robotic arm can move towards the cabinet_1 without any obstacles in its path. Therefore, the cabinet_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor and appears to be able to move around the kitchen. Considering the size of the cabinet and the robotic arm's reach, it seems that the robotic arm can move towards the cabinet_1 without any obstacles in its path. Therefore, the cabinet_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor and appears to be able to move towards the cabinet_1. Since the cabinet_1 is within the vicinity of the robotic arm and the arm can move, it is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the left side of the image, near the oven. Next, I will determine the position of the robotic arm, which is in the center of the image, facing away from the cabinet_1. The robotic arm is standing on the floor and appears to be able to move towards the cabinet_1. Since the cabinet_1 is within the vicinity of the robotic arm and the arm can move, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable snack_food_1": ["no", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. Then, I will determine if the agent (the robotic arm) is within a range to reach it. The snack_food_1 appears to be on a counter or table. The robotic arm is positioned in the room, but it is not clear if it is close enough to the snack_food_1 to reach it without moving. Based on the image, the robotic arm does not seem to be in a direct line of sight or close enough to the snack_food_1 to be considered within reach.", false, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. Then, I will determine if the agent (the robotic arm) is within a range to reach it. The snack_food_1 appears to be on a counter or table. The robotic arm is positioned in the room, but it is not clear if it is close enough to the snack_food_1 to reach it without moving. Based on the image, the robotic arm does not seem to be in a direct line of sight or close enough to the snack_food_1 to be considered within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the carton is open or closed. In the image, there is a carton on the counter, but it is not open. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the carton is open or closed. In the image, there is a carton on the counter, but it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a snack food item on the table to the left of the robotic arm. Finally, I will determine if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the table. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a snack food item on the table to the left of the robotic arm. Finally, I will determine if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned towards the right side of the image, facing the carton_1. The arm appears to be able to move towards the carton_1. Given the proximity and the direction of the robotic arm, it seems that the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the carton_1 is open or closed. In the image, there is a carton_1, but it is not open. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the carton_1 is open or closed. In the image, there is a carton_1, but it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a snack food item on the table to the left of the robotic arm. Finally, I will check if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the table. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located in the center of the room. Next, I will look for any snack food items in the image. There is a snack food item on the table to the left of the robotic arm. Finally, I will check if the robotic arm is holding the snack food item. The robotic arm is not holding the snack food item; it is placed on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["no", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["yes", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7419354838709677, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7407407407407407, "no_correct": 20, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.625, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.625, "no_correct": 5, "no_total": 8}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["yes", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["yes", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["yes", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.7380952380952381, "no_correct": 31, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 12, "no_total": 15}, "inside": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["yes", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["yes", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["yes", "yes"], "nextto snack_food_1,juice_1": ["yes", "no"], "nextto snack_food_1,door_1": ["yes", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.66, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.6904761904761905, "no_correct": 29, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 12, "no_total": 15}, "inside": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 3, "actions": ["open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, it appears that the arm can reach the cabinet_1 as it is within the arm's range.", false, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, it appears that the arm can reach the cabinet_1 as it is within the arm's range.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6486486486486487, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6470588235294118, "no_correct": 22, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6216216216216216, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6176470588235294, "no_correct": 21, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4444444444444444, "no_correct": 4, "no_total": 9}}}, "step": 2, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.", false, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is located on the wall above the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the ceiling, extending downwards. The arm's reach needs to be assessed to see if it can extend to the cabinet_1. Given the height and positioning of the cabinet and the robotic arm, the arm appears to be within its reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible, and its door appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6216216216216216, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6176470588235294, "no_correct": 21, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4444444444444444, "no_correct": 4, "no_total": 9}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,juice_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6216216216216216, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6176470588235294, "no_correct": 21, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4444444444444444, "no_correct": 4, "no_total": 9}}}, "step": 2, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. It is located on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm, which is positioned towards the right side of the image. The robotic arm appears to be able to move and reach towards the center of the room. Given the proximity of the plaything_2 to the robotic arm's current position and its ability to move, it seems that the plaything_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. It is located on the floor near the center of the room. Next, I will determine the position and reach of the robotic arm, which is positioned towards the right side of the image. The robotic arm appears to be able to move and reach towards the center of the room. Given the proximity of the plaything_2 to the robotic arm's current position and its ability to move, it seems that the plaything_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the table near the window. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the foreground, facing the table. The arm's reach needs to be assessed to see if it can extend to the carton_1. The robotic arm appears to have a long range, and it is oriented towards the table where the carton_1 is placed. Given the positioning and the apparent range of the robotic arm, it seems that the arm can reach the carton_1 on the table.", false, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the table near the window. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned in the foreground, facing the table. The arm's reach needs to be assessed to see if it can extend to the carton_1. The robotic arm appears to have a long range, and it is oriented towards the table where the carton_1 is placed. Given the positioning and the apparent range of the robotic arm, it seems that the arm can reach the carton_1 on the table.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. The table_1 is located towards the left side of the room, near the chairs and the window. Next, I will determine the position and reach of the robotic arm, which is on the right side of the image. The robotic arm appears to be able to move and extend towards the left side of the room. Considering the distance and the direction of the robotic arm, it seems that the arm can reach the table_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the table_1 in the image. The table_1 is located towards the left side of the room, near the chairs and the window. Next, I will determine the position and reach of the robotic arm, which is on the right side of the image. The robotic arm appears to be able to move and extend towards the left side of the room. Considering the distance and the direction of the robotic arm, it seems that the arm can reach the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is positioned on the floor near the table and chairs. Next, I will determine the reach of the robotic arm, which is the agent. The robotic arm is currently positioned in the foreground, extending towards the right side of the image. The reach of the robotic arm needs to be assessed to see if it can extend to the carton_1. The robotic arm appears to have a range that allows it to reach objects on the floor within its vicinity. Given the positioning and the apparent range of the robotic arm, it seems that the carton_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is positioned on the floor near the table and chairs. Next, I will determine the reach of the robotic arm, which is the agent. The robotic arm is currently positioned in the foreground, extending towards the right side of the image. The reach of the robotic arm needs to be assessed to see if it can extend to the carton_1. The robotic arm appears to have a range that allows it to reach objects on the floor within its vicinity. Given the positioning and the apparent range of the robotic arm, it seems that the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton, but it is not labeled as \"carton_1\". The carton appears to be closed, as there are no visible signs of it being open, such as an open flap or items spilling out. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton, but it is not labeled as \"carton_1\". The carton appears to be closed, as there are no visible signs of it being open, such as an open flap or items spilling out. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The object \"plaything_2\" is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the \"plaything_2\" object. The robotic arm is not holding the \"plaything_2\" object; it is positioned near the object but not in contact with it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The object \"plaything_2\" is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the \"plaything_2\" object. The robotic arm is not holding the \"plaything_2\" object; it is positioned near the object but not in contact with it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is positioned on the floor near the table and chairs. Next, I will determine the reach of the robotic arm, which is the agent. The robotic arm is currently positioned in the foreground, extending towards the right side of the image. The reach of the robotic arm needs to be assessed to see if it can extend to the carton_1. The robotic arm appears to have a range that allows it to reach objects on the floor within its vicinity. Given the positioning and the apparent range of the robotic arm, it seems that the carton_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is positioned on the floor near the table and chairs. Next, I will determine the reach of the robotic arm, which is the agent. The robotic arm is currently positioned in the foreground, extending towards the right side of the image. The reach of the robotic arm needs to be assessed to see if it can extend to the carton_1. The robotic arm appears to have a range that allows it to reach objects on the floor within its vicinity. Given the positioning and the apparent range of the robotic arm, it seems that the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton, but it is not labeled as \"carton_1\". The carton appears to be closed, as there are no visible signs of it being open, such as an open flap or items spilling out. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton, but it is not labeled as \"carton_1\". The carton appears to be closed, as there are no visible signs of it being open, such as an open flap or items spilling out. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The object \"plaything_2\" is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the \"plaything_2\" object. The robotic arm is not holding the \"plaything_2\" object; it is positioned near the object but not in contact with it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The object \"plaything_2\" is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the \"plaything_2\" object. The robotic arm is not holding the \"plaything_2\" object; it is positioned near the object but not in contact with it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_6": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_2,plaything_6": ["yes", "no"], "ontop plaything_2,plaything_7": ["yes", "no"], "ontop plaything_2,plaything_8": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["yes", "no"], "ontop plaything_2,table_1": ["yes", "no"], "ontop plaything_6,plaything_2": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["yes", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["yes", "no"], "inside plaything_2,carton_2": ["yes", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["yes", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_6": ["no", "no"], "nextto plaything_2,plaything_7": ["yes", "no"], "nextto plaything_2,plaything_8": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_6,plaything_2": ["yes", "no"], "nextto plaything_6,plaything_7": ["yes", "no"], "nextto plaything_6,plaything_8": ["yes", "no"], "nextto plaything_6,carton_1": ["yes", "no"], "nextto plaything_6,carton_2": ["yes", "no"], "nextto plaything_6,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["yes", "no"], "nextto plaything_7,plaything_6": ["yes", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["yes", "no"], "nextto plaything_8,plaything_6": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.42028985507246375, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.3770491803278688, "no_correct": 23, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "open": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5416666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5416666666666666, "no_correct": 13, "no_total": 24}, "inside": {"accuracy": 0.375, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "nextto": {"accuracy": 0.20833333333333334, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.18181818181818182, "no_correct": 4, "no_total": 22}}}, "step": 1, "actions": ["open-container(carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_6": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_6": ["no", "no"], "ontop plaything_2,plaything_7": ["yes", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["yes", "no"], "ontop plaything_2,table_1": ["yes", "no"], "ontop plaything_6,plaything_2": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["yes", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["yes", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_6": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["yes", "no"], "inside plaything_2,carton_2": ["yes", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["yes", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_6": ["no", "no"], "nextto plaything_2,plaything_7": ["yes", "no"], "nextto plaything_2,plaything_8": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_2,carton_2": ["yes", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_6,plaything_2": ["yes", "no"], "nextto plaything_6,plaything_7": ["yes", "no"], "nextto plaything_6,plaything_8": ["yes", "no"], "nextto plaything_6,carton_1": ["yes", "no"], "nextto plaything_6,carton_2": ["yes", "no"], "nextto plaything_6,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["yes", "no"], "nextto plaything_7,plaything_6": ["yes", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["yes", "no"], "nextto plaything_8,plaything_6": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.4057971014492754, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.3770491803278688, "no_correct": 23, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5833333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5833333333333334, "no_correct": 14, "no_total": 24}, "inside": {"accuracy": 0.375, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.13636363636363635, "no_correct": 3, "no_total": 22}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. It is on the floor near the bottom left corner of the image. Next, I will determine the position and reach of the robotic arm, which is on the right side of the image. The robotic arm appears to be able to move towards the plaything_2. Given the proximity and the ability of the robotic arm to hold objects, it is reasonable to conclude that the plaything_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. It is on the floor near the bottom left corner of the image. Next, I will determine the position and reach of the robotic arm, which is on the right side of the image. The robotic arm appears to be able to move towards the plaything_2. Given the proximity and the ability of the robotic arm to hold objects, it is reasonable to conclude that the plaything_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on a table in the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table but not directly on it. The reach of the agent would depend on its range of motion and whether it can extend to the table where the carton_1 is placed. Given that the agent is close to the table and can hold objects, it is reasonable to assume that it can reach the carton_1 if it is within its operational range. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on a table in the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table but not directly on it. The reach of the agent would depend on its range of motion and whether it can extend to the table where the carton_1 is placed. Given that the agent is close to the table and can hold objects, it is reasonable to assume that it can reach the carton_1 if it is within its operational range. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. The table_1 is located towards the left side of the room, near the window. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image, extending towards the center. The reach of the robotic arm needs to be assessed to see if it can extend to the table_1. Given the layout and the positioning of the robotic arm, it appears that the arm can reach the table_1 without any obstructions. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the table_1 in the image. The table_1 is located towards the left side of the room, near the window. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image, extending towards the center. The reach of the robotic arm needs to be assessed to see if it can extend to the table_1. Given the layout and the positioning of the robotic arm, it appears that the arm can reach the table_1 without any obstructions. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on a table in the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table but not directly on it. The reach of the agent would depend on its range and the obstacles between it and the carton_1. Given the image, the robotic arm appears to be close enough to the table to potentially reach the carton_1 if it moves forward. Therefore, the carton_1 is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on a table in the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table but not directly on it. The reach of the agent would depend on its range and the obstacles between it and the carton_1. Given the image, the robotic arm appears to be close enough to the table to potentially reach the carton_1 if it moves forward. Therefore, the carton_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton labeled \"carton_1\" which appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton labeled \"carton_1\" which appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the plaything_2, which is labeled in the image. The plaything_2 is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the plaything_2. The robotic arm is not holding the plaything_2; it is positioned near it but not in contact with it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the plaything_2, which is labeled in the image. The plaything_2 is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the plaything_2. The robotic arm is not holding the plaything_2; it is positioned near it but not in contact with it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on a table in the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table but not directly on it. The reach of the agent would depend on its range and the obstacles between it and the carton_1. Given the image, the robotic arm appears to be close enough to the table to potentially reach the carton_1 if it moves forward. Therefore, the carton_1 is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on a table in the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table but not directly on it. The reach of the agent would depend on its range and the obstacles between it and the carton_1. Given the image, the robotic arm appears to be close enough to the table to potentially reach the carton_1 if it moves forward. Therefore, the carton_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton labeled \"carton_1\" which appears to be closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the carton labeled \"carton_1\" in the image. Then, I will check if the carton is open or closed. In the image, there is a carton labeled \"carton_1\" which appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the plaything_2, which is labeled in the image. The plaything_2 is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the plaything_2. The robotic arm is not holding the plaything_2; it is positioned near it but not in contact with it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the plaything_2, which is labeled in the image. The plaything_2 is located near the center of the image, on the floor. Finally, I will check if the robotic arm is holding the plaything_2. The robotic arm is not holding the plaything_2; it is positioned near it but not in contact with it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_6": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_6": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_6,plaything_2": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_6": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["yes", "no"], "nextto plaything_6,plaything_2": ["no", "no"], "nextto plaything_6,plaything_7": ["yes", "no"], "nextto plaything_6,plaything_8": ["yes", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["no", "no"], "nextto plaything_6,table_1": ["yes", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_6": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7971014492753623, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.819672131147541, "no_correct": 50, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 24, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6363636363636364, "no_correct": 14, "no_total": 22}}}, "step": 1, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_6": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_6": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_6,plaything_2": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_6": ["no", "no"], "nextto plaything_2,plaything_7": ["yes", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["yes", "no"], "nextto plaything_6,plaything_2": ["no", "no"], "nextto plaything_6,plaything_7": ["yes", "no"], "nextto plaything_6,plaything_8": ["yes", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["no", "no"], "nextto plaything_6,table_1": ["yes", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_6": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.782608695652174, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.8032786885245902, "no_correct": 49, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 24, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5909090909090909, "no_correct": 13, "no_total": 22}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I need to identify what \"plaything_2\" refers to in the image. It appears to be the robotic arm. Next, I need to determine if the robotic arm is within the reach of the agent, which is also the robotic arm. Since the robotic arm is the agent itself, it is inherently in its own reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I need to identify what \"plaything_2\" refers to in the image. It appears to be the robotic arm. Next, I need to determine if the robotic arm is within the reach of the agent, which is also the robotic arm. Since the robotic arm is the agent itself, it is inherently in its own reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton is placed on the floor in the center of the room. Next, I will determine the position and range of the robotic arm. The robotic arm is positioned near the carton, but it is not directly adjacent to it. Considering the size of the robotic arm and the distance to the carton, the arm can likely reach the carton without any obstructions. Therefore, the carton_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton is placed on the floor in the center of the room. Next, I will determine the position and range of the robotic arm. The robotic arm is positioned near the carton, but it is not directly adjacent to it. Considering the size of the robotic arm and the distance to the carton, the arm can likely reach the carton without any obstructions. Therefore, the carton_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 in the image. It appears to be a small object on the floor near the center of the room. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned to the right of the image and seems to have a range that extends towards the center. Given its position and the distance to the plaything_2, it looks like the arm can reach the plaything_2 without any obstruction. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the plaything_2 in the image. It appears to be a small object on the floor near the center of the room. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned to the right of the image and seems to have a range that extends towards the center. Given its position and the distance to the plaything_2, it looks like the arm can reach the plaything_2 without any obstruction. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm located on the right side of the image. Next, I will look for the plaything_2, which is a small object. The plaything_2 is near the center of the image, close to the lion. The robotic arm is positioned near the plaything_2 but does not appear to be holding it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm located on the right side of the image. Next, I will look for the plaything_2, which is a small object. The plaything_2 is near the center of the image, close to the lion. The robotic arm is positioned near the plaything_2 but does not appear to be holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop plaything_2,carton_1": ["no", 0.0, 0.0, "First, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a lion toy, and the carton_1 is a large open box. Next, I will check the position of the plaything_2 relative to the carton_1. The lion toy is standing next to the carton, but it is not on top of it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a lion toy, and the carton_1 is a large open box. Next, I will check the position of the plaything_2 relative to the carton_1. The lion toy is standing next to the carton, but it is not on top of it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_2,carton_1": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a lion statue or figure. The carton_1 is a large open box. I will then determine their relative positions. The lion statue is positioned next to the open box, indicating that they are adjacent to each other. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a lion statue or figure. The carton_1 is a large open box. I will then determine their relative positions. The lion statue is positioned next to the open box, indicating that they are adjacent to each other. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_2,plaything_1": {"before": false, "after": false}, "ontop plaything_2,plaything_2": {"before": null, "after": false}, "ontop plaything_2,plaything_3": {"before": false, "after": false}, "ontop plaything_2,plaything_4": {"before": false, "after": false}, "ontop plaything_2,table_1": {"before": false, "after": false}, "nextto plaything_2,plaything_1": {"before": false, "after": false}, "nextto plaything_2,plaything_2": {"before": null, "after": false}, "nextto plaything_2,plaything_3": {"before": false, "after": false}, "nextto plaything_2,plaything_4": {"before": false, "after": false}, "nextto plaything_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I need to identify what \"plaything_2\" refers to in the image. It appears to be the lion statue on the floor. Next, I need to determine if the robotic arm, which is the agent, can reach the lion statue. The lion statue is on the floor, and the agent (robotic arm) is positioned nearby. The image shows that the agent is close enough to interact with the lion statue, indicating that it is within reach.", true, "<explanation>\nFirst, I need to identify what \"plaything_2\" refers to in the image. It appears to be the lion statue on the floor. Next, I need to determine if the robotic arm, which is the agent, can reach the lion statue. The lion statue is on the floor, and the agent (robotic arm) is positioned nearby. The image shows that the agent is close enough to interact with the lion statue, indicating that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 1, "actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "yes"], "open carton_1": ["yes", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I need to identify what \"plaything_2\" refers to in the image. It appears to be the robotic arm. Next, I need to determine if the robotic arm is within the reach of the agent, which is also the robotic arm. Since the robotic arm is the agent itself, it is inherently in its own reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I need to identify what \"plaything_2\" refers to in the image. It appears to be the robotic arm. Next, I need to determine if the robotic arm is within the reach of the agent, which is also the robotic arm. Since the robotic arm is the agent itself, it is inherently in its own reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton is placed on the floor in the center of the room. Next, I will determine the position and range of the robotic arm, which is located near the right side of the image. The robotic arm appears to be mounted on a stand and has a considerable reach. Given the size of the room and the position of the carton, the robotic arm should be able to move towards the carton_1 without any obstructions. Therefore, the carton_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton is placed on the floor in the center of the room. Next, I will determine the position and range of the robotic arm, which is located near the right side of the image. The robotic arm appears to be mounted on a stand and has a considerable reach. Given the size of the room and the position of the carton, the robotic arm should be able to move towards the carton_1 without any obstructions. Therefore, the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I need to identify what \"plaything_2\" refers to in the image. It appears to be the robotic arm. Next, I need to determine if the robotic arm is within the reach of the agent, which is also the robotic arm. Since the robotic arm is the agent itself, it is inherently in its own reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I need to identify what \"plaything_2\" refers to in the image. It appears to be the robotic arm. Next, I need to determine if the robotic arm is within the reach of the agent, which is also the robotic arm. Since the robotic arm is the agent itself, it is inherently in its own reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the plaything_2, which is a small toy. The image shows a robotic arm, but it is not holding any object. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the plaything_2, which is a small toy. The image shows a robotic arm, but it is not holding any object. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop plaything_2,carton_1": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a toy located near the center of the image. The carton_1 is a large box situated in the middle of the room. I will then determine the relative positions of these two objects. The plaything_2 is positioned on top of the carton_1, as it is clearly resting on the box.", false, "<explanation>\nFirst, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a toy located near the center of the image. The carton_1 is a large box situated in the middle of the room. I will then determine the relative positions of these two objects. The plaything_2 is positioned on top of the carton_1, as it is clearly resting on the box.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto plaything_2,carton_1": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a lion statue or figure, and the carton_1 is a large box. Next, I will determine their relative positions. The lion statue is positioned next to the large box, indicating that they are adjacent to each other. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the plaything_2 and the carton_1 in the image. The plaything_2 appears to be a lion statue or figure, and the carton_1 is a large box. Next, I will determine their relative positions. The lion statue is positioned next to the large box, indicating that they are adjacent to each other. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_2,plaything_1": {"before": false, "after": false}, "ontop plaything_2,plaything_2": {"before": null, "after": false}, "ontop plaything_2,plaything_3": {"before": false, "after": false}, "ontop plaything_2,plaything_4": {"before": false, "after": false}, "ontop plaything_2,table_1": {"before": false, "after": false}, "nextto plaything_2,plaything_1": {"before": false, "after": false}, "nextto plaything_2,plaything_2": {"before": null, "after": false}, "nextto plaything_2,plaything_3": {"before": false, "after": false}, "nextto plaything_2,plaything_4": {"before": false, "after": false}, "nextto plaything_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I need to identify what \"plaything_2\" refers to in the image. It appears to be the lion statue on the floor. Next, I need to determine if the robotic arm (agent) can reach the lion statue. The lion statue is on the floor, and the agent is a robotic arm which can hold objects. Since the lion statue is on the floor and the agent can interact with objects on the floor, it is within reach of the agent.", true, "<explanation>\nFirst, I need to identify what \"plaything_2\" refers to in the image. It appears to be the lion statue on the floor. Next, I need to determine if the robotic arm (agent) can reach the lion statue. The lion statue is on the floor, and the agent is a robotic arm which can hold objects. Since the lion statue is on the floor and the agent can interact with objects on the floor, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 1, "actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "yes"], "open carton_1": ["yes", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. It appears to be on the floor near the bottom center of the image. Next, I will determine the position and reach of the robotic arm, which is mounted on the wall near the window. The robotic arm is positioned above the couch and the plaything_2. Considering the height and reach of the robotic arm, it seems capable of moving down to the floor level to interact with the plaything_2. Therefore, the plaything_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. It appears to be on the floor near the bottom center of the image. Next, I will determine the position and reach of the robotic arm, which is mounted on the wall near the window. The robotic arm is positioned above the couch and the plaything_2. Considering the height and reach of the robotic arm, it seems capable of moving down to the floor level to interact with the plaything_2. Therefore, the plaything_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_4 in the image. It appears to be on the floor near the bottom center of the image. Next, I will determine the position of the robotic arm, which is mounted on the wall to the right of the window. The robotic arm is positioned above and to the right of the plaything_4. Considering the height and reach of the robotic arm, it seems capable of moving downwards to interact with objects on the floor. Therefore, the plaything_4 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the plaything_4 in the image. It appears to be on the floor near the bottom center of the image. Next, I will determine the position of the robotic arm, which is mounted on the wall to the right of the window. The robotic arm is positioned above and to the right of the plaything_4. Considering the height and reach of the robotic arm, it seems capable of moving downwards to interact with objects on the floor. Therefore, the plaything_4 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. It appears to be on the floor near the bottom center of the image. Next, I will determine the position and reach of the robotic arm, which is mounted on the wall near the window. The robotic arm is positioned above the couch and the plaything_2. Considering the height and reach of the robotic arm, it seems capable of moving downwards to interact with objects on the floor. Therefore, the plaything_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. It appears to be on the floor near the bottom center of the image. Next, I will determine the position and reach of the robotic arm, which is mounted on the wall near the window. The robotic arm is positioned above the couch and the plaything_2. Considering the height and reach of the robotic arm, it seems capable of moving downwards to interact with objects on the floor. Therefore, the plaything_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding plaything_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is labeled as \"plaything_2\" and is located near the bottom center of the image. Next, I will look for the plaything_4 in the image. The plaything_4 is a small red object located near the bottom right corner of the image. Then, I will check if the agent is holding the plaything_4. The agent is not holding any object, and the plaything_4 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is labeled as \"plaything_2\" and is located near the bottom center of the image. Next, I will look for the plaything_4 in the image. The plaything_4 is a small red object located near the bottom right corner of the image. Then, I will check if the agent is holding the plaything_4. The agent is not holding any object, and the plaything_4 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is labeled as \"A_Spawning_Agent\" and is located near the center of the image. Next, I will look for the object \"plaything_2\" in the image. The object \"plaything_2\" is labeled and is positioned near the robotic arm. The robotic arm is holding the object \"plaything_2\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is labeled as \"A_Spawning_Agent\" and is located near the center of the image. Next, I will look for the object \"plaything_2\" in the image. The object \"plaything_2\" is labeled and is positioned near the robotic arm. The robotic arm is holding the object \"plaything_2\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop plaything_2,plaything_4": ["yes", 0.0, 0.0, "First, I will identify the objects mentioned in the question: \"plaything_2\" and \"plaything_4\". In the image, \"plaything_2\" is a toy dinosaur, and \"plaything_4\" is a robotic arm. Next, I will determine the positions of these objects. The toy dinosaur is clearly placed on top of the robotic arm. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the objects mentioned in the question: \"plaything_2\" and \"plaything_4\". In the image, \"plaything_2\" is a toy dinosaur, and \"plaything_4\" is a robotic arm. Next, I will determine the positions of these objects. The toy dinosaur is clearly placed on top of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto plaything_2,plaything_4": ["yes", 0.0, 0.0, "First, I will identify the positions of plaything_2 and plaything_4 in the image. Plaything_2 is located near the center of the image, close to the robotic arm. Plaything_4 is positioned to the right of plaything_2, near the window. Since plaything_2 and plaything_4 are in close proximity and aligned horizontally, it can be concluded that plaything_2 is next to plaything_4.", false, "<explanation>\nFirst, I will identify the positions of plaything_2 and plaything_4 in the image. Plaything_2 is located near the center of the image, close to the robotic arm. Plaything_4 is positioned to the right of plaything_2, near the window. Since plaything_2 and plaything_4 are in close proximity and aligned horizontally, it can be concluded that plaything_2 is next to plaything_4.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_2,plaything_1": {"before": false, "after": false}, "ontop plaything_2,plaything_2": {"before": null, "after": false}, "ontop plaything_2,plaything_3": {"before": false, "after": false}, "ontop plaything_2,carton_1": {"before": false, "after": false}, "ontop plaything_2,table_1": {"before": false, "after": false}, "nextto plaything_2,plaything_1": {"before": false, "after": false}, "nextto plaything_2,plaything_2": {"before": null, "after": false}, "nextto plaything_2,plaything_3": {"before": false, "after": false}, "nextto plaything_2,carton_1": {"before": false, "after": false}, "nextto plaything_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the carton_1 in the image. The carton_1 is located in the foreground, near the robotic arm. Next, I will assess whether the robotic arm can reach the carton_1. The robotic arm is positioned close to the carton_1 and appears to have the capability to interact with it. Given the proximity and the design of the robotic arm, it is reasonable to conclude that the carton_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the carton_1 in the image. The carton_1 is located in the foreground, near the robotic arm. Next, I will assess whether the robotic arm can reach the carton_1. The robotic arm is positioned close to the carton_1 and appears to have the capability to interact with it. Given the proximity and the design of the robotic arm, it is reasonable to conclude that the carton_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 in the image. It appears to be a toy located on a surface within the red outlined area. Next, I will determine if the robotic arm, which is the agent, can reach this toy. The robotic arm is positioned close to the toy, and given its range of motion, it seems capable of reaching the toy. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the plaything_2 in the image. It appears to be a toy located on a surface within the red outlined area. Next, I will determine if the robotic arm, which is the agent, can reach this toy. The robotic arm is positioned close to the toy, and given its range of motion, it seems capable of reaching the toy. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_3": ["yes", 0.0, 0.0, "First, I will identify the plaything_3 in the image. It appears to be a toy located on a surface within the red outlined area. Next, I will determine if the robotic arm, which is the agent, can reach the plaything_3. The robotic arm is positioned close to the toy, and it seems to be within the reach of the arm's range. Therefore, the plaything_3 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the plaything_3 in the image. It appears to be a toy located on a surface within the red outlined area. Next, I will determine if the robotic arm, which is the agent, can reach the plaything_3. The robotic arm is positioned close to the toy, and it seems to be within the reach of the arm's range. Therefore, the plaything_3 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_4": ["yes", 0.0, 0.0, "First, I will identify the plaything_4 in the image. It is located within a red outlined area. Next, I will determine if the robotic arm (the agent) can reach the plaything_4. The robotic arm is positioned close to the plaything_4, and the plaything_4 is within the reach of the robotic arm's end effector. Therefore, the plaything_4 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the plaything_4 in the image. It is located within a red outlined area. Next, I will determine if the robotic arm (the agent) can reach the plaything_4. The robotic arm is positioned close to the plaything_4, and the plaything_4 is within the reach of the robotic arm's end effector. Therefore, the plaything_4 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_4": ["no", "no"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_4,plaything_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 1, "actions": ["grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "holding plaything_2": ["yes", "yes"], "holding plaything_4": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_4,plaything_2": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_4,plaything_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.375, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["yes", "no"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["yes", "yes"], "holding plaything_3": ["yes", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["yes", "no"], "ontop plaything_3,plaything_2": ["yes", "no"], "ontop plaything_3,plaything_4": ["yes", "no"], "ontop plaything_3,carton_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,plaything_3": ["yes", "no"], "ontop plaything_4,carton_1": ["yes", "no"], "inside plaything_2,carton_1": ["yes", "no"], "inside plaything_3,carton_1": ["yes", "no"], "inside plaything_4,carton_1": ["yes", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,plaything_4": ["no", "no"], "nextto plaything_3,carton_1": ["yes", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.3103448275862069, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.24, "no_correct": 6, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.1111111111111111, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.1111111111111111, "no_correct": 1, "no_total": 9}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 3, "actions": []}], "remaining_actions": []}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the gym_shoe_1, with its end effector close to the shoe. Since the robotic arm can hold objects and is within a virtual household simulator where it can interact with objects on the floor, it is reasonable to conclude that the gym_shoe_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the gym_shoe_1, with its end effector close to the shoe. Since the robotic arm can hold objects and is within a virtual household simulator where it can interact with objects on the floor, it is reasonable to conclude that the gym_shoe_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the gym_shoe_1, extending towards it. Since the robotic arm is close to the gym_shoe_1 and appears to be able to reach it, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the gym_shoe_1, extending towards it. Since the robotic arm is close to the gym_shoe_1 and appears to be able to reach it, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the gym shoe to determine if the robotic arm is holding it. The image shows the robotic arm holding a black gym shoe. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the gym shoe to determine if the robotic arm is holding it. The image shows the robotic arm holding a black gym shoe. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is located on the floor near the center of the room. Next, I will determine if the robotic arm is in a position to reach the sock_2. The robotic arm is positioned to the right of the sock_2 and appears to be able to extend towards it. Given the robotic arm's range and orientation, it seems capable of reaching the sock_2.", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is located on the floor near the center of the room. Next, I will determine if the robotic arm is in a position to reach the sock_2. The robotic arm is positioned to the right of the sock_2 and appears to be able to extend towards it. Given the robotic arm's range and orientation, it seems capable of reaching the sock_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is a shoe that is being held by the robotic arm. Next, I will determine if the shoe is within the reach of the agent, which is the robotic arm. Since the shoe is already in the grasp of the robotic arm, it is definitely within the reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is a shoe that is being held by the robotic arm. Next, I will determine if the shoe is within the reach of the agent, which is the robotic arm. Since the shoe is already in the grasp of the robotic arm, it is definitely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. The table_1 is located in the background, near the kitchen area. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to move towards the table_1. Given the positioning and the range of the robotic arm, it seems that the table_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the table_1 in the image. The table_1 is located in the background, near the kitchen area. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to move towards the table_1. Given the positioning and the range of the robotic arm, it seems that the table_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will check if the robotic arm is holding any object. The object in question is the gym shoe, labeled as \"gym_shoe_1\". Upon examining the image, the robotic arm is indeed holding the gym shoe. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will check if the robotic arm is holding any object. The object in question is the gym shoe, labeled as \"gym_shoe_1\". Upon examining the image, the robotic arm is indeed holding the gym shoe. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. The table_1 is located in the background, near the kitchen area. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to move towards the table_1. Given the positioning and the range of the robotic arm, it seems that the table_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the table_1 in the image. The table_1 is located in the background, near the kitchen area. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to move towards the table_1. Given the positioning and the range of the robotic arm, it seems that the table_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"nextto gym_shoe_1,table_1": ["no", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is located on the floor near the left side of the image. Next, I will locate the table_1, which is a tall, narrow table with a conical top, positioned towards the center-right of the image. I will then determine the spatial relationship between the gym_shoe_1 and the table_1. The gym_shoe_1 is on the floor, and the table_1 is standing upright, but they are not in close proximity. The gym_shoe_1 is not next to the table_1; it is further away from it.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is located on the floor near the left side of the image. Next, I will locate the table_1, which is a tall, narrow table with a conical top, positioned towards the center-right of the image. I will then determine the spatial relationship between the gym_shoe_1 and the table_1. The gym_shoe_1 is on the floor, and the table_1 is standing upright, but they are not in close proximity. The gym_shoe_1 is not next to the table_1; it is further away from it.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1, which is a shoe on the floor near the left side of the image. The robotic arm is not holding the shoe; it is standing on a platform with other objects. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1, which is a shoe on the floor near the left side of the image. The robotic arm is not holding the shoe; it is standing on a platform with other objects. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the left side of the room. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned on a platform with some objects around it, but it does not appear to be extended towards the gym_shoe_1. The gym_shoe_1 is not within the immediate reach of the robotic arm, as there is a distance between the arm and the shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_2 in the image. The sock_2 is located on the floor near the left side of the image. Then, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding any object, and the sock_2 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["no", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}}}, "step": 3, "actions": ["place-next-to(gym_shoe_1, table_1)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 4, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 5, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 6, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 7, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 8, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 9, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 10, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 11, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 12, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 13, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 14, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 15, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 16, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 17, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 18, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 19, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 20, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned above the gym_shoe_1, and it appears to have the capability to move downwards to interact with objects on the floor. Since the gym_shoe_1 is within the reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned above the gym_shoe_1, and it appears to have the capability to move downwards to interact with objects on the floor. Since the gym_shoe_1 is within the reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned above the gym_shoe_1, and it appears to have the capability to move downwards to interact with objects on the floor. Since the gym_shoe_1 is within the reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the base of the structure. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned above the gym_shoe_1, and it appears to have the capability to move downwards to interact with objects on the floor. Since the gym_shoe_1 is within the reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the gym shoe to determine if the robotic arm is holding it. The image shows the robotic arm holding a black gym shoe. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the gym shoe to determine if the robotic arm is holding it. The image shows the robotic arm holding a black gym shoe. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. Then, I will determine if the robotic arm is in a position to reach and interact with the sock_2. The sock_2 is located on the floor, and the robotic arm is positioned nearby, holding a shoe. The arm appears to be able to move towards the sock_2, indicating that it is within reach.", true, "<explanation>\nFirst, I will identify the sock_2 in the image. Then, I will determine if the robotic arm is in a position to reach and interact with the sock_2. The sock_2 is located on the floor, and the robotic arm is positioned nearby, holding a shoe. The arm appears to be able to move towards the sock_2, indicating that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is a shoe that the robotic arm is holding. Next, I will determine if the shoe is within the reach of the robotic arm. Since the robotic arm is currently holding the shoe, it is already in contact with the shoe. Therefore, the shoe is in reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is a shoe that the robotic arm is holding. Next, I will determine if the shoe is within the reach of the robotic arm. Since the robotic arm is currently holding the shoe, it is already in contact with the shoe. Therefore, the shoe is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, sock_2)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will check if the robotic arm is holding any object. The object in the robotic arm's grip is a gym shoe. The question specifies \"gym_shoe_1,\" which matches the object being held by the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will check if the robotic arm is holding any object. The object in the robotic arm's grip is a gym shoe. The question specifies \"gym_shoe_1,\" which matches the object being held by the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. Then, I will determine if the robotic arm is in a position to reach and interact with the sock_2. The sock_2 is located on the floor, and the robotic arm is positioned nearby, holding a shoe. The arm appears to be able to move towards the sock_2, indicating that it is within reach.", true, "<explanation>\nFirst, I will identify the sock_2 in the image. Then, I will determine if the robotic arm is in a position to reach and interact with the sock_2. The sock_2 is located on the floor, and the robotic arm is positioned nearby, holding a shoe. The arm appears to be able to move towards the sock_2, indicating that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"nextto gym_shoe_1,sock_2": ["yes", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and sock_2 in the image. The gym_shoe_1 is located on the floor near the center of the image, and the sock_2 is also on the floor but slightly to the right of the gym_shoe_1. They are both on the same surface, which is the floor, and appear to be close to each other. Based on their proximity, it can be concluded that the gym_shoe_1 is next to the sock_2.", true, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and sock_2 in the image. The gym_shoe_1 is located on the floor near the center of the image, and the sock_2 is also on the floor but slightly to the right of the gym_shoe_1. They are both on the same surface, which is the floor, and appear to be close to each other. Based on their proximity, it can be concluded that the gym_shoe_1 is next to the sock_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the center of the image. Since the robotic arm is not holding the gym_shoe_1, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the center of the image. Since the robotic arm is not holding the gym_shoe_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the location of the sock_2 in the image. The sock_2 is on the floor near the center of the room. Next, I will determine if the robotic arm (agent) can reach it. The robotic arm is positioned on the right side of the image, and it appears to have a range of motion that allows it to move towards the center. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the robotic arm can reach the sock_2 on the floor.", true, "<explanation>\nFirst, I will identify the location of the sock_2 in the image. The sock_2 is on the floor near the center of the room. Next, I will determine if the robotic arm (agent) can reach it. The robotic arm is positioned on the right side of the image, and it appears to have a range of motion that allows it to move towards the center. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the robotic arm can reach the sock_2 on the floor.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the center of the image. Since the robotic arm is not holding the gym_shoe_1, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the center of the image. Since the robotic arm is not holding the gym_shoe_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": {"holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for any objects that the robotic arm might be holding. The image shows the robotic arm positioned near a shelf with various items, but there is no visible sock_2 in its grasp. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for any objects that the robotic arm might be holding. The image shows the robotic arm positioned near a shelf with various items, but there is no visible sock_2 in its grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop sock_2,gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the sock_2 and the gym_shoe_1 in the image. The sock_2 appears to be a small, light-colored object on the floor. The gym_shoe_1 is a larger, white shoe placed on a table. I will then check the relative positions of these objects. The sock_2 is on the floor, while the gym_shoe_1 is on a table, and there is no visible connection or overlap between them. Therefore, the sock_2 is not on top of the gym_shoe_1.", true, "<explanation>\nFirst, I will identify the sock_2 and the gym_shoe_1 in the image. The sock_2 appears to be a small, light-colored object on the floor. The gym_shoe_1 is a larger, white shoe placed on a table. I will then check the relative positions of these objects. The sock_2 is on the floor, while the gym_shoe_1 is on a table, and there is no visible connection or overlap between them. Therefore, the sock_2 is not on top of the gym_shoe_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto sock_2,gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the sock_2 and gym_shoe_1 in the image. The sock_2 is a small, light-colored object on the floor near the center of the image. The gym_shoe_1 is a larger, white shoe on a stand to the left of the sock_2. By examining their positions, I can see that the sock_2 is indeed next to the gym_shoe_1.", false, "<explanation>\nFirst, I will identify the sock_2 and gym_shoe_1 in the image. The sock_2 is a small, light-colored object on the floor near the center of the image. The gym_shoe_1 is a larger, white shoe on a stand to the left of the sock_2. By examining their positions, I can see that the sock_2 is indeed next to the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop sock_2,sock_1": {"before": false, "after": false}, "ontop sock_2,sock_2": {"before": null, "after": false}, "ontop sock_2,table_1": {"before": false, "after": false}, "ontop sock_2,table_2": {"before": false, "after": false}, "ontop sock_2,cabinet_1": {"before": false, "after": false}, "nextto sock_2,sock_1": {"before": false, "after": false}, "nextto sock_2,sock_2": {"before": null, "after": false}, "nextto sock_2,table_1": {"before": false, "after": false}, "nextto sock_2,table_2": {"before": false, "after": false}, "nextto sock_2,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on a shelf. Next, I will determine if the robotic arm (the agent) can reach the gym_shoe_1. The robotic arm is positioned near the shelf and appears to have a range that allows it to interact with objects on the shelf. Since the gym_shoe_1 is on the shelf and the robotic arm is close to it, it is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on a shelf. Next, I will determine if the robotic arm (the agent) can reach the gym_shoe_1. The robotic arm is positioned near the shelf and appears to have a range that allows it to interact with objects on the shelf. Since the gym_shoe_1 is on the shelf and the robotic arm is close to it, it is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for any objects that the robotic arm might be holding. The image shows the robotic arm positioned near a shelf with various items, but there is no visible sock_2 in its grasp. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for any objects that the robotic arm might be holding. The image shows the robotic arm positioned near a shelf with various items, but there is no visible sock_2 in its grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on a shelf. Next, I will determine if the robotic arm (the agent) can reach the gym_shoe_1. The robotic arm is positioned near the shelf and appears to have a range that allows it to interact with objects on the shelf. Since the gym_shoe_1 is on the shelf and the robotic arm is close to it, it is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on a shelf. Next, I will determine if the robotic arm (the agent) can reach the gym_shoe_1. The robotic arm is positioned near the shelf and appears to have a range that allows it to interact with objects on the shelf. Since the gym_shoe_1 is on the shelf and the robotic arm is close to it, it is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for any objects that the robotic arm might be holding. The image shows the robotic arm positioned near a shelf with various items, but there is no visible sock_2 in its grasp. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for any objects that the robotic arm might be holding. The image shows the robotic arm positioned near a shelf with various items, but there is no visible sock_2 in its grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto sock_2,gym_shoe_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["place-next-to(gym_shoe_1, sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "yes"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto sock_2,gym_shoe_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.875, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 5, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "yes"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto sock_2,gym_shoe_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.875, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 6, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the chair. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned near the wall and appears to have a range of motion that could extend to the floor. Given the proximity and the positioning of the robotic arm, it seems that the gym_shoe_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the chair. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned near the wall and appears to have a range of motion that could extend to the floor. Given the proximity and the positioning of the robotic arm, it seems that the gym_shoe_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sock_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sock_1 in the image. The sock_1 is on the floor near the chair. Next, I will determine if the robotic arm can reach the sock_1. The robotic arm is positioned near the wall and appears to have a range of motion that could potentially reach the sock_1 on the floor. Given that the sock_1 is within the robotic arm's reach, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the sock_1 in the image. The sock_1 is on the floor near the chair. Next, I will determine if the robotic arm can reach the sock_1. The robotic arm is positioned near the wall and appears to have a range of motion that could potentially reach the sock_1 on the floor. Given that the sock_1 is within the robotic arm's reach, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table in the image. The table is located in the center of the room, with a marble top and blue chairs around it. Next, I will determine the position of the robotic arm. The robotic arm is mounted on the wall to the right of the table. I will assess whether the robotic arm can reach the table by considering its range and the obstacles in its path. The robotic arm is positioned near the wall and does not appear to have any significant obstacles between it and the table. Given the layout, the robotic arm should be able to reach the table without any major obstructions. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the table in the image. The table is located in the center of the room, with a marble top and blue chairs around it. Next, I will determine the position of the robotic arm. The robotic arm is mounted on the wall to the right of the table. I will assess whether the robotic arm can reach the table by considering its range and the obstacles in its path. The robotic arm is positioned near the wall and does not appear to have any significant obstacles between it and the table. Given the layout, the robotic arm should be able to reach the table without any major obstructions. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 is the long table in the foreground with a marble top and blue chairs around it. Next, I will determine if the robotic arm can reach the table_2. The robotic arm is positioned near the wall, and it appears to have a range of motion that allows it to extend towards the table. Given the positioning and the length of the robotic arm, it seems capable of reaching the table_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 is the long table in the foreground with a marble top and blue chairs around it. Next, I will determine if the robotic arm can reach the table_2. The robotic arm is positioned near the wall, and it appears to have a range of motion that allows it to extend towards the table. Given the positioning and the length of the robotic arm, it seems capable of reaching the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the chair. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned near the wall and appears to have a range of motion that could potentially reach the shoe. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume the arm can reach the shoe.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. It is on the floor near the chair. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is positioned near the wall and appears to have a range of motion that could potentially reach the shoe. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume the arm can reach the shoe.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the sock_1, which is an object that can be held by the agent. The sock_1 is on the floor near the chair. Since the robotic arm is not holding the sock_1, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the sock_1, which is an object that can be held by the agent. The sock_1 is on the floor near the chair. Since the robotic arm is not holding the sock_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"gym_shoe_1\" to see if it is being held by the robotic arm. The shoe labeled \"gym_shoe_1\" is clearly visible and is being held by the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"gym_shoe_1\" to see if it is being held by the robotic arm. The shoe labeled \"gym_shoe_1\" is clearly visible and is being held by the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop gym_shoe_1,sock_1": ["no", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is clearly visible on the robotic arm, which is extended over the table. The sock_1 is also visible on the table, but it is not directly underneath the robotic arm or the shoe. The shoe is not placed on top of the sock; instead, it is held by the robotic arm above the table. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is clearly visible on the robotic arm, which is extended over the table. The sock_1 is also visible on the table, but it is not directly underneath the robotic arm or the shoe. The shoe is not placed on top of the sock; instead, it is held by the robotic arm above the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,table_1": ["no", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is clearly visible and is being held by a robotic arm. Next, I will locate the table_1 in the image. The table_1 is a long, white surface in the foreground. The position of the gym_shoe_1 relative to the table_1 needs to be determined. The gym_shoe_1 is not on the table_1; it is being held by the robotic arm, which is above the table. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is clearly visible and is being held by a robotic arm. Next, I will locate the table_1 in the image. The table_1 is a long, white surface in the foreground. The position of the gym_shoe_1 relative to the table_1 needs to be determined. The gym_shoe_1 is not on the table_1; it is being held by the robotic arm, which is above the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,table_2": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is located near the robotic arm. Next, I will look for the table_2. The table_2 is the white marble table in the foreground. The gym_shoe_1 is positioned on top of the table_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is located near the robotic arm. Next, I will look for the table_2. The table_2 is the white marble table in the foreground. The gym_shoe_1 is positioned on top of the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,sock_1": ["no", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is located on the table, and the sock_1 is also on the table. Next, I will determine if they are next to each other. The gym_shoe_1 and sock_1 are both on the same table, but they are not in direct physical contact. Therefore, they are not next to each other.", true, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is located on the table, and the sock_1 is also on the table. Next, I will determine if they are next to each other. The gym_shoe_1 and sock_1 are both on the same table, but they are not in direct physical contact. Therefore, they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,table_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is located on the robotic arm. Next, I will locate the table_1, which is a marble table in the room. The robotic arm holding the gym_shoe_1 is positioned next to the table_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is located on the robotic arm. Next, I will locate the table_1, which is a marble table in the room. The robotic arm holding the gym_shoe_1 is positioned next to the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,table_2": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is located on the robotic arm. Next, I will locate the table_2, which is the white table in the foreground. I will then determine the spatial relationship between the gym_shoe_1 and the table_2. The gym_shoe_1 is held by the robotic arm, which is positioned next to the table_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is located on the robotic arm. Next, I will locate the table_2, which is the white table in the foreground. I will then determine the spatial relationship between the gym_shoe_1 and the table_2. The gym_shoe_1 is held by the robotic arm, which is positioned next to the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"gym_shoe_1\" to see if it is being held by the robotic arm. The shoe is clearly visible and is being grasped by the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"gym_shoe_1\" to see if it is being held by the robotic arm. The shoe is clearly visible and is being grasped by the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 is the one with the shoe on it, located in the foreground. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned near the table_2 and appears to be able to extend its reach to the shoe on the table. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 is the one with the shoe on it, located in the foreground. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned near the table_2 and appears to be able to extend its reach to the shoe on the table. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"nextto gym_shoe_1,table_2": ["no", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. Then, I will locate the table_2. Next, I will determine the spatial relationship between the gym_shoe_1 and the table_2 to see if they are next to each other. In the image, the gym_shoe_1 is on the floor near the table_2, but they are not directly adjacent. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. Then, I will locate the table_2. Next, I will determine the spatial relationship between the gym_shoe_1 and the table_2 to see if they are next to each other. In the image, the gym_shoe_1 is on the floor near the table_2, but they are not directly adjacent. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is marked with a red box. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is indeed holding the object within the red box, which is the gym_shoe_1.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is marked with a red box. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is indeed holding the object within the red box, which is the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is marked with a red box. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is indeed holding the object within the red box, which is the gym_shoe_1.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is marked with a red box. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is indeed holding the object within the red box, which is the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 is the long table in the foreground with a blue and white checkered chair next to it. Next, I will determine if the robotic arm (agent) can reach the table_2. The robotic arm is positioned on the wall to the right of the table, and it appears to be able to extend towards the table. Given the positioning and the range of the robotic arm, it seems that the arm can reach the table_2.", true, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 is the long table in the foreground with a blue and white checkered chair next to it. Next, I will determine if the robotic arm (agent) can reach the table_2. The robotic arm is positioned on the wall to the right of the table, and it appears to be able to extend towards the table. Given the positioning and the range of the robotic arm, it seems that the arm can reach the table_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is marked with a red box. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is indeed holding the object within the red box, which is the gym_shoe_1.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is marked with a red box. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is indeed holding the object within the red box, which is the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 is the long table in the foreground with a blue and white checkered chair next to it. Next, I will determine if the robotic arm (agent) can reach the table_2. The robotic arm is positioned on the wall to the right of the table, and it appears to be able to extend towards the table. Given the positioning and the range of the robotic arm, it seems that the arm can reach the table_2.", true, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 is the long table in the foreground with a blue and white checkered chair next to it. Next, I will determine if the robotic arm (agent) can reach the table_2. The robotic arm is positioned on the wall to the right of the table, and it appears to be able to extend towards the table. Given the positioning and the range of the robotic arm, it seems that the arm can reach the table_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["no", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["yes", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["no", "no"], "nextto notebook_1,table_2": ["no", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 0.6875, "no_correct": 22, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.5833333333333334, "no_correct": 7, "no_total": 12}}}, "step": 1, "actions": ["grasp(gym_shoe_1)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding notebook_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["yes", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["yes", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["no", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["yes", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["no", "no"], "nextto notebook_1,table_2": ["no", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 0.6875, "no_correct": 22, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7142857142857143, "no_correct": 10, "no_total": 14}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6923076923076923, "no_correct": 9, "no_total": 13}}}, "step": 2, "actions": ["place-next-to(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "no"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["no", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["no", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["no", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.717948717948718, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.7878787878787878, "no_correct": 26, "no_total": 33, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}}}, "step": 3, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "no"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["no", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["yes", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["no", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.696969696969697, "no_correct": 23, "no_total": 33, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}}}, "step": 4, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the table. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is mounted on the wall and appears to have a range of motion that allows it to reach objects on the floor. Given the position of the robotic arm and the location of the gym_shoe_1, it seems that the arm can reach the shoe.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the table. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is mounted on the wall and appears to have a range of motion that allows it to reach objects on the floor. Given the position of the robotic arm and the location of the gym_shoe_1, it seems that the arm can reach the shoe.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sock_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sock_1 in the image. The sock_1 is on the floor near the table. Next, I will determine if the robotic arm can reach the sock_1. The robotic arm is mounted on the wall and appears to have a range of motion that allows it to reach objects on the floor. Given its position and the proximity of the sock_1 to the robotic arm, it is reasonable to conclude that the sock_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the sock_1 in the image. The sock_1 is on the floor near the table. Next, I will determine if the robotic arm can reach the sock_1. The robotic arm is mounted on the wall and appears to have a range of motion that allows it to reach objects on the floor. Given its position and the proximity of the sock_1 to the robotic arm, it is reasonable to conclude that the sock_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the location of the table_1 in the image. The table_1 is clearly marked with a red outline in the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall to the right of the table_1. The agent's reach typically extends from its base, and since the robotic arm is positioned close to the table_1, it is likely within the agent's reach. The agent can move and manipulate objects on the table_1, indicating that the table_1 is within the agent's operational range.", false, "<explanation>\nFirst, I will identify the location of the table_1 in the image. The table_1 is clearly marked with a red outline in the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall to the right of the table_1. The agent's reach typically extends from its base, and since the robotic arm is positioned close to the table_1, it is likely within the agent's reach. The agent can move and manipulate objects on the table_1, indicating that the table_1 is within the agent's operational range.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the location of the table_2 in the image. The table_2 is located in the center of the room, near the chairs and the robotic arm. Next, I will assess the range and reach of the robotic arm. The robotic arm is positioned on the wall to the right of the table_2. The arm appears to have a long reach, extending towards the table. Given the positioning and the length of the robotic arm, it seems capable of reaching the table_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the table_2 in the image. The table_2 is located in the center of the room, near the chairs and the robotic arm. Next, I will assess the range and reach of the robotic arm. The robotic arm is positioned on the wall to the right of the table_2. The arm appears to have a long reach, extending towards the table. Given the positioning and the length of the robotic arm, it seems capable of reaching the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the table. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is mounted on the wall and appears to have a range of motion that allows it to reach objects on the floor. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the robotic arm can reach the gym_shoe_1.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is on the floor near the table. Next, I will determine if the robotic arm can reach the gym_shoe_1. The robotic arm is mounted on the wall and appears to have a range of motion that allows it to reach objects on the floor. Given the positioning and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the robotic arm can reach the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the sock_1 in the image. The sock_1 is a small object on the floor near the table. The robotic arm is positioned above the table and does not appear to be holding any object. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the sock_1 in the image. The sock_1 is a small object on the floor near the table. The robotic arm is positioned above the table and does not appear to be holding any object. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the gym_shoe_1. The gym_shoe_1 is located on the table in the center of the image. The robotic arm is positioned near the table but does not appear to be holding the gym_shoe_1. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the gym_shoe_1. The gym_shoe_1 is located on the table in the center of the image. The robotic arm is positioned near the table but does not appear to be holding the gym_shoe_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop gym_shoe_1,sock_1": ["yes", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is located on the table, and the sock_1 is also on the table. Next, I will determine the relative positions of these objects. The gym_shoe_1 is positioned on top of the sock_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is located on the table, and the sock_1 is also on the table. Next, I will determine the relative positions of these objects. The gym_shoe_1 is positioned on top of the sock_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop gym_shoe_1,table_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. Then, I will check if it is on top of table_1. In the image, the gym_shoe_1 is clearly visible and it is placed on the table_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. Then, I will check if it is on top of table_1. In the image, the gym_shoe_1 is clearly visible and it is placed on the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop gym_shoe_1,table_2": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. Then, I will check if it is on top of the table_2. In the image, the gym_shoe_1 is clearly visible and it is placed on the table_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. Then, I will check if it is on top of the table_2. In the image, the gym_shoe_1 is clearly visible and it is placed on the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,sock_1": ["no", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is located on the table, and the sock_1 is also on the table. Next, I will determine if they are next to each other. Observing the image, the gym_shoe_1 and sock_1 are both on the same table, but they are not adjacent to each other. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and sock_1 in the image. The gym_shoe_1 is located on the table, and the sock_1 is also on the table. Next, I will determine if they are next to each other. Observing the image, the gym_shoe_1 and sock_1 are both on the same table, but they are not adjacent to each other. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,table_1": ["yes", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and table_1 in the image. The gym_shoe_1 is located on the floor near the table_1. The table_1 is a long white table, and the gym_shoe_1 is positioned close to it, indicating that they are next to each other.", false, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and table_1 in the image. The gym_shoe_1 is located on the floor near the table_1. The table_1 is a long white table, and the gym_shoe_1 is positioned close to it, indicating that they are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,table_2": ["yes", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and table_2 in the image. The gym_shoe_1 is located on the floor near the table_2. Next, I will determine if they are in close proximity to each other. The gym_shoe_1 is placed on the floor adjacent to the table_2, indicating that they are next to each other. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and table_2 in the image. The gym_shoe_1 is located on the floor near the table_2. Next, I will determine if they are in close proximity to each other. The gym_shoe_1 is placed on the floor adjacent to the table_2, indicating that they are next to each other. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is located on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2, and it appears that the arm can easily extend to grab the sock. Therefore, the sock_2 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is located on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2, and it appears that the arm can easily extend to grab the sock. Therefore, the sock_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is clearly visible in the image, held by the robotic arm. Next, I will determine if the gym_shoe_1 is within the reach of the agent, which is the robotic arm. Since the robotic arm is holding the gym_shoe_1, it is definitely within the reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is clearly visible in the image, held by the robotic arm. Next, I will determine if the gym_shoe_1 is within the reach of the agent, which is the robotic arm. Since the robotic arm is holding the gym_shoe_1, it is definitely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the cabinet in the image. The cabinet is located on the left side of the image, near the wall. Next, I will determine the position of the robotic arm. The robotic arm is positioned in the lower right part of the image, extending towards the center. The arm is holding an object and appears to be within a reachable distance from the cabinet. Given the layout and the positioning of the arm, it seems that the arm could potentially reach the cabinet if it were to move or extend further. Therefore, the cabinet is in reach of the agent.", false, "<explanation>\nFirst, I will identify the cabinet in the image. The cabinet is located on the left side of the image, near the wall. Next, I will determine the position of the robotic arm. The robotic arm is positioned in the lower right part of the image, extending towards the center. The arm is holding an object and appears to be within a reachable distance from the cabinet. Given the layout and the positioning of the arm, it seems that the arm could potentially reach the cabinet if it were to move or extend further. Therefore, the cabinet is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable table_2": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(table_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable table_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 is located in the background, near the window. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to extend towards the table_2. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 is located in the background, near the window. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to extend towards the table_2. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym shoe is placed on a piece of paper or cloth. Next, I will determine if the robotic arm can reach the shoe. The robotic arm is positioned close to the shoe, and it appears to be able to grasp or interact with the shoe without any obstacles in the way. Therefore, the gym_shoe_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym shoe is placed on a piece of paper or cloth. Next, I will determine if the robotic arm can reach the shoe. The robotic arm is positioned close to the shoe, and it appears to be able to grasp or interact with the shoe without any obstacles in the way. Therefore, the gym_shoe_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the gym shoe to determine if the robotic arm is holding it. The image shows a robotic arm holding a shoe, which appears to be a gym shoe. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm. Next, I will look for the gym shoe to determine if the robotic arm is holding it. The image shows a robotic arm holding a shoe, which appears to be a gym shoe. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 appears to be in the background, near the window. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and seems to have a range of motion that allows it to extend towards the table_2. Given the positioning and the apparent reach of the robotic arm, it is reasonable to conclude that the table_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 appears to be in the background, near the window. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and seems to have a range of motion that allows it to extend towards the table_2. Given the positioning and the apparent reach of the robotic arm, it is reasonable to conclude that the table_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"nextto gym_shoe_1,table_2": ["no", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. Then, I will locate the table_2. Next, I will determine the spatial relationship between the gym_shoe_1 and the table_2 to see if they are next to each other. In the image, the gym_shoe_1 is on the floor near the table_2, but they are not directly adjacent. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. Then, I will locate the table_2. Next, I will determine the spatial relationship between the gym_shoe_1 and the table_2 to see if they are next to each other. In the image, the gym_shoe_1 is on the floor near the table_2, but they are not directly adjacent. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is not visible in the image. Since the agent is a robotic arm and there is no indication that it is holding any object, and specifically no gym_shoe_1 is seen in its grasp, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the gym_shoe_1 in the image. The gym_shoe_1 is not visible in the image. Since the agent is a robotic arm and there is no indication that it is holding any object, and specifically no gym_shoe_1 is seen in its grasp, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. Then, I will determine if the robotic arm (agent) can reach it based on its position and the range of motion of the arm. The gym_shoe_1 is on the floor near the table. The robotic arm is positioned above the table, and it appears to have a long range of motion. Given the positioning and the arm's reach, it seems plausible that the agent can reach the gym_shoe_1.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. Then, I will determine if the robotic arm (agent) can reach it based on its position and the range of motion of the arm. The gym_shoe_1 is on the floor near the table. The robotic arm is positioned above the table, and it appears to have a long range of motion. Given the positioning and the arm's reach, it seems plausible that the agent can reach the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_1 in the image. The sock_1 is not visible in the image. Since the agent is a robotic arm and there is no sock_1 being held by the robotic arm, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the sock_1 in the image. The sock_1 is not visible in the image. Since the agent is a robotic arm and there is no sock_1 being held by the robotic arm, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym shoe labeled \"gym_shoe_1\". The shoe is on the table, not in the robotic arm's grasp. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located on the right side of the image. Next, I will look for the gym shoe labeled \"gym_shoe_1\". The shoe is on the table, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop gym_shoe_1,table_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is located on the table. Next, I will check if the table_1 is present in the image. The table_1 is clearly marked with a red outline. Finally, I will determine if the gym_shoe_1 is on top of the table_1. The shoe is indeed placed on the table, confirming that it is on top of the table_1.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is located on the table. Next, I will check if the table_1 is present in the image. The table_1 is clearly marked with a red outline. Finally, I will determine if the gym_shoe_1 is on top of the table_1. The shoe is indeed placed on the table, confirming that it is on top of the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop gym_shoe_1,table_2": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. It is located near the window and appears to be on a surface. Next, I will locate table_2, which is marked with a red outline. The gym_shoe_1 is positioned on the table_2, as indicated by the red outline encompassing both the shoe and the table. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. It is located near the window and appears to be on a surface. Next, I will locate table_2, which is marked with a red outline. The gym_shoe_1 is positioned on the table_2, as indicated by the red outline encompassing both the shoe and the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,table_1": ["no", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and table_1 in the image. The gym_shoe_1 is located on the table_1. Since the shoe is on the table, it is not next to the table but rather on top of it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and table_1 in the image. The gym_shoe_1 is located on the table_1. Since the shoe is on the table, it is not next to the table but rather on top of it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,table_2": ["no", 0.0, 0.0, "First, I will identify the positions of the gym_shoe_1 and table_2 in the image. The gym_shoe_1 is located on the table_1, which is near the window. The table_2 is another table in the room. I will check if the gym_shoe_1 is next to table_2 by examining their relative positions. The gym_shoe_1 is on table_1, and table_2 is in the background, but they are not adjacent to each other. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the positions of the gym_shoe_1 and table_2 in the image. The gym_shoe_1 is located on the table_1, which is near the window. The table_2 is another table in the room. I will check if the gym_shoe_1 is next to table_2 by examining their relative positions. The gym_shoe_1 is on table_1, and table_2 is in the background, but they are not adjacent to each other. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 appears to be on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2, and given that it can hold objects, it is likely capable of reaching and interacting with the sock_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 appears to be on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2, and given that it can hold objects, it is likely capable of reaching and interacting with the sock_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym shoe is being held by the robotic arm, which is the agent. Since the shoe is already in the agent's grasp, it is definitely within reach. The agent can manipulate and interact with the shoe as it is currently being held.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym shoe is being held by the robotic arm, which is the agent. Since the shoe is already in the agent's grasp, it is definitely within reach. The agent can manipulate and interact with the shoe as it is currently being held.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 appears to be on the left side of the image, against the wall. Next, I will determine the position of the robotic arm. The robotic arm is positioned in the lower right part of the image, extending towards the center. The arm is holding a shoe and is not in direct contact with the cabinet_1. The distance between the robotic arm and the cabinet_1 seems to be more than the arm's reach, considering the arm's current position and orientation. Therefore, the cabinet_1 is not in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 appears to be on the left side of the image, against the wall. Next, I will determine the position of the robotic arm. The robotic arm is positioned in the lower right part of the image, extending towards the center. The arm is holding a shoe and is not in direct contact with the cabinet_1. The distance between the robotic arm and the cabinet_1 seems to be more than the arm's reach, considering the arm's current position and orientation. Therefore, the cabinet_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable table_2": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, sock_2)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent appears to be a robotic arm. Next, I will look for any objects that the robotic arm is holding. The robotic arm is holding a shoe, which is identified as a gym shoe. The question specifically asks if the agent is holding the gym_shoe_1. Based on the image, the shoe being held by the robotic arm matches the description of gym_shoe_1.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent appears to be a robotic arm. Next, I will look for any objects that the robotic arm is holding. The robotic arm is holding a shoe, which is identified as a gym shoe. The question specifically asks if the agent is holding the gym_shoe_1. Based on the image, the shoe being held by the robotic arm matches the description of gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is located on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2, and it appears that the arm can easily extend to grab the sock. Therefore, the sock_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is located on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2, and it appears that the arm can easily extend to grab the sock. Therefore, the sock_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"nextto gym_shoe_1,sock_2": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 and sock_2 in the image. The gym_shoe_1 is located on the floor near the bottom left of the image. The sock_2 is also on the floor, slightly to the right of the gym_shoe_1. By examining their positions, it appears that the gym_shoe_1 is indeed next to the sock_2.", true, "<explanation>\nFirst, I will identify the gym_shoe_1 and sock_2 in the image. The gym_shoe_1 is located on the floor near the bottom left of the image. The sock_2 is also on the floor, slightly to the right of the gym_shoe_1. By examining their positions, it appears that the gym_shoe_1 is indeed next to the sock_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the floor with a gym shoe visible on the floor. The robotic arm does not appear to be holding the gym shoe; it is simply in proximity to it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the floor with a gym shoe visible on the floor. The robotic arm does not appear to be holding the gym shoe; it is simply in proximity to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "executed but failed"}, {"action": "grasp(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2 and appears to have the capability to move towards it. Given the context of a virtual household simulator where the agent can interact with objects, it is reasonable to assume the robotic arm can reach the sock_2.", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is on the floor near the robotic arm. Next, I will determine if the robotic arm can reach the sock_2. The robotic arm is positioned close to the sock_2 and appears to have the capability to move towards it. Given the context of a virtual household simulator where the agent can interact with objects, it is reasonable to assume the robotic arm can reach the sock_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the floor with a gym shoe visible on the floor. The robotic arm does not appear to be holding the gym shoe; it is simply in proximity to it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. The image shows the robotic arm positioned near the floor with a gym shoe visible on the floor. The robotic arm does not appear to be holding the gym shoe; it is simply in proximity to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": {"holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner. Next, I will look for the sock labeled as \"sock_2\" in the image. The sock is on the floor near the bottom center of the image. Since the robotic arm is not holding the sock and the sock is on the floor, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner. Next, I will look for the sock labeled as \"sock_2\" in the image. The sock is on the floor near the bottom center of the image. Since the robotic arm is not holding the sock and the sock is on the floor, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop sock_2,gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the sock_2 and the gym_shoe_1 in the image. The sock_2 is located on the floor near the bottom of the image. The gym_shoe_1 is also on the floor, but it is positioned slightly above and to the left of the sock_2. There is no indication that the sock_2 is on top of the gym_shoe_1; they are both on the floor separately.", true, "<explanation>\nFirst, I will identify the sock_2 and the gym_shoe_1 in the image. The sock_2 is located on the floor near the bottom of the image. The gym_shoe_1 is also on the floor, but it is positioned slightly above and to the left of the sock_2. There is no indication that the sock_2 is on top of the gym_shoe_1; they are both on the floor separately.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop sock_2,table_2": ["no", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will look for the table_2. The table_2 is in the background, towards the right side of the image. I will then check if the sock_2 is on top of the table_2. The sock_2 is clearly on the floor and not on the table_2. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will look for the table_2. The table_2 is in the background, towards the right side of the image. I will then check if the sock_2 is on top of the table_2. The sock_2 is clearly on the floor and not on the table_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop sock_2,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will locate the cabinet_1, which is a piece of furniture in the room. The cabinet_1 is positioned against the wall in the background. I will then determine the relative positions of the sock_2 and the cabinet_1. The sock_2 is on the floor, and the cabinet_1 is against the wall, but there is no indication that the sock_2 is on top of the cabinet_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will locate the cabinet_1, which is a piece of furniture in the room. The cabinet_1 is positioned against the wall in the background. I will then determine the relative positions of the sock_2 and the cabinet_1. The sock_2 is on the floor, and the cabinet_1 is against the wall, but there is no indication that the sock_2 is on top of the cabinet_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto sock_2,gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the sock_2 and gym_shoe_1 in the image. The sock_2 is on the floor near the bottom left corner, and the gym_shoe_1 is also on the floor but slightly to the right of the sock_2. The distance between them appears to be minimal, indicating they are next to each other.", false, "<explanation>\nFirst, I will identify the sock_2 and gym_shoe_1 in the image. The sock_2 is on the floor near the bottom left corner, and the gym_shoe_1 is also on the floor but slightly to the right of the sock_2. The distance between them appears to be minimal, indicating they are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto sock_2,table_2": ["no", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will locate the table_2. The table_2 is in the background, towards the right side of the image. I will then determine the relative position of the sock_2 to the table_2. The sock_2 is on the floor and appears to be in front of the table_2, not next to it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will locate the table_2. The table_2 is in the background, towards the right side of the image. I will then determine the relative position of the sock_2 to the table_2. The sock_2 is on the floor and appears to be in front of the table_2, not next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto sock_2,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will locate the cabinet_1, which is a piece of furniture on the right side of the image. I will then determine the spatial relationship between the sock_2 and the cabinet_1. The sock_2 is indeed next to the cabinet_1, as it is positioned close to the cabinet on the floor.", false, "<explanation>\nFirst, I will identify the sock_2 in the image. The sock_2 is located on the floor near the bottom of the image. Next, I will locate the cabinet_1, which is a piece of furniture on the right side of the image. I will then determine the spatial relationship between the sock_2 and the cabinet_1. The sock_2 is indeed next to the cabinet_1, as it is positioned close to the cabinet on the floor.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop sock_2,sock_1": {"before": false, "after": false}, "ontop sock_2,sock_2": {"before": null, "after": false}, "ontop sock_2,table_1": {"before": false, "after": false}, "nextto sock_2,sock_1": {"before": false, "after": false}, "nextto sock_2,sock_2": {"before": null, "after": false}, "nextto sock_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner of the image. Next, I will look for the gym_shoe_1, which is a small object on the floor near the bottom center of the image. The robotic arm is positioned above the gym_shoe_1, and it appears to be holding the shoe. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner of the image. Next, I will look for the gym_shoe_1, which is a small object on the floor near the bottom center of the image. The robotic arm is positioned above the gym_shoe_1, and it appears to be holding the shoe. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 is located in the background, towards the right side of the room. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to extend towards the table_2. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 is located in the background, towards the right side of the room. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to extend towards the table_2. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner of the image. Next, I will look for the gym_shoe_1, which is a small object on the floor near the bottom center of the image. The robotic arm is positioned above the gym_shoe_1, and it appears to be holding the shoe. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is a robotic arm located in the upper right corner of the image. Next, I will look for the gym_shoe_1, which is a small object on the floor near the bottom center of the image. The robotic arm is positioned above the gym_shoe_1, and it appears to be holding the shoe. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the table_2 in the image. The table_2 is located in the background, towards the right side of the room. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to extend towards the table_2. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the table_2 in the image. The table_2 is located in the background, towards the right side of the room. Next, I will determine if the robotic arm can reach it. The robotic arm is positioned in the foreground and appears to be able to extend towards the table_2. Given the positioning and the range of the robotic arm, it seems that the table_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["no", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["no", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["no", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7692307692307693, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 0.8125, "no_correct": 26, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}}}, "step": 1, "actions": ["grasp(gym_shoe_1)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["no", "yes"], "holding notebook_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["yes", "no"], "ontop gym_shoe_1,table_1": ["yes", "no"], "ontop gym_shoe_1,table_2": ["yes", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["no", "no"], "ontop notebook_1,table_2": ["no", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["yes", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["yes", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["no", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["yes", "no"], "nextto sock_1,notebook_1": ["yes", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["no", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5897435897435898, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 0.59375, "no_correct": 19, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5384615384615384, "no_correct": 7, "no_total": 13}}}, "step": 2, "actions": ["navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}}}, "step": 3, "actions": ["navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "yes"], "ontop gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,table_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["place-next-to(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["yes", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.7222222222222222, "no_correct": 13, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 5, "actions": ["grasp(gym_shoe_1)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"], "ontop gym_shoe_1,table_1": ["yes", "no"], "ontop gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.4, "no_correct": 2, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 6, "actions": ["navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["no", "no"], "nextto sock_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}}}, "step": 7, "actions": ["place-next-to(gym_shoe_1, sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["yes", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 9, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "holding gym_shoe_1": ["yes", "no"], "holding sock_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_2": ["yes", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_2": ["no", "no"], "ontop sock_2,cabinet_1": ["no", "no"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_2,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_2": ["no", "no"], "nextto sock_2,cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 10, "actions": ["place-on(gym_shoe_1, table_2)", "grasp(sock_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["grasp(sock_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, and it appears to be able to move towards the apple_1. Since the robotic arm is in the same general area as the apple_1 and can likely reach down to grab it, the apple_1 is in reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, and it appears to be able to move towards the apple_1. Since the robotic arm is in the same general area as the apple_1 and can likely reach down to grab it, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Then, I will determine the reach of the robotic arm. The robotic arm is positioned on the kitchen counter, extending towards the right side of the image. The reach of the robotic arm is limited to the area it can physically move within the image. Since the robotic arm is on the counter and the refrigerator is to the left of the oven, it is not within the immediate reach of the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Then, I will determine the reach of the robotic arm. The robotic arm is positioned on the kitchen counter, extending towards the right side of the image. The reach of the robotic arm is limited to the area it can physically move within the image. Since the robotic arm is on the counter and the refrigerator is to the left of the oven, it is not within the immediate reach of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Next, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. To assess if the refrigerator is within reach of the agent, I need to consider the distance and the range of motion of the robotic arm. The robotic arm is positioned on the countertop and can likely extend towards the left side of the image. Given the proximity and the ability of the robotic arm to move, it appears that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.45535714285714285, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3877551020408163, "no_correct": 38, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5476190476190477, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.4864864864864865, "no_correct": 18, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 2, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 3, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 4, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 6, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 7, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 8, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.45535714285714285, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3877551020408163, "no_correct": 38, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.1, "no_correct": 4, "no_total": 40}}}, "step": 9, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 10, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 11, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 12, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 13, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.45535714285714285, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3877551020408163, "no_correct": 38, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.1, "no_correct": 4, "no_total": 40}}}, "step": 14, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.45535714285714285, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3877551020408163, "no_correct": 38, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.1, "no_correct": 4, "no_total": 40}}}, "step": 15, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 16, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4642857142857143, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3979591836734694, "no_correct": 39, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.125, "no_correct": 5, "no_total": 40}}}, "step": 17, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.45535714285714285, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3877551020408163, "no_correct": 38, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.1, "no_correct": 4, "no_total": 40}}}, "step": 18, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.45535714285714285, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3877551020408163, "no_correct": 38, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.1, "no_correct": 4, "no_total": 40}}}, "step": 19, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.45535714285714285, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.3877551020408163, "no_correct": 38, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5135135135135135, "no_correct": 19, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.1, "no_correct": 4, "no_total": 40}}}, "step": 20, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, with its end effector close to the apple_1. Since the robotic arm is designed to hold objects and is within a virtual household simulator where it can interact with objects on the counter, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, with its end effector close to the apple_1. Since the robotic arm is designed to hold objects and is within a virtual household simulator where it can interact with objects on the counter, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, extending towards the right side. The reach of the robotic arm appears to cover the area where the apple_2 is located. Therefore, the apple_2 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, extending towards the right side. The reach of the robotic arm appears to cover the area where the apple_2 is located. Therefore, the apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. It is located to the left side of the image, next to the oven. Then, I will determine the position of the robotic arm, which is on the countertop to the right. The robotic arm is not physically close enough to the electric_refrigerator_1 to be considered within reach. The distance between the robotic arm and the refrigerator is significant, and the arm does not appear to be able to move to the refrigerator's location. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. It is located to the left side of the image, next to the oven. Then, I will determine the position of the robotic arm, which is on the countertop to the right. The robotic arm is not physically close enough to the electric_refrigerator_1 to be considered within reach. The distance between the robotic arm and the refrigerator is significant, and the arm does not appear to be able to move to the refrigerator's location. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the left side of the image, next to the oven. Then, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the countertop, towards the right side of the image. The reach of the agent would typically be within a certain range from its current position. Since the refrigerator is on the opposite side of the room and not within the immediate vicinity of the robotic arm, it is not in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the left side of the image, next to the oven. Then, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the countertop, towards the right side of the image. The reach of the agent would typically be within a certain range from its current position. Since the refrigerator is on the opposite side of the room and not within the immediate vicinity of the robotic arm, it is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the right of the door. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the door, extending towards the right side of the image. The reach of the robotic arm is determined by its current position and the length of its extension. The robotic arm is close to the refrigerator and appears to be within its reach, as it is positioned in a way that suggests it could interact with the refrigerator if it moves slightly. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the right of the door. Next, I will determine the position of the robotic arm. The robotic arm is positioned near the door, extending towards the right side of the image. The reach of the robotic arm is determined by its current position and the length of its extension. The robotic arm is close to the refrigerator and appears to be within its reach, as it is positioned in a way that suggests it could interact with the refrigerator if it moves slightly. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["no", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "yes"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6944444444444444, "yes_accuracy": 0.7222222222222222, "yes_correct": 13, "yes_total": 18, "no_accuracy": 0.6904761904761905, "no_correct": 87, "no_total": 126, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.7142857142857143, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8214285714285714, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.86, "no_correct": 43, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4230769230769231, "no_correct": 22, "no_total": 52}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, with its end effector close to the apple_1. Since the robotic arm is designed to hold objects and is within a virtual household simulator where it can interact with objects on the counter, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, with its end effector close to the apple_1. Since the robotic arm is designed to hold objects and is within a virtual household simulator where it can interact with objects on the counter, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the counter, with its end effector close to the apple_2. The arm appears to be able to move and reach the apple_2 without any obstructions. Therefore, the apple_2 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the counter, with its end effector close to the apple_2. The arm appears to be able to move and reach the apple_2 without any obstructions. Therefore, the apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. It is situated to the left side of the image, next to the oven. Then, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. However, the electric_refrigerator_1 is located on the opposite side of the room from the robotic arm, and there are cabinets and other obstacles in between. Given the layout, the robotic arm cannot easily reach the electric_refrigerator_1 without moving around the kitchen, which is not indicated as possible in the current setup. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. It is situated to the left side of the image, next to the oven. Then, I will determine the position of the robotic arm, which is on the right side of the image, near the countertop. The robotic arm is capable of moving and holding objects. However, the electric_refrigerator_1 is located on the opposite side of the room from the robotic arm, and there are cabinets and other obstacles in between. Given the layout, the robotic arm cannot easily reach the electric_refrigerator_1 without moving around the kitchen, which is not indicated as possible in the current setup. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Then, I will determine the position of the robotic arm, which is on the countertop to the right of the refrigerator. The robotic arm is not physically close enough to the refrigerator to be considered within reach. The distance between the robotic arm and the refrigerator is significant, and the arm does not appear to be able to move to the refrigerator's location. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is situated to the left side of the image, next to the oven. Then, I will determine the position of the robotic arm, which is on the countertop to the right of the refrigerator. The robotic arm is not physically close enough to the refrigerator to be considered within reach. The distance between the robotic arm and the refrigerator is significant, and the arm does not appear to be able to move to the refrigerator's location. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the right of the door. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the door, extending towards the right side. The arm's reach needs to be assessed to see if it can extend to the refrigerator. The robotic arm appears to have a significant range, but it is currently holding an object and is not fully extended. Given the current position and the object it is holding, the robotic arm may not be able to reach the refrigerator without repositioning or dropping the object. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the right of the door. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the door, extending towards the right side. The arm's reach needs to be assessed to see if it can extend to the refrigerator. The robotic arm appears to have a significant range, but it is currently holding an object and is not fully extended. Given the current position and the object it is holding, the robotic arm may not be able to reach the refrigerator without repositioning or dropping the object. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the right of the door. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the door, extending towards the right side. The arm appears to be able to move and reach towards the right side of the image. Since the refrigerator is to the right of the door and the robotic arm is positioned in a way that suggests it can extend towards that area, it is reasonable to conclude that the electric_refrigerator_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the right of the door. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the door, extending towards the right side. The arm appears to be able to move and reach towards the right side of the image. Since the refrigerator is to the right of the door and the robotic arm is positioned in a way that suggests it can extend towards that area, it is reasonable to conclude that the electric_refrigerator_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric_refrigerator_1 in the image. Then, I will check if the refrigerator door is open or closed. In the image, there is an electric refrigerator, but it is not open. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look for the electric_refrigerator_1 in the image. Then, I will check if the refrigerator door is open or closed. In the image, there is an electric refrigerator, but it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will look for the electric_refrigerator_1 in the image. Then, I will check if the refrigerator door is open or closed. In the image, the refrigerator door is clearly visible and appears to be open.", true, "<explanation>\nFirst, I will look for the electric_refrigerator_1 in the image. Then, I will check if the refrigerator door is open or closed. In the image, the refrigerator door is clearly visible and appears to be open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, with its end effector close to the apple_1. The arm appears to be in a position where it can easily grasp the apple_1. Given that the robotic arm is designed to interact with objects on the counter and is currently near the apple_1, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned above the counter, with its end effector close to the apple_1. The arm appears to be in a position where it can easily grasp the apple_1. Given that the robotic arm is designed to interact with objects on the counter and is currently near the apple_1, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the apple_2, with its end effector close to the apple. The arm appears to be able to move towards the apple_2. Given that the robotic arm is designed to interact with objects and is in proximity to the apple_2, it is reasonable to conclude that the apple_2 is within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is on the kitchen counter. Next, I will determine the position and reach of the robotic arm. The robotic arm is positioned near the apple_2, with its end effector close to the apple. The arm appears to be able to move towards the apple_2. Given that the robotic arm is designed to interact with objects and is in proximity to the apple_2, it is reasonable to conclude that the apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the electric_refrigerator_1 in the image. It appears to be a virtual refrigerator in the environment. Next, I will determine if the robotic arm (the agent) is within a range to interact with it. The robotic arm is positioned near the refrigerator, suggesting it is within reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the electric_refrigerator_1 in the image. It appears to be a virtual refrigerator in the environment. Next, I will determine if the robotic arm (the agent) is within a range to interact with it. The robotic arm is positioned near the refrigerator, suggesting it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "yes"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["no", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6388888888888888, "yes_accuracy": 0.8333333333333334, "yes_correct": 15, "yes_total": 18, "no_accuracy": 0.6111111111111112, "no_correct": 77, "no_total": 126, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.7142857142857143, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7321428571428571, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.76, "no_correct": 38, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.375, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3269230769230769, "no_correct": 17, "no_total": 52}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable countertop_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6818181818181818, "no_correct": 15, "no_total": 22, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["yes", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["no", "yes"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "yes"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.4793388429752066, "yes_accuracy": 0.8333333333333334, "yes_correct": 15, "yes_total": 18, "no_accuracy": 0.4174757281553398, "no_correct": 43, "no_total": 103, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.4489795918367347, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.3953488372093023, "no_correct": 17, "no_total": 43}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.2857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.26666666666666666, "no_correct": 12, "no_total": 45}}}, "step": 4, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": []}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_1. The robotic arm is positioned near the table and appears to have a range that allows it to interact with objects on the table. Since the apple_1 is on the table and the robotic arm is close enough to reach it, the apple_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_1. The robotic arm is positioned near the table and appears to have a range that allows it to interact with objects on the table. Since the apple_1 is on the table and the robotic arm is close enough to reach it, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(orange_1, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(orange_1, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["yes", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["yes", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["yes", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["yes", "no"], "ontop countertop_1,yogurt_1": ["yes", "no"], "ontop countertop_1,soup_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["yes", "no"], "ontop meat_1,soup_1": ["yes", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["yes", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["yes", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["yes", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["yes", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["yes", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["yes", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["yes", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["yes", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["yes", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["yes", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["yes", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["yes", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["yes", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["yes", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,orange_1": ["yes", "no"], "ontop carrot_3,orange_3": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["yes", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["yes", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["yes", "no"], "ontop apple_2,yogurt_1": ["yes", "no"], "ontop apple_2,soup_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["yes", "no"], "ontop apple_2,orange_3": ["yes", "no"], "ontop orange_1,bread_1": ["yes", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["yes", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["yes", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["yes", "no"], "ontop orange_1,yogurt_1": ["yes", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["yes", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["yes", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["yes", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["yes", "no"], "ontop orange_3,apple_1": ["yes", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_1,orange_1": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5762004175365344, "yes_accuracy": 0.7631578947368421, "yes_correct": 29, "yes_total": 38, "no_accuracy": 0.5600907029478458, "no_correct": 247, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "ontop": {"accuracy": 0.5982142857142857, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.5943396226415094, "no_correct": 126, "no_total": 212}, "nextto": {"accuracy": 0.5357142857142857, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.5217391304347826, "no_correct": 108, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(orange_1, apple_2)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["yes", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["yes", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["yes", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["yes", "no"], "ontop countertop_1,soup_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["yes", "no"], "ontop meat_1,soup_1": ["yes", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["yes", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["yes", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["yes", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["yes", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["yes", "no"], "ontop yogurt_1,soup_1": ["yes", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["yes", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["yes", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["yes", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["yes", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["yes", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,orange_1": ["yes", "no"], "ontop carrot_3,orange_3": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["yes", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["yes", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["yes", "no"], "ontop apple_2,yogurt_1": ["yes", "no"], "ontop apple_2,soup_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["yes", "no"], "ontop apple_2,orange_3": ["yes", "no"], "ontop orange_1,bread_1": ["yes", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["yes", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["yes", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["yes", "no"], "ontop orange_1,yogurt_1": ["yes", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["yes", "no"], "ontop orange_1,apple_2": ["yes", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["yes", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["yes", "no"], "ontop orange_3,apple_1": ["yes", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_1,orange_1": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["no", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.605427974947808, "yes_accuracy": 0.8157894736842105, "yes_correct": 31, "yes_total": 38, "no_accuracy": 0.5873015873015873, "no_correct": 259, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "ontop": {"accuracy": 0.6339285714285714, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.6320754716981132, "no_correct": 134, "no_total": 212}, "nextto": {"accuracy": 0.5625, "yes_accuracy": 0.8235294117647058, "yes_correct": 14, "yes_total": 17, "no_accuracy": 0.5410628019323671, "no_correct": 112, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(orange_1, apple_2)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_1. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_1 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_1 is within the agent's reach.", false, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_1. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_1 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(orange_1, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(orange_1, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["yes", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["yes", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["yes", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["yes", "no"], "ontop countertop_1,soup_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["yes", "no"], "ontop meat_1,soup_1": ["yes", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["yes", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["yes", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["yes", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["yes", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["yes", "no"], "ontop yogurt_1,soup_1": ["yes", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["yes", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["yes", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["yes", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["yes", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["yes", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,orange_1": ["yes", "no"], "ontop carrot_3,orange_3": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["yes", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["yes", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["yes", "no"], "ontop apple_2,yogurt_1": ["yes", "no"], "ontop apple_2,soup_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["yes", "no"], "ontop apple_2,orange_3": ["yes", "no"], "ontop orange_1,bread_1": ["yes", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["yes", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["yes", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["yes", "no"], "ontop orange_1,yogurt_1": ["yes", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["yes", "no"], "ontop orange_1,apple_2": ["yes", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["yes", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["yes", "no"], "ontop orange_3,apple_1": ["yes", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_1,orange_1": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5970772442588727, "yes_accuracy": 0.7894736842105263, "yes_correct": 30, "yes_total": 38, "no_accuracy": 0.5804988662131519, "no_correct": 256, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "ontop": {"accuracy": 0.6339285714285714, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.6320754716981132, "no_correct": 134, "no_total": 212}, "nextto": {"accuracy": 0.5446428571428571, "yes_accuracy": 0.7647058823529411, "yes_correct": 13, "yes_total": 17, "no_accuracy": 0.5265700483091788, "no_correct": 109, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(orange_1, apple_2)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["yes", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["yes", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["yes", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["yes", "no"], "ontop countertop_1,soup_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["yes", "no"], "ontop meat_1,soup_1": ["yes", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["yes", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["yes", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["yes", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["yes", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["yes", "no"], "ontop yogurt_1,soup_1": ["yes", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["yes", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["yes", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["yes", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["yes", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["yes", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,orange_1": ["yes", "no"], "ontop carrot_3,orange_3": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["yes", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["yes", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["yes", "no"], "ontop apple_2,yogurt_1": ["yes", "no"], "ontop apple_2,soup_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["yes", "no"], "ontop apple_2,orange_3": ["yes", "no"], "ontop orange_1,bread_1": ["yes", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["yes", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["yes", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["yes", "no"], "ontop orange_1,yogurt_1": ["yes", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["yes", "no"], "ontop orange_1,apple_2": ["yes", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["yes", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["yes", "no"], "ontop orange_3,apple_1": ["yes", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_1,orange_1": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5949895615866388, "yes_accuracy": 0.7631578947368421, "yes_correct": 29, "yes_total": 38, "no_accuracy": 0.5804988662131519, "no_correct": 256, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "ontop": {"accuracy": 0.6339285714285714, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.6320754716981132, "no_correct": 134, "no_total": 212}, "nextto": {"accuracy": 0.5401785714285714, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.5265700483091788, "no_correct": 109, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(orange_1, apple_2)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_1. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_1 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_1 is within the agent's reach.", false, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_1. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_1 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(orange_1, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(orange_1, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm located near the table. Next, I will look for the orange_1, which is one of the oranges on the table. The orange_1 is clearly visible on the table. Finally, I will check if the robotic arm is holding the orange_1. The robotic arm is positioned in such a way that it appears to be holding the orange_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is placed on the table. Next, I will determine if the robotic arm (agent) can reach the apple_2. The robotic arm is positioned near the table and appears to be able to extend its reach to the table's surface. Given that the apple_2 is on the table and the robotic arm is close to it, it is reasonable to conclude that the apple_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["yes", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["yes", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["yes", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["yes", "no"], "ontop countertop_1,soup_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["yes", "no"], "ontop meat_1,soup_1": ["yes", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["yes", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["yes", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["yes", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["yes", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["yes", "no"], "ontop yogurt_1,soup_1": ["yes", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["yes", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["yes", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["yes", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["yes", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["yes", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,orange_1": ["yes", "no"], "ontop carrot_3,orange_3": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["yes", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["yes", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["yes", "no"], "ontop apple_2,yogurt_1": ["yes", "no"], "ontop apple_2,soup_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["yes", "no"], "ontop apple_2,orange_3": ["yes", "no"], "ontop orange_1,bread_1": ["yes", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["yes", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["yes", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["yes", "no"], "ontop orange_1,yogurt_1": ["yes", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["yes", "no"], "ontop orange_1,apple_2": ["yes", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["yes", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["yes", "no"], "ontop orange_3,apple_1": ["yes", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "yes"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_1,orange_1": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5949895615866388, "yes_accuracy": 0.8157894736842105, "yes_correct": 31, "yes_total": 38, "no_accuracy": 0.5759637188208617, "no_correct": 254, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "ontop": {"accuracy": 0.6339285714285714, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.6320754716981132, "no_correct": 134, "no_total": 212}, "nextto": {"accuracy": 0.5401785714285714, "yes_accuracy": 0.8235294117647058, "yes_correct": 14, "yes_total": 17, "no_accuracy": 0.5169082125603864, "no_correct": 107, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(orange_1, apple_2)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["yes", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["yes", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["yes", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["yes", "no"], "ontop countertop_1,soup_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["yes", "no"], "ontop meat_1,soup_1": ["yes", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["yes", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["yes", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["yes", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["yes", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["yes", "no"], "ontop yogurt_1,soup_1": ["yes", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["yes", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["yes", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["yes", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["yes", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["yes", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,orange_1": ["yes", "no"], "ontop carrot_3,orange_3": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["yes", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["yes", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,cheese_1": ["yes", "no"], "ontop apple_2,yogurt_1": ["yes", "no"], "ontop apple_2,soup_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["yes", "no"], "ontop apple_2,orange_3": ["yes", "no"], "ontop orange_1,bread_1": ["yes", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["yes", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["yes", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["yes", "no"], "ontop orange_1,yogurt_1": ["yes", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["yes", "no"], "ontop orange_1,apple_2": ["yes", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["yes", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["yes", "no"], "ontop orange_3,apple_1": ["yes", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_1": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "yes"], "nextto apple_1,orange_1": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["yes", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.592901878914405, "yes_accuracy": 0.7894736842105263, "yes_correct": 30, "yes_total": 38, "no_accuracy": 0.5759637188208617, "no_correct": 254, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "ontop": {"accuracy": 0.6339285714285714, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.6320754716981132, "no_correct": 134, "no_total": 212}, "nextto": {"accuracy": 0.5357142857142857, "yes_accuracy": 0.7647058823529411, "yes_correct": 13, "yes_total": 17, "no_accuracy": 0.5169082125603864, "no_correct": 107, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(orange_1, apple_2)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "problem_stats": {"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"action_correct": 6, "action_total": 16, "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.375, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"action_correct": 4, "action_total": 11, "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.36363636363636365, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"action_correct": 4, "action_total": 13, "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.3076923076923077, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"action_correct": 4, "action_total": 14, "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.2857142857142857, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"action_correct": 3, "action_total": 12, "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"action_correct": 2, "action_total": 28, "remaining_actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"], "action_accuracy": 0.07142857142857142, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"action_correct": 0, "action_total": 11, "remaining_actions": ["grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"action_correct": 0, "action_total": 13, "remaining_actions": ["navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"action_correct": 0, "action_total": 9, "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"action_correct": 0, "action_total": 9, "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 7, "remaining_actions": ["navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"action_correct": 0, "action_total": 9, "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"action_correct": 1, "action_total": 8, "remaining_actions": ["place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.125, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"action_correct": 1, "action_total": 8, "remaining_actions": ["place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.125, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 3, "remaining_actions": [], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"action_correct": 3, "action_total": 27, "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.1111111111111111, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"action_correct": 4, "action_total": 13, "remaining_actions": ["navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.3076923076923077, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"action_correct": 0, "action_total": 10, "remaining_actions": ["place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"action_correct": 3, "action_total": 13, "remaining_actions": ["grasp(sock_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.23076923076923078, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"action_correct": 1, "action_total": 22, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.045454545454545456, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"action_correct": 2, "action_total": 8, "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"action_correct": 4, "action_total": 5, "remaining_actions": [], "action_accuracy": 0.8, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.7510917030567685, "yes_accuracy": 0.9147727272727273, "yes_correct": 483, "yes_total": 528, "no_accuracy": 0.20754716981132076, "no_correct": 33, "no_total": 159, "correct": 516, "total": 687}, "holding": {"accuracy": 0.6727688787185355, "yes_accuracy": 0.5, "yes_correct": 16, "yes_total": 32, "no_accuracy": 0.6864197530864198, "no_correct": 278, "no_total": 405, "correct": 294, "total": 437}, "ontop": {"accuracy": 0.648082500805672, "yes_accuracy": 0.7014925373134329, "yes_correct": 188, "yes_total": 268, "no_accuracy": 0.6430335097001764, "no_correct": 1823, "no_total": 2835, "correct": 2011, "total": 3103}, "nextto": {"accuracy": 0.4534321624234612, "yes_accuracy": 0.6261682242990654, "yes_correct": 201, "yes_total": 321, "no_accuracy": 0.43350107836089147, "no_correct": 1206, "no_total": 2782, "correct": 1407, "total": 3103}, "open": {"accuracy": 0.35714285714285715, "yes_accuracy": 0.5102040816326531, "yes_correct": 25, "yes_total": 49, "no_accuracy": 0.27472527472527475, "no_correct": 25, "no_total": 91, "correct": 50, "total": 140}, "inside": {"accuracy": 0.8473895582329317, "yes_accuracy": 0.015873015873015872, "yes_correct": 1, "yes_total": 63, "no_accuracy": 0.967816091954023, "no_correct": 421, "no_total": 435, "correct": 422, "total": 498}}, "predicate_accuracy": 0.589859437751004, "macro_predicate_accuracy": 0.6216512767300376, "action_accuracy": 0.14189189189189189, "task_accuracy": 0.0, "fail_ratio": 0.0, "metadata": {"model_name": "OpenGVLab/InternVL3-8B", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/medium", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7211616_0"}}